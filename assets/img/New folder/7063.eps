%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Colleagues making decision at meeting.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 8/1/2020
%%BoundingBox: 0 0 3230 2000
%%HiResBoundingBox: 0 0 3230 2000
%%CropBox: 0 0 3230 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Colleagues making decision at meeting [Converted]</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Colleagues making decision at meeting. Business team discussing strategy in office flat vector illustration. Business idea concept for banner, website design or landing web page</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>people</rdf:li>
               <rdf:li>adult</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>businessman</rdf:li>
               <rdf:li>businesswoman</rdf:li>
               <rdf:li>team</rdf:li>
               <rdf:li>colleague</rdf:li>
               <rdf:li>meeting</rdf:li>
               <rdf:li>office</rdf:li>
               <rdf:li>discussing</rdf:li>
               <rdf:li>partnership</rdf:li>
               <rdf:li>planning</rdf:li>
               <rdf:li>working</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>brainstorming</rdf:li>
               <rdf:li>talking</rdf:li>
               <rdf:li>teamwork</rdf:li>
               <rdf:li>strategy</rdf:li>
               <rdf:li>company</rdf:li>
               <rdf:li>project</rdf:li>
               <rdf:li>solution</rdf:li>
               <rdf:li>idea</rdf:li>
               <rdf:li>making</rdf:li>
               <rdf:li>decision</rdf:li>
               <rdf:li>innovation</rdf:li>
               <rdf:li>bulb</rdf:li>
               <rdf:li>happy</rdf:li>
               <rdf:li>cooler</rdf:li>
               <rdf:li>drink</rdf:li>
               <rdf:li>coffee</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>web</rdf:li>
               <rdf:li>landing</rdf:li>
               <rdf:li>page</rdf:li>
               <rdf:li>template</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>website</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>character</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-08-01T15:24:03+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-08-01T15:24:04+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-08-01T15:24:04+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWP+cvN&#xA;J0GyiaKNZbu5ZlhV68QFA5MabmlRtmdodJ40jZqIac2XgHmkflP8wr3UNUjsNRijH1iohliBWjAV&#xA;owJaoNMzNZ2bGEOKBOzTh1BJoox/zL05NT1GJ9NvV0TSpJoNQ8xFYhZRTW8fqSoV9T6weP2OSxEF&#xA;/hFc1PhmvNy7Qlx+eH5Y25Cy6tIGKc2UWV8xShlBSQLATHIPqstY3ow4Ntth8GXctq0P5y/lvMbl&#xA;YtWLvaO0ToLW75SOsvoMsC+lW4IkIU+lyweDLuW1tr+dX5ZXNxHBFrIDSrA6PJb3UUfG6EBiJlki&#xA;WMV+uQ8qt8PMcqYThl3LbLNI1aw1jS7XVNPkM1hexLPazFHj5xuKq3GQKwBG4qMrIo0UovArsVdi&#xA;rsVdirsVdirsVdirsVdiqB1jW9J0azN7qlylpajlWWSvGqo0hG1d+KGnj0G+EAnkqTf8rN8iFwi6&#xA;xE8jGMKiLI7H1nMcZAVSSHZfhPQ9ehGS8OXctsnyCoDXde0jQNKm1bV7lbTTrfgJ7hwxVfUdY1qF&#xA;DHd3A6YYxJNBUkH5p+QDFBKNYiKXDmKEhJTydSwcU4VHD0zzr9kFSaBlrLw5dyLTG084eXry4jgt&#xA;Lo3Eksz2ymKKZ0E0ZfnG7hOCMPSY0YjbfoRgMSlOcirHrv8AMHyZaahNp9zqsUd5bs8c0RD/AAvG&#xA;sbMtQtOQFwm1e/scmIFbR2n+ZdF1C8a0srgzzKnqMUjk9PiQD/e8fTrRhtyrkTEhUyY8VLeAr/nX&#xA;AFQX6VT+Qf8AI2L/AJqy7wfxRYcaOHTKWbsVdiqQecPKw1+yiSOQRXVuS0LtupDU5K1N96DfM3Q6&#xA;vwZGxYLTmxcYSPyn+Xt1p2pJf6jLGxgqYYYiTViKcmJC9PDMzWdpRnDhgObVh05ibKa6h+W3krUd&#xA;RutQvNNEtxeq4u1Ms6wyGSL0GdoFcQ+oYvh9Thyp3zUjJICnLpQt/wAqPIFuQ0Wl0fkrs5uLlnZ0&#xA;S6QO7NIWdiuoXHJmqTzqakLQ+LJFJfpX5I/l/YQ3sbWcty97cTXBmkuJ1khEtwbkJbukimEI3HeO&#xA;jNQciThOaRWlW9/JryJNoE2iW1m1nazx+gzJLJKwiMVtA6j1mlFWgsIUqRUceQ+IklGaV2tM1hhi&#xA;ghSGFBHFEoSONRRVVRQAAdABlSV+KuxV2KuxV2KuxV2KuxV2KuxV2Koe+0+xv4DBewJcQsHUxyKG&#xA;UiRGicUP8yOyn2OEGlSw+SPKBkjkGj2iSQnlC6RKhQ8y/wAJUCnxEnbvh4z3qneRVSubW2uoxHcR&#xA;LLGrxyqjgECSF1ljbfujoGHuMbVKD5F8ls8TtodizwSJNEzW8ZKyRl2RhUdVaViPc1yXGe9UXZeW&#xA;/L9hJHLY6db2rxACNoYlSgUMBTiB2kb7zgMiVTHAqT3Pk3yndXDXNzo9nPO3MtJJCjEmRzI5NQd2&#xA;Y1J65LjPeqNstI0uxeR7K0htnlZ3laJFQs0jcnZuIFSzbk4CSVRbCqkVpUUr/t4FQP6Mf/loP/Iu&#xA;H/mjLvF8vtP62HB5o4ZSzdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqG1CK8ltH&#xA;Wzm9C42KOQCNuxqD1ycCAdxYYyBI2Q0GpXEGmPc6rGIJIiVYAg86UoVFe+TOMGVR3YiZAuTF7/zd&#xA;qc8h+rsLaH9lVALU92I/VmbDSxHPdxpZyeShbeaNahcMZ/VXukgBB+nY/jkpaaB6IGaQZZp+urf6&#xA;fJPbRFrqIfFbVFeXah8DmDPDwyo8u9yo5OIWOatpCatwkm1GQc5SCkCgUjArtUeORymPKKYcXVH5&#xA;UzdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQ1xfRQkqPjfwHb&#xA;5nLI4yWJlSR3HmY/WTb8JFIbjVV2/XXMqOnFW0HNvSVeZrmZjDEzkru5BJO/QZdgiA15Sl9vbWQt&#xA;1lu3kX1WZYhGoNONKs1SNt+gyyUpXQYACt1aXSoIZ2tJJmN2FZ/hX92KKXAqaNuB4bZEZCRdbJMA&#xA;DXVV8qXDxa1Cqn4ZgyOPEUJH4jI6mNwLLCakyvUPMVpY3Jt5YZ3cAHkiArv4EkVzChgMhYIcmWUA&#xA;0maMGRWAIDAEAih38QcoLY2GBJANSOo8MVdiq0yxDq6j6RhootsMp6EH5YKS3irsVdirsVdirsVY&#xA;d+Znm3UvLdpojWNxa2Z1TVFsLi8vbea7jiia1uJ+Qhglt3ZuVuq/b75ZjgDaC61/MXSoNIv7m+nN&#xA;5JpH1JL+6tbZreKRtQ4GFoYZZZXVaSryDPUYnGbW1Ow/Nry3e+aIfLqW1/DPc3d9p9vfTW5Sze70&#xA;5nWeFJi3xNSMstBQ9K8qgJxEC1tD3v5qw6b5i8wadqOlXcdlowskguolSRrie+YxxRIgflylcqse&#xA;3iWK4RisAg81tdJ+b+ipW1Ok6q2vrdNZt5cSCJr8OsAuS9BMYDH6LBuYloa0G+2PhHvFd62gZPz+&#xA;8kJplrqCw3rxXEE95PH6cUctta21zJavNNHLLG397A9Ej5SEA/Dth8CV0toLVfzg1VBfvbaPdRw6&#xA;b5is9J5pGk7XVvNHDIyxIrlvWf1qqKU4ld61AIxDv6LaZH88/KZ0q0vls9QNzctdq+lPHDDdwfo9&#xA;gl16yzTRxD02dRxWQsxNFBNcHgm1tOfLf5k6B5k1y40nSIrq4Nrb293PfejxtVjvLeK6t/3pO7Sx&#xA;z7KBX4WrTasZYyBZW2V5Wl2KuxV2KoW9nkH7mL+8YVYjsMtxxHMsJHoEuaNFjbmxEwNOBHbL738m&#xA;ulLJISjzDbNJCk6b+nVXp4Hv9By7FLemrIEBbyRrBYzyDlHb3JEoG/wfA4++jZKQNkd4Yg7A+asZ&#xA;Yy/qCUTvbWsgkmFQC0jMq/aAO3qjBXTlZ/H3Jv7mvLkUgvlugPhgqanpUilPxw5q4a71xc7ZrFqc&#xA;LD94Ch8RuM18sJ6OWJhXN3BSoJI7UBP8MhwFlxBCSXZV2aCEhn+05B/Vlgh3lgZdyHJmmDBubyDe&#xA;nYDvtlmwY7lD5Ni2CQag0PiMVRVvqEsZAkPNPfr9+VSxA8mYmmiOrqGU1U7g5jkU2hvArsVdirsV&#xA;SvW/L1tq91o9xNI8baNfDUIAlKPILea24vUH4eNyx27gZISq/NWMeaPyot9e1i8vhrd9YWmptZy6&#xA;pptv6JiuJdPYNbuWkjeRBRQHVWHKg8MnHLQ5IpHQ/lvpUVxp04upy2m6zfa7EDwo0+oGcyRt8P2F&#xA;+tNxpvsN8HiH7KTSj5g/LGx1nVtR1E6peWbalHZmSK3MQEd1pswmtLuJnjdlkjbahqrDqMY5KFIp&#xA;Itc/LPUbIR61pt1qWrebnvjcXGrwz2VrOsclsLV40imia19IRooCcOQPx1JFDOOS9jyWkP5Y/I/6&#xA;noukPd6i9prttbT219JHHa30ciXF5Nehf9NglXnFJcvSQKK1NQRjLNue5aZPJ+Wli+sXd+NQuVtr&#xA;vVLPWjp4EXpJd2SJFyRuHPjKkKBlLHptTIeJt9i0gtQ/J/Sri9/SFtqE9rqAur659YxWtyhTUZEk&#xA;miMVxFLHQNEpRqch4kbYRlK0yTy95Vs9DutTubeaSV9Ukt5Zg4jUKba0hs1CLEsagFLcMQBSp2oN&#xA;shKVpTrIq7FXYq7FUquZALmZXBKtQbGh2pTMqA2DTI7oeVw7VAoAAAOuwyYFMSUPdRzSwMkMnpO3&#xA;7dK0HfJxIB3QQstbKG3tzAKsrVMhbfkSKHGUiTaBGgx8Ikb31gWHQyR1I+1FVh96FsyDe0mrvCkJ&#xA;I4tMPxDncydKioSIfxZvww0TL3I5BkdrYxJp62zCqsv7z3Ldcx5S3tuEdqX6XZyWz+k8vqw819JW&#xA;G4FdwcjklYTAUnM89wkrKJo1AOw8B92Y0YgjkW0ktodQdeSSIw8RT+mJ4B0UWpX5kT0iTSQqQ7Lt&#xA;XJYqNomgcuYOxV2KplpTko6HopBH0/7WY+YbtmMo7KWx2KuxV2KpF5k1DzVZSxvomljVIja3JeL1&#xA;YoSLpWh+rgtK6fCyGatAdwKleuKpHdeYPzZSa5EHlO0liiq1u36QQGYeo6hN1Xi3Dg1Tt1G2Ktye&#xA;ZPzMW/vIIfKqXFrbXMyR3JuoojLAPVaFo1ZviLqIQdwAWPcMFVWSa/8Amw+lahKvlaCK9MDNpluL&#xA;yF3EolWMLNVljJZHaVaPT4eJNSMVU4tf/N39IFG8rQfVHjWNZmvYKJIskoaVlU8mV09M8R0p4khV&#xA;UXd67+ZkN3qLQ+Wo7m1giuP0dElzAHuJI7gJb1d5U9MSwEu3JfhpTrsyqHPmH82gzBvKlqsdQ/rC&#xA;9RysZR2KCIFS8isqKfiA3qK0xVMr3W/Phv4o9N8vxtYTcf8ASrq5SNog0aNykjUs3wu7KyqP2agm&#xA;oxVQstd/Mua5VLjyvb20DtT1Wv42Ma+pKPiCBuVY1jqV6Fj8LUpirMRWgqKHuBuK4q7FXYqo291H&#xA;Py4Ajj1r75OUDFiJWl9+K3TkCvSv3Zfi+lrnzQ3FvA5ZbFrFVscsUoJjdXAPElSCAR1G2KvLvM2n&#xA;3en6rKsqtKsxMscwpRgxr3PUd86HS5hOAro4OSNFAWcFzd3UVtDCxllYKv2ab9zQ9B3y6eQRFnkx&#xA;As09bsLZ7aygt3f1GhjVGfxKilc5vJLikT3ufEUFcyrF+9Zgqp8RZjQCnjkKtKZNNZNCs8kYLSCo&#xA;A3J98xxGV0C2Ejm0mowIvFIio8BTCcRPVRMIa7uvXcELxVRt475ZCHCxlK0Db6jpk9xPax3UMl3C&#xA;tXt1kUyKQwB5IDUde+EndACKSCV+NFNGNA1NsJkAoDUqBHKhgwH7Q6Yg2EFMtMj4wFz1c7fIbZj5&#xA;ju2wGyLypm7FXYq7FUh80aV5ovZLR9B1f9FtFyW4DRpKsis8b/ZdJBXjGyA9uZPamKsft/K/5rJN&#xA;aI/m9PqUAt0uFFrA08qq1Z3MjxOOZX4V+HwJ3ryVQ+s+VvzenvHurHzXCixtOtrbLAkShJZ+UZkq&#xA;kqyNHFRPiUjvvXFVuq6F+Y0VndW6+ebe0uCGuIXkhhQxqkiyvMS6ufTUKy+maqAd24jjiq+88vfm&#xA;vPpms21x5qhs0b0BZXqRRIywrBIl0WZI0MXN2R+YJI4njwqKKo5PLn5kw6U1lbeY4kuBI7x6hNF9&#xA;YkKvbSLwKOtAI7gxsu52BrWvHFUJe+W/zAn027sV85Imo3F9LKsqxpGyRG3jENsvEVQRsvqMFFX5&#xA;VJoSrKo3y3p3n2x1dZPMnmm2vombgNOigggUq6v6ZHwCbnyTb46UDbHqFWa1FaV36070xV2KuxVx&#xA;IAqTQDqTiqD+uxessUCijMOTUpl3hmrLDi32U55phK4FyigHYb7fgcMYiuSCTfNak8/IVukpXfY/&#xA;80jCYjuRZ73lH/OSGl+YNR8mfVdIlEFsb6FtXcMEYWYDcyGO1FbizDuPuMvGGOHEfh7+jdp8ByZO&#xA;EfgdWG/khZ6T5U8z/oawv55YNVE8cthLNHMVuYAJElKxAKn7qJwdg1SAa9sLSa3LmkRIbVd0R97s&#xA;+0tBiw4wYHe63IJ+x7rdWVpdx+ncwpMnUBwDQ+3hm0hklE2DToiAeanZ6Vptmxa1t0iZurKN6eFe&#xA;uGeac+ZtAiBya0/U7e+Nx6Dckgl9LkK0JCqSd/ckZiYc8cl8PQ05eo0ssPDxc5C/tL53/OPyJ5k8&#xA;weedQudRumgt/TSDRxAnqRC2RDIfXDsm7yVFVr8XXtkc/a8cEhHhvvvb/S/pdjoOyjmx8V8/jVfz&#xA;v0PUPyN0vzRpXktNO1p/Us7eSmjSScRP9WZQxWRVZwvCRmVRy2HtTMiOcZYiY6ut1WHwshh3PQ8L&#xA;jvNf+cgPNGq6H5HgttIuPqupa/qFvpENyG4PCs4ZpJA37Pwpx5dRyqMo1GTgiS3YMfHMR7y+XvMf&#xA;5b+ZfJLr5itdS+ptZmKS3uJW+r3RnZQx9FUL135bcugPUb5q8GtE5VR4nb6vss44mfEOH9PlzfZf&#xA;5X+a7/zj5A0XzG44zX9txuQlFQzQs0M3FR0UyRtQZtomNOlINsjkikjFXHEeJplgIPJgQnUIQRKE&#xA;IZQKAjfpmHLm3hfgS7FXYq7FUi8yeTtK8wzW017JcRSWkc0UDW8npEC44CQ1ArUrHx/1Sw74qxtv&#xA;yQ8nsLZPrF/6NtMZzA1xzSVixb99zVi+x49alQAScVaf8kPKQnE9vNdwymRDKwlPxQLIrm2qoRhE&#xA;UQR0rsm2KojVvya8oapcXk9y10DfSXElwqSKBW6DiULVCVB9Vtgd+hqpYFVrWPyc8tapEkU17qUc&#xA;aQQWvCK5oDFaljGKMjU+3Tan66qtf8qY8o0mPrXwmuBxluUuPTlK8uZTnGqEKWoSo2qB4Yqrz/lH&#xA;5UuJIJJ2uZTBLdSjm6MX+uel6qSMULOKQKKseTblixJOKqDfk35aa9S9N7qJuogfRladHZWPqUkq&#xA;8bFnUztxZ6kCifY+HFU08q/l3oXlm6+s6bJcM/otAwndZKhzGa8uAev7odGoe4O1FWUYqtkkSNC7&#xA;mijCBaCaSi5u5JzvsnZf65lQgA1SlakjlHV16qaj6MkRbEJD53/NbyV5NW3fzFMsEt5y9CJEeWRw&#xA;lOTcUVqDcCrYw08pciz4r6L/ACB+aPkjzzb3UugycpbIqJ4JYzG686lCQw6NxNCMjlwThzKbCVec&#xA;PO9rBqUmi/VY7xp42F6ku8XGRf7sr+1yQ717ZhanWeF6Yiy7nszsj8wOOZ4QeVPNvJ3lryt5R12b&#xA;XNJ0mNb6RXSMvJM4iWT7QjDO1K9K9abeOY2m1+fJMQ2PEfl8nb67sTTY8RnZjwi/f8+96pa+dIJR&#xA;GklrIJ3IUohDDkTTYniT92dANPKt6eKlIXtyZHlCXyp5F/5yLm8raP5hh1lZ9Y1ea/aXTYmbigDg&#xA;h/UkNeKKVGwBO/05ZHTxj9Iq9z727LklOuI3Qr4M+/Lf80X8+QS3uu/7i73T5olifTUaj204YSIx&#xA;kdmDBozRgeh+z3zE7S7PEpRINb183P7P1RxicaEhw3R8uq/8p/z3k8yecJvKupWdtYRvEz6MYOYJ&#xA;9P4vRk5s3J/S35AD7J23AzMlpxjgOHk63JIyJkTZL1DXfNmm6PIkUp9adiOcMbJzQH7JZWYEcu2Y&#xA;Oo1UcVcXVzND2dPU3wkCu9hf54eWdM82+XtEsrySSFFvlvSiECRo0gkVlr8QHxSpU/dlOtz8MARz&#xA;Lldk9n+NmMZfTHnTCPzG8neUfMWhWFkIr1JrJmEd3JcPK6qUVFHxlvUrwqS9T2BzUY8wgSYjc83o&#xA;83ZZyRrJKwOVfaTfNn3/ADj5o19o35Xafp96KTRXF4BQ7FfrUgDD2alRnQYJCUAQ8VqcJx5DCXMI&#xA;fzDqeoXmpzrM6mOF2jijHIKApIrSvU50umxCMBXV1eSVlDaXqmqaXdx3dpII3U7j4uLgdVYV3GTz&#xA;YRkjwyRCZibD3WB2eCN2pyZQWp0qRXbOQkKLtQvwJdirsVdirsVdirsVdirsVdirsVdirsVS7UJV&#xA;adIWNI1IL/T/AGZkYo7W1zO9JbqV5YWKerPMsUVN2Y7cqVovc9MM80YRuZoMsWCeWXDAcRU7K/s7&#xA;2ET2kqzRVpyXsfAg7g/PDizQyC4mwufTzxS4Zii+avzj06/80fmwlrr+k39hoVlEllY6jbxO8cxd&#xA;+SvJKVaNVd3K7dO/iL8+XJiwGWKjIbm+5v0GLFkyiOQkA93eyL8sLG/0T8xoLHy3prXnl8Wf1HWt&#xA;UMbxRQSRKZlVHNAz82qw+Inn1zE0EpzxGeQ7ylY/H2fBye1o44zEIiuEUfx9vxb128n/AMUajcMt&#xA;ZRczAK1dgGKgdug2zR6jecr73q9B6MUK/mj7kVppvpn5XAEaHdNqUpluh08pz4oT4DHr79v1tfa2&#xA;q4MfDOByCXQeW/30zHy5pVxPqkBcPGkBEzOQRXgQQPpOdNmifDA4t9t+/wDteFhkAnI8I3uh3X+p&#xA;mZ1awWeWCSQRyQyRwkNtVpVDJx+dfwOQ8KVA97VxBgWk/kD+VttqtxrL6edUuLyZ7pfrknrQL6zF&#xA;6JEoWNkFfh5htu+JnLkz4ngn5CXJWXVEZqRxrE7+FKmh/Xku0pcPh/8ADIu07Nx8Xi/8Kn+hjnkX&#xA;8v8Azp5wutQ1TylMI9S0e5tqFZvq8qrcerxmSWq09P0d6b77ZlZyAAC6y3v/AJD/ACw0HyVZXA12&#xA;+l1rzVfvHPeiEu68owxWNeQq32yWZ9z4DNB2hqMBPDL1SHIDm7ns3HqQDLHUYS5yPJkOui+lK+YN&#xA;bSO0srfjDBZTMYxJ6jjinVWFe52J7ZgSjly/vMkaiP4ev483aaXNhwfucMrnK7l0Br7fIMa1SfSb&#xA;66jt/UhsEupYFghWag5lk4KGdmYh26798wjCc51jjQ+btzm8PBeWVkbk8r3vk9V8r6LJo+lLaSOG&#xA;cu0hCklV5U+EE/KudDosMsePhkbLxHaWrjny8cRQefamv+5K8B2Imk2P+uc67F9A9wdDLmUMadun&#xA;vliHsVncTRRR8GIHEfCenTwzlpxBLsIkhN7W6WdPBx9pf45izhwt0ZWr5Bk7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FUmva/WpK+OZeP6Q0S5od4VljZZEDxnZgwqv01yUgDsUxkYmxsWLai9xoOsiawtfUtr&#xA;+Ph9WiFF9ZOhAUbbfxzT5zLTZbhG4zHId/4/S7/TCOrwcOSVTxn6j/NPv/HJh1/qd9qM7z3Uhdlb&#xA;jx6Kvso7DN12R2fnGXxc0uY+n39/RwO09dpxi8LBHkfq6/DqjPLuuy6TeBiS1pJ8M8ft/MPcZl9r&#xA;jHp8MZRFCJA27i4fZ2OeqyyiTciCbPeP1o781NZtLTy/DqNjA2pzLMg+qWQElw6yinIKN/h75o9T&#xA;DHmAqcY+8u67JzZdNOXFjnK9tg818+/m7omi65b+WmsrhrrTYoracfu1jWeSkktW5E7PIR07ZRDs&#xA;yeWIkCBHl8uf2uyHbWPDKVgmUjfTlQ4fs8ntjebdFsj9TkeRpLcCNmVDQlRSozZxEgK4ZGv6LzUt&#xA;Pxni44Di3riHVhHmW8fUNeWS2oEuGjaIgkctvTQsKVBHQ5vNLL90LHLvdVnhUyLB93J6nBH6UEce&#xA;3wKF+EUGwpsN81EjZtvD4Da+81eR9X1LSA/1O/R/q9/EGDiqV/aUkH7WbGchIAhsD3b/AJw+srhb&#xA;HzRfFR9Wnls4I3qN5IVmdxTrsJkyjVyBqmJfQEGnWkNzLdIlbib7crEs1P5RXoPYZr4YIxkZD6j1&#xA;bsmpnKAgT6Y9Px1eO/8AOWsjp+Wtgqmgk1eBXHiPq9w1PvUZlYubTF8jAkEEGhG4IzIZv0E/L7Xp&#xA;Nf8AI+haxK3Ke9soZLhulZuAEv8Aw4OYchRayk3mHy9pk19LLafupST6sZUcC/cgg1Hvtmz0+oIj&#xA;Uhbjzx2dkLpvlzT1uEe/PKNCKxRrUNv+0xINPoyzLqSRUQiOPvehIqKiqgCooAUDYADpTNQXJRNi&#xA;5S5Twb4T9OV5BYZRO6cZiNzsVYx578z3Oh2UC2gH1u7ZgjsKhVQDkadK/EKVzG1OYwG3Mu37I0Ed&#xA;RM8X0x/SwmHzh59mQPDcPKpAaqQQtQFiorRNqspAzCGfKeR+x38uzNFE0QB/nS/Wq/4n/MX1PT9S&#xA;X1OJbj9XirQbE/3eHxs34DD8hoauhX9Y/rU5vN35gQxGaWaVIloGdreIAculT6e1cTnyj+xlHs3R&#xA;SNAAn+sf1s48j+ZZ9c06VrpQLq2YJIyigYMKq1Ox2NczdNmMxvzDz/a2hjp8g4fpkyTMh1TsVdir&#xA;sVdiqW6nCQ4lHRtm+YzIwy6NUx1U4JnS1k6lT8IG1By6nJSiDIIB2QuWMXjSGnrjxkP8c6LGPUD5&#xA;OFI7IzTNWsNNlle+txcwTxGJoq0O7K1RsenHMDtmeAYaymgenO/cPxTndlYc88t4R6h17vf+N0s8&#xA;y+YfLNnp819IJtLtbJ4JmkBdp6iVQuw5hlLkBl47jrtnM9mQ0WSVRj6/6T0XaZ1+ONykOA/zf07A&#xA;vK9Yj/Ja+lfXNSur+WTVJ55GumE372bkHmNAnjIM6QgDbuecuT6Vmm84Wdu80rP6SbtSeT4V6bKs&#xA;nQfLMPwscjz5+Q/UzGcgVwj7f1oCby5rd1eW9/6EZeHg0JVwVIVuandjWpOZEMojExsm+9pyeo3Q&#xA;HuTKC+83TvKsSxN6LcJD8NOQ6gGu9MrMcYWy+ePM1l+UWqeddbXVZrp9dSa8k1NF9YIslorvccSF&#xA;pRBE1KHttlo4aZep6F+Qsnl5bPUoPIjtNYrPE+oi65ji7qQvHmFO6oemQyCHVTxPbcxEvJv+cm9B&#xA;1HWPy042FpLeT2V7DdtHCjSOI1jkR34oCaKJNz2GThIA2WUASaD4+j0nVJH4R2c7vXjxWNyajtQD&#xA;LzkiBZIptGORNAG321+QdrqVp+U+hWupW8trdwrODFMvB+DXMjxnjsR8DDrmMZCW4NhryQMZEEUV&#xA;2uR3sup3X1SO3lkWaIMt0rMohaVhKU4stHCfEOxIoczgPQNyPc0xlRKhBBeR3Fw1xDbRRrcotg8C&#xA;lXaEqpJlJZvi5sy0WgoK98mJEsSA9ET7C/IZri2q9oCbmOn8wP3ZCfIpjzTrMNvdirH/ADl5W/T9&#xA;lEsUgiu7YloGavEhqclam4rQb5j6jDxjzdn2Z2h+WmbFxlzYdF+X/nOFVSG7SNVrxVJ5FArWtAF9&#xA;zmINLkHX7XeS7Z0ktzEn/NDa+QPOiuJFvEEgqQ4nkBFRQ78fDH8rk7/tU9s6QiuE1/VC2T8vfOMq&#xA;FJbqN0NAVaaQg8fs7Fe3bE6XIeqY9taUGxEj/NDNfKHlkaBp7wvIJbmduc7r9nYUCrXegzMwYeAe&#xA;boO0tf8AmZ2BURyT3L3XOxV2KuxV2KrZEWRCjCqnrhBpSEnubd4H4ndT9lvHMuE7DRIUo5JDyy88&#xA;sapbzalwkjaKx/eympBKuCy0FOtM3WPUx2/pOLLGd3N5I1I3lql0Y+V3UQcXNKohffbbYZqddo8G&#xA;pkZy4rA7+Xudrou082miIQ4avu5sL8/3uj6RCLbXKC3nleylJUulQDUNx3p8J3zj9NosxykY/rhv&#xA;/Y9tl1uHwoyn9GT8bsB83+Rr1dV8n+W7eyuF0a1kEV3LKACkt9el5Gk6cUEBiHJqDbOl03aQmCMn&#xA;oyDmDt8nltX2ZKJ4sXrxnkRv8Nn2GrRTRBlKyRSDYijKwP6xl0ZA7h1EoGJoiikTTXmnu2kQAs05&#xA;/wBx8p3CI1efL/jH2zIoS9R+LXy2TmytIrS1jt4vsoOp6knck+5OVSlZtkA+Pk0sTfnT5/hDCgt/&#xA;MkhdhUj1ra4XYe3q/dl9+kNnR6B/zh5E40jzLKfsPcWyD5qkhP8AxIZDMiT6HylioX6c7C5Tryid&#xA;aDrupGV5hcJDyLdp5Vkif6Q+9iPl7T2vfJ19b0qzyu8P+siIV/FaZo9Fg8TSyj5mvkHpO0dT4Wuh&#xA;LuiL+JKZ+Q7ky6H6ZP8AcSsg+Ro/62OZnY87w13H9rgdv4uHUX/OiD+j9DHfNOg2+pak7ywzMUZw&#xA;HhupbatWOzCMryp750uIjhFvPm7QOleWLWxvkuI4LjktQGmvZp1Fe/B2Kk5MkUtl6in2F+QzWFtT&#xA;HTIDUzMNhsn8TmPml0bIDqmGUNjsVdirsVdirsVdirsVdirsVdirsVdiq2WJJUKOKg4QaQRaUXVo&#xA;8DeKH7Lf1zKhMFqlGmIan080f8YIv+TJzPx/we/9LQeqPvf+OnoP+tL/ANQ7ZXD6Z/jqyPMPG/zR&#xA;0az1LVrE37Rw6Xaa3Hc6lPIaBbYXUsc7NUUChGWp+ddhmvnkhi1YPLjxAfHavup3mLHPJoCeYhkP&#xA;y6/faTefvzCgt/zw0y3XUrV/KmoNp8090XQ2/plgkkqzg8eBCcW+Ir9OTyafFP1Sqw42m7QzYsZh&#xA;E0D9hfR0V/p7aet7BNHJYmMSRTxMrxtHSoKMtQQR0plsRewdeT1KVppk2oQSX8pMV7KQ9nX/AHSq&#xA;GqD/AGX7WX8Yia6MatHWurW7afJd3Tpai2DfXTKwRYjGKuWZtgoG9T2yqcaKQbfNHltbLzH/AM5A&#xA;+cX0OZNUsrrTb9kmhYFHWa3SL4WqAR6sgTbJDLEigWwjZPP+cRda0CLRNV017+BNZu7z1IbBpAs0&#xA;kUcK/GiGhYAlq08MjPJGR2KJB9E5Fio3kscNpNLIeKIjMx9gMhlkIxJPc24IGUwBzJCTeRpEbQUU&#xA;IVaOR1cn9ok8qj6GAzB7K/uQPN2vb8CNSSTzA/V+hD+V5oIda1axhBaIyNLHIPsji3Flr7Fsq7PI&#xA;jlyRHK27tXHKWnxZJc6ojr7/ALFt7/vZP/xkb/iRzo4cg82VDJKz2z05mVWm+FaD4O5+eaqeXub4&#xA;w70zAAAAFAOgzHbXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkfmnyfpXmWK3j1Ca9hFszNGbG8ub&#xA;MkuADz+rvHz6bcq07d8lGZCsdP5KeUSKG91sjwOs6j/1WyfjS8vkilh/I3yUa1uNYPL7X+5fUN/n&#xA;++3yf5mfejgDf/KjvJdQTc6wSOhOr6ht8v32D8zNeELR+RXkIS+qw1CWTg8XOXULuU8JCpdf3kjb&#xA;MUFcqyy8T6gC5GHPPF9Br9v9iTP/AM4r/ks5q2kTHrQfW7gAAkmigPQCp6DCMh7h8mkptY/kJ5Bs&#xA;LeO2sm1S2tYgVit4tUvljUGpoqCXiOvhkxnkOSDEKv8AypDyZ/y1az/3GNQ/6rY/mJLwhZc/kT5F&#xA;urdra5k1Wa3kUpJE+q3zK6nqHBl+IfPCdRIo4Qg7L/nG/wDK6xna4sre/tbhkMTTQ6jeRuYyQShZ&#xA;ZQeJKg0yIzEd3yTSnaf840flPZyxzWlleW80O8MkV/doyGlPhKyAjY9sRmPl8lpM/wDlSHkz/lq1&#xA;n/uMah/1Ww/mJLwhUh/JbydExKz6q9RQiXVL2Vf+BklYZDJMzFS3Dbhyyxy4oGitj/JPybG6utxq&#xA;9V3AOq3xX6VMtD9OEZDVbIM5E2TZH9rcv5KeTZHLmfVUJ6iPVL2MfQqSqBkccuAVEAfBlmzzyG5m&#xA;1SH8nfKsKcI7vWONa/Fqt834tKcu/Mz72jgC9/yh8sOpU3mr0PWmqXqn7xKDj+Zn3rwBF+Xvy18v&#xA;6DqaajZXWqSzorKqXWp3tzFRxQ8opZWjb2qNuvXK5ZCRTKmV5WrsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:75DE54D5F1D3EA11BCD7C5230AF4E61A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:75DE54D5F1D3EA11BCD7C5230AF4E61A</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:de7cd20f-fd61-c341-bd92-e628cfffc607</stRef:instanceID>
            <stRef:documentID>xmp.did:de7cd20f-fd61-c341-bd92-e628cfffc607</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:719fd2da-b20b-7245-bb99-a620a4539f0f</stEvt:instanceID>
                  <stEvt:when>2020-03-27T18:09:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:41f3245f-38b6-ea4a-aa6e-8f94d33988d0</stEvt:instanceID>
                  <stEvt:when>2020-05-19T19:17:03+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ACDAFF19989AEA119CA6A011C23A493D</stEvt:instanceID>
                  <stEvt:when>2020-05-20T15:58:35+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3f3613bd-e66b-174d-8237-10040c8d645e</stEvt:instanceID>
                  <stEvt:when>2020-05-25T12:23:31+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e398beff-bba9-7b43-8cb0-11e66e85d882</stEvt:instanceID>
                  <stEvt:when>2020-06-03T18:06:59+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f97d8480-7d3d-2c44-a649-91ed80f578e5</stEvt:instanceID>
                  <stEvt:when>2020-06-26T18:25:46+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:de7cd20f-fd61-c341-bd92-e628cfffc607</stEvt:instanceID>
                  <stEvt:when>2020-06-28T02:36:07+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:75DE54D5F1D3EA11BCD7C5230AF4E61A</stEvt:instanceID>
                  <stEvt:when>2020-08-01T15:24:04+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>AIRobin</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3230.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3230 2000 li
3230 0 li
cp
clp
3230 0 mo
3230 2000 li
0 2000 li
0 0 li
3230 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
265.693 744.852 mo
320.733 744.852 li
320.733 755.921 li
278.885 755.921 li
278.885 789.885 li
317.55 789.885 li
317.55 800.803 li
278.885 800.803 li
278.885 847.049 li
265.693 847.049 li
265.693 744.852 li
cp
.0235294 .0196078 .207843 rgb
f
395.183 827.034 mo
395.183 834.615 395.334 841.287 395.789 847.049 cv
383.962 847.049 li
383.204 835.07 li
382.9 835.07 li
379.413 840.983 371.681 848.717 358.641 848.717 cv
347.117 848.717 333.318 842.348 333.318 816.571 cv
333.318 773.661 li
346.662 773.661 li
346.662 814.297 li
346.662 828.247 350.907 837.647 363.037 837.647 cv
371.983 837.647 378.2 831.431 380.626 825.518 cv
381.385 823.547 381.839 821.12 381.839 818.694 cv
381.839 773.661 li
395.183 773.661 li
395.183 827.034 li
cp
f
417.317 793.524 mo
417.317 785.943 417.165 779.727 416.711 773.661 cv
428.537 773.661 li
429.296 785.791 li
429.599 785.791 li
433.238 778.816 441.729 771.993 453.859 771.993 cv
464.018 771.993 479.787 778.059 479.787 803.228 cv
479.787 847.049 li
466.444 847.049 li
466.444 804.745 li
466.444 792.918 462.047 783.063 449.462 783.063 cv
440.668 783.063 433.845 789.279 431.57 796.709 cv
430.964 798.376 430.66 800.65 430.66 802.925 cv
430.66 847.049 li
417.317 847.049 li
417.317 793.524 li
cp
f
549.682 752.585 mo
549.682 773.661 li
568.786 773.661 li
568.786 783.82 li
549.682 783.82 li
549.682 823.395 li
549.682 832.492 552.259 837.647 559.688 837.647 cv
563.176 837.647 565.754 837.192 567.422 836.738 cv
568.028 846.745 li
565.45 847.807 561.356 848.564 556.201 848.564 cv
549.984 848.564 544.981 846.593 541.797 842.955 cv
538.006 839.013 536.642 832.492 536.642 823.85 cv
536.642 783.82 li
525.27 783.82 li
525.27 773.661 li
536.642 773.661 li
536.642 756.072 li
549.682 752.585 li
cp
f
591.073 810.507 mo
591.073 826.579 600.323 838.709 613.363 838.709 cv
626.1 838.709 635.652 826.73 635.652 810.203 cv
635.652 797.77 629.436 782.001 613.666 782.001 cv
597.896 782.001 591.073 796.557 591.073 810.507 cv
cp
649.298 809.748 mo
649.298 836.89 630.497 848.717 612.756 848.717 cv
592.894 848.717 577.579 834.16 577.579 810.962 cv
577.579 786.397 593.651 771.993 613.97 771.993 cv
635.046 771.993 649.298 787.308 649.298 809.748 cv
cp
f
715.557 802.622 mo
715.557 800.348 715.404 798.376 714.798 796.557 cv
712.372 788.824 705.853 782.456 696.148 782.456 cv
683.411 782.456 674.313 793.221 674.313 810.203 cv
674.313 824.607 681.592 836.586 695.996 836.586 cv
704.185 836.586 711.614 831.431 714.495 822.94 cv
715.253 820.666 715.557 818.088 715.557 815.813 cv
715.557 802.622 li
cp
729.354 773.661 mo
729.051 778.968 728.748 784.882 728.748 793.828 cv
728.748 836.435 li
728.748 853.266 725.412 863.576 718.286 869.944 cv
711.159 876.616 700.849 878.738 691.6 878.738 cv
682.805 878.738 673.101 876.616 667.188 872.674 cv
670.523 862.515 li
675.375 865.547 682.957 868.276 692.055 868.276 cv
705.7 868.276 715.708 861.149 715.708 842.652 cv
715.708 834.464 li
715.404 834.464 li
711.311 841.287 703.426 846.745 692.055 846.745 cv
673.859 846.745 660.819 831.279 660.819 810.962 cv
660.819 786.095 677.043 771.993 693.874 771.993 cv
706.61 771.993 713.585 778.665 716.77 784.73 cv
717.072 784.73 li
717.679 773.661 li
729.354 773.661 li
cp
f
797.431 803.228 mo
797.582 794.738 793.943 781.546 778.933 781.546 cv
765.438 781.546 759.524 793.979 758.463 803.228 cv
797.431 803.228 li
cp
758.312 812.781 mo
758.614 830.824 770.138 838.254 783.481 838.254 cv
793.033 838.254 798.796 836.586 803.799 834.464 cv
806.073 844.016 li
801.373 846.139 793.337 848.564 781.662 848.564 cv
759.069 848.564 745.574 833.705 745.574 811.568 cv
745.574 789.431 758.614 771.993 779.994 771.993 cv
803.951 771.993 810.319 793.07 810.319 806.564 cv
810.319 809.294 810.016 811.416 809.864 812.781 cv
758.312 812.781 li
cp
f
842.916 752.585 mo
842.916 773.661 li
862.021 773.661 li
862.021 783.82 li
842.916 783.82 li
842.916 823.395 li
842.916 832.492 845.493 837.647 852.923 837.647 cv
856.41 837.647 858.988 837.192 860.656 836.738 cv
861.263 846.745 li
858.685 847.807 854.591 848.564 849.436 848.564 cv
843.219 848.564 838.216 846.593 835.031 842.955 cv
831.24 839.013 829.876 832.492 829.876 823.85 cv
829.876 783.82 li
818.504 783.82 li
818.504 773.661 li
829.876 773.661 li
829.876 756.072 li
842.916 752.585 li
cp
f
877.029 739.394 mo
890.373 739.394 li
890.373 785.185 li
890.676 785.185 li
892.799 781.394 896.135 778.059 900.229 775.784 cv
904.171 773.51 908.871 771.993 913.875 771.993 cv
923.73 771.993 939.5 778.059 939.5 803.38 cv
939.5 847.049 li
926.156 847.049 li
926.156 804.896 li
926.156 793.07 921.76 783.063 909.174 783.063 cv
900.531 783.063 893.708 789.127 891.282 796.406 cv
890.524 798.225 890.373 800.196 890.373 802.773 cv
890.373 847.049 li
877.029 847.049 li
877.029 739.394 li
cp
f
1007.73 803.228 mo
1007.88 794.738 1004.24 781.546 989.229 781.546 cv
975.735 781.546 969.821 793.979 968.76 803.228 cv
1007.73 803.228 li
cp
968.608 812.781 mo
968.912 830.824 980.436 838.254 993.778 838.254 cv
1003.33 838.254 1009.09 836.586 1014.1 834.464 cv
1016.37 844.016 li
1011.67 846.139 1003.63 848.564 991.959 848.564 cv
969.366 848.564 955.872 833.705 955.872 811.568 cv
955.872 789.431 968.912 771.993 990.291 771.993 cv
1014.25 771.993 1020.62 793.07 1020.62 806.564 cv
1020.62 809.294 1020.31 811.416 1020.16 812.781 cv
968.608 812.781 li
cp
f
1037.14 796.557 mo
1037.14 787.915 1036.99 780.484 1036.53 773.661 cv
1048.21 773.661 li
1048.66 788.065 li
1049.27 788.065 li
1052.61 778.21 1060.64 771.993 1069.59 771.993 cv
1071.1 771.993 1072.17 772.146 1073.38 772.448 cv
1073.38 785.033 li
1072.01 784.73 1070.65 784.579 1068.83 784.579 cv
1059.43 784.579 1052.76 791.705 1050.94 801.712 cv
1050.63 803.532 1050.33 805.654 1050.33 807.929 cv
1050.33 847.049 li
1037.14 847.049 li
1037.14 796.557 li
cp
f
585.488 1579.45 mo
319.511 1579.45 li
283.424 1579.45 254.17 1550.2 254.17 1514.11 cv
254.17 1504.01 li
254.17 1467.93 283.424 1438.67 319.511 1438.67 cv
585.488 1438.67 li
621.575 1438.67 650.829 1467.93 650.829 1504.01 cv
650.829 1514.11 li
650.829 1550.2 621.575 1579.45 585.488 1579.45 cv
cp
.980392 .447059 .411765 rgb
f
331.51 1489 mo
336.098 1489 li
336.098 1520.69 li
351.285 1520.69 li
351.285 1524.54 li
331.51 1524.54 li
331.51 1489 li
cp
1 1 1 rgb
f
371.697 1509.3 mo
371.75 1506.35 370.484 1501.76 365.264 1501.76 cv
360.57 1501.76 358.514 1506.09 358.145 1509.3 cv
371.697 1509.3 li
cp
358.092 1512.63 mo
358.197 1518.9 362.205 1521.48 366.846 1521.48 cv
370.168 1521.48 372.172 1520.9 373.912 1520.17 cv
374.703 1523.49 li
373.068 1524.23 370.273 1525.07 366.213 1525.07 cv
358.355 1525.07 353.662 1519.9 353.662 1512.2 cv
353.662 1504.5 358.197 1498.44 365.633 1498.44 cv
373.965 1498.44 376.18 1505.77 376.18 1510.46 cv
376.18 1511.41 376.074 1512.15 376.021 1512.63 cv
358.092 1512.63 li
cp
f
395.378 1511.52 mo
390.315 1511.41 384.567 1512.31 384.567 1517.27 cv
384.567 1520.27 386.571 1521.7 388.944 1521.7 cv
392.267 1521.7 394.376 1519.59 395.114 1517.42 cv
395.272 1516.95 395.378 1516.42 395.378 1515.95 cv
395.378 1511.52 li
cp
396.063 1524.54 mo
395.694 1521.33 li
395.536 1521.33 li
394.112 1523.33 391.37 1525.12 387.731 1525.12 cv
382.563 1525.12 379.927 1521.48 379.927 1517.79 cv
379.927 1511.62 385.411 1508.25 395.272 1508.3 cv
395.272 1507.77 li
395.272 1505.66 394.692 1501.87 389.472 1501.87 cv
387.099 1501.87 384.62 1502.61 382.827 1503.77 cv
381.772 1500.71 li
383.882 1499.34 386.94 1498.44 390.157 1498.44 cv
397.962 1498.44 399.86 1503.77 399.86 1508.88 cv
399.86 1518.43 li
399.86 1520.64 399.966 1522.8 400.282 1524.54 cv
396.063 1524.54 li
cp
f
407.353 1506.98 mo
407.353 1503.98 407.3 1501.39 407.142 1499.02 cv
411.202 1499.02 li
411.36 1504.03 li
411.571 1504.03 li
412.731 1500.6 415.526 1498.44 418.638 1498.44 cv
419.165 1498.44 419.534 1498.49 419.956 1498.6 cv
419.956 1502.97 li
419.481 1502.87 419.007 1502.82 418.374 1502.82 cv
415.104 1502.82 412.784 1505.29 412.151 1508.78 cv
412.046 1509.41 411.94 1510.15 411.94 1510.94 cv
411.94 1524.54 li
407.353 1524.54 li
407.353 1506.98 li
cp
f
424.81 1505.93 mo
424.81 1503.29 424.757 1501.13 424.599 1499.02 cv
428.712 1499.02 li
428.976 1503.24 li
429.081 1503.24 li
430.347 1500.81 433.3 1498.44 437.519 1498.44 cv
441.052 1498.44 446.536 1500.55 446.536 1509.3 cv
446.536 1524.54 li
441.896 1524.54 li
441.896 1509.83 li
441.896 1505.72 440.366 1502.29 435.989 1502.29 cv
432.931 1502.29 430.558 1504.45 429.767 1507.04 cv
429.556 1507.62 429.45 1508.41 429.45 1509.2 cv
429.45 1524.54 li
424.81 1524.54 li
424.81 1505.93 li
cp
f
465.262 1505.93 mo
465.262 1503.29 465.209 1501.13 465.051 1499.02 cv
469.111 1499.02 li
469.322 1503.13 li
469.48 1503.13 li
470.904 1500.71 473.277 1498.44 477.496 1498.44 cv
480.977 1498.44 483.613 1500.55 484.721 1503.55 cv
484.826 1503.55 li
485.617 1502.13 486.619 1501.02 487.674 1500.23 cv
489.203 1499.07 490.891 1498.44 493.316 1498.44 cv
496.691 1498.44 501.701 1500.65 501.701 1509.51 cv
501.701 1524.54 li
497.166 1524.54 li
497.166 1510.09 li
497.166 1505.19 495.373 1502.24 491.629 1502.24 cv
488.992 1502.24 486.936 1504.19 486.145 1506.46 cv
485.934 1507.09 485.775 1507.93 485.775 1508.78 cv
485.775 1524.54 li
481.24 1524.54 li
481.24 1509.25 li
481.24 1505.19 479.447 1502.24 475.914 1502.24 cv
473.014 1502.24 470.904 1504.56 470.166 1506.88 cv
469.902 1507.56 469.797 1508.35 469.797 1509.14 cv
469.797 1524.54 li
465.262 1524.54 li
465.262 1505.93 li
cp
f
512.096 1511.83 mo
512.096 1517.42 515.313 1521.64 519.848 1521.64 cv
524.277 1521.64 527.6 1517.48 527.6 1511.73 cv
527.6 1507.4 525.438 1501.92 519.953 1501.92 cv
514.469 1501.92 512.096 1506.98 512.096 1511.83 cv
cp
532.346 1511.57 mo
532.346 1521.01 525.807 1525.12 519.637 1525.12 cv
512.729 1525.12 507.402 1520.06 507.402 1511.99 cv
507.402 1503.45 512.992 1498.44 520.059 1498.44 cv
527.389 1498.44 532.346 1503.77 532.346 1511.57 cv
cp
f
538.203 1506.98 mo
538.203 1503.98 538.15 1501.39 537.992 1499.02 cv
542.053 1499.02 li
542.211 1504.03 li
542.422 1504.03 li
543.582 1500.6 546.377 1498.44 549.488 1498.44 cv
550.016 1498.44 550.385 1498.49 550.807 1498.6 cv
550.807 1502.97 li
550.332 1502.87 549.857 1502.82 549.225 1502.82 cv
545.955 1502.82 543.635 1505.29 543.002 1508.78 cv
542.896 1509.41 542.791 1510.15 542.791 1510.94 cv
542.791 1524.54 li
538.203 1524.54 li
538.203 1506.98 li
cp
f
571.112 1509.3 mo
571.165 1506.35 569.899 1501.76 564.679 1501.76 cv
559.985 1501.76 557.929 1506.09 557.56 1509.3 cv
571.112 1509.3 li
cp
557.507 1512.63 mo
557.612 1518.9 561.62 1521.48 566.261 1521.48 cv
569.583 1521.48 571.587 1520.9 573.327 1520.17 cv
574.118 1523.49 li
572.483 1524.23 569.688 1525.07 565.628 1525.07 cv
557.771 1525.07 553.077 1519.9 553.077 1512.2 cv
553.077 1504.5 557.612 1498.44 565.048 1498.44 cv
573.38 1498.44 575.595 1505.77 575.595 1510.46 cv
575.595 1511.41 575.489 1512.15 575.437 1512.63 cv
557.507 1512.63 li
cp
f
2093.23 282.719 mo
2093.23 296.819 li
2109.53 296.819 li
2109.53 282.719 li
2113.93 282.719 li
2113.93 316.421 li
2109.53 316.421 li
2109.53 300.62 li
2093.23 300.62 li
2093.23 316.421 li
2088.88 316.421 li
2088.88 282.719 li
2093.23 282.719 li
cp
.0196078 .0196078 .192157 rgb
f
2124.14 299.77 mo
2124.14 306.97 2128.04 313.421 2134.89 313.421 cv
2141.79 313.421 2145.69 307.07 2145.69 299.42 cv
2145.69 292.719 2142.19 285.719 2134.94 285.719 cv
2127.74 285.719 2124.14 292.369 2124.14 299.77 cv
cp
2150.29 299.22 mo
2150.29 310.82 2143.24 316.971 2134.64 316.971 cv
2125.74 316.971 2119.49 310.07 2119.49 299.87 cv
2119.49 289.169 2126.14 282.168 2135.14 282.168 cv
2144.34 282.168 2150.29 289.219 2150.29 299.22 cv
cp
f
2184.35 301.62 mo
2184.1 296.92 2183.8 291.27 2183.85 287.069 cv
2183.7 287.069 li
2182.55 291.02 2181.15 295.22 2179.45 299.87 cv
2173.5 316.221 li
2170.2 316.221 li
2164.74 300.17 li
2163.15 295.419 2161.79 291.069 2160.84 287.069 cv
2160.74 287.069 li
2160.65 291.27 2160.4 296.92 2160.09 301.97 cv
2159.2 316.421 li
2155.04 316.421 li
2157.39 282.719 li
2162.95 282.719 li
2168.7 299.02 li
2170.1 303.17 2171.25 306.87 2172.1 310.371 cv
2172.25 310.371 li
2173.1 306.97 2174.3 303.27 2175.8 299.02 cv
2181.8 282.719 li
2187.35 282.719 li
2189.45 316.421 li
2185.2 316.421 li
2184.35 301.62 li
cp
f
2213.6 300.62 mo
2200.5 300.62 li
2200.5 312.771 li
2215.1 312.771 li
2215.1 316.421 li
2196.15 316.421 li
2196.15 282.719 li
2214.35 282.719 li
2214.35 286.369 li
2200.5 286.369 li
2200.5 297.02 li
2213.6 297.02 li
2213.6 300.62 li
cp
f
2404.48 299.369 mo
2405.43 299.619 2406.63 299.72 2408.08 299.72 cv
2413.33 299.72 2416.53 297.17 2416.53 292.52 cv
2416.53 288.069 2413.38 285.918 2408.58 285.918 cv
2406.68 285.918 2405.23 286.068 2404.48 286.269 cv
2404.48 299.369 li
cp
2400.13 283.119 mo
2402.23 282.769 2404.98 282.469 2408.48 282.469 cv
2412.78 282.469 2415.93 283.469 2417.93 285.269 cv
2419.78 286.869 2420.88 289.319 2420.88 292.319 cv
2420.88 295.369 2419.98 297.77 2418.28 299.52 cv
2415.98 301.97 2412.23 303.22 2407.98 303.22 cv
2406.68 303.22 2405.48 303.17 2404.48 302.92 cv
2404.48 316.421 li
2400.13 316.421 li
2400.13 283.119 li
cp
f
2431.08 298.52 mo
2435.53 298.52 li
2440.18 298.52 2443.13 295.97 2443.13 292.119 cv
2443.13 287.769 2439.98 285.869 2435.38 285.818 cv
2433.28 285.818 2431.78 286.019 2431.08 286.219 cv
2431.08 298.52 li
cp
2426.73 283.168 mo
2428.93 282.719 2432.08 282.469 2435.08 282.469 cv
2439.73 282.469 2442.73 283.318 2444.83 285.219 cv
2446.53 286.719 2447.48 289.019 2447.48 291.619 cv
2447.48 296.07 2444.68 299.02 2441.13 300.22 cv
2441.13 300.37 li
2443.73 301.27 2445.28 303.67 2446.08 307.17 cv
2447.18 311.871 2447.98 315.12 2448.68 316.421 cv
2444.18 316.421 li
2443.63 315.471 2442.88 312.57 2441.93 308.371 cv
2440.93 303.72 2439.13 301.97 2435.18 301.819 cv
2431.08 301.819 li
2431.08 316.421 li
2426.73 316.421 li
2426.73 283.168 li
cp
f
2456.43 299.77 mo
2456.43 306.97 2460.33 313.421 2467.19 313.421 cv
2474.09 313.421 2477.99 307.07 2477.99 299.42 cv
2477.99 292.719 2474.49 285.719 2467.24 285.719 cv
2460.04 285.719 2456.43 292.369 2456.43 299.77 cv
cp
2482.59 299.22 mo
2482.59 310.82 2475.54 316.971 2466.94 316.971 cv
2458.04 316.971 2451.78 310.07 2451.78 299.87 cv
2451.78 289.169 2458.43 282.168 2467.44 282.168 cv
2476.64 282.168 2482.59 289.219 2482.59 299.22 cv
cp
f
2492.59 312.971 mo
2493.69 313.171 2495.29 313.221 2496.99 313.221 cv
2506.29 313.221 2511.34 308.021 2511.34 298.92 cv
2511.39 290.969 2506.89 285.918 2497.69 285.918 cv
2495.44 285.918 2493.74 286.119 2492.59 286.369 cv
2492.59 312.971 li
cp
2488.24 283.168 mo
2490.89 282.769 2494.04 282.469 2497.49 282.469 cv
2503.74 282.469 2508.19 283.918 2511.14 286.668 cv
2514.14 289.419 2515.89 293.319 2515.89 298.77 cv
2515.89 304.27 2514.19 308.771 2511.04 311.871 cv
2507.89 315.021 2502.69 316.721 2496.14 316.721 cv
2493.04 316.721 2490.44 316.57 2488.24 316.32 cv
2488.24 283.168 li
cp
f
2525.9 282.719 mo
2525.9 302.67 li
2525.9 310.221 2529.25 313.421 2533.75 313.421 cv
2538.75 313.421 2541.95 310.12 2541.95 302.67 cv
2541.95 282.719 li
2546.35 282.719 li
2546.35 302.37 li
2546.35 312.721 2540.9 316.971 2533.6 316.971 cv
2526.7 316.971 2521.5 313.021 2521.5 302.57 cv
2521.5 282.719 li
2525.9 282.719 li
cp
f
2577.45 315.32 mo
2575.85 316.121 2572.65 316.921 2568.55 316.921 cv
2559.05 316.921 2551.9 310.92 2551.9 299.87 cv
2551.9 289.319 2559.05 282.168 2569.5 282.168 cv
2573.7 282.168 2576.35 283.068 2577.5 283.668 cv
2576.45 287.219 li
2574.8 286.418 2572.45 285.818 2569.65 285.818 cv
2561.75 285.818 2556.5 290.869 2556.5 299.72 cv
2556.5 307.97 2561.25 313.271 2569.45 313.271 cv
2572.1 313.271 2574.8 312.721 2576.55 311.871 cv
2577.45 315.32 li
cp
f
2590.71 286.418 mo
2580.46 286.418 li
2580.46 282.719 li
2605.41 282.719 li
2605.41 286.418 li
2595.11 286.418 li
2595.11 316.421 li
2590.71 316.421 li
2590.71 286.418 li
cp
f
2760.25 302.42 mo
2756.95 292.719 li
2756.2 290.52 2755.7 288.519 2755.2 286.568 cv
2755.1 286.568 li
2754.6 288.569 2754.05 290.619 2753.4 292.669 cv
2750.1 302.42 li
2760.25 302.42 li
cp
2749.2 305.82 mo
2745.7 316.421 li
2741.2 316.421 li
2752.65 282.719 li
2757.9 282.719 li
2769.4 316.421 li
2764.75 316.421 li
2761.15 305.82 li
2749.2 305.82 li
cp
f
2778.7 313.12 mo
2779.55 313.271 2780.8 313.32 2782.35 313.32 cv
2786.85 313.32 2791 311.67 2791 306.771 cv
2791 302.17 2787.05 300.27 2782.3 300.27 cv
2778.7 300.27 li
2778.7 313.12 li
cp
2778.7 296.97 mo
2782.65 296.97 li
2787.25 296.97 2789.95 294.569 2789.95 291.319 cv
2789.95 287.369 2786.95 285.818 2782.55 285.818 cv
2780.55 285.818 2779.4 285.969 2778.7 286.119 cv
2778.7 296.97 li
cp
2774.35 283.168 mo
2776.25 282.769 2779.25 282.469 2782.3 282.469 cv
2786.65 282.469 2789.45 283.219 2791.55 284.918 cv
2793.3 286.219 2794.35 288.219 2794.35 290.869 cv
2794.35 294.119 2792.2 296.97 2788.65 298.27 cv
2788.65 298.369 li
2791.85 299.17 2795.6 301.819 2795.6 306.82 cv
2795.6 309.721 2794.45 311.92 2792.75 313.57 cv
2790.4 315.721 2786.6 316.721 2781.1 316.721 cv
2778.1 316.721 2775.8 316.521 2774.35 316.32 cv
2774.35 283.168 li
cp
f
2804.11 299.77 mo
2804.11 306.97 2808.01 313.421 2814.86 313.421 cv
2821.76 313.421 2825.66 307.07 2825.66 299.42 cv
2825.66 292.719 2822.16 285.719 2814.91 285.719 cv
2807.71 285.719 2804.11 292.369 2804.11 299.77 cv
cp
2830.26 299.22 mo
2830.26 310.82 2823.21 316.971 2814.61 316.971 cv
2805.71 316.971 2799.46 310.07 2799.46 299.87 cv
2799.46 289.169 2806.11 282.168 2815.11 282.168 cv
2824.31 282.168 2830.26 289.219 2830.26 299.22 cv
cp
f
2840.26 282.719 mo
2840.26 302.67 li
2840.26 310.221 2843.61 313.421 2848.11 313.421 cv
2853.11 313.421 2856.31 310.12 2856.31 302.67 cv
2856.31 282.719 li
2860.71 282.719 li
2860.71 302.37 li
2860.71 312.721 2855.26 316.971 2847.96 316.971 cv
2841.06 316.971 2835.86 313.021 2835.86 302.57 cv
2835.86 282.719 li
2840.26 282.719 li
cp
f
2874.67 286.418 mo
2864.42 286.418 li
2864.42 282.719 li
2889.37 282.719 li
2889.37 286.418 li
2879.07 286.418 li
2879.07 316.421 li
2874.67 316.421 li
2874.67 286.418 li
cp
f
3125.84 274.134 mo
3027.09 274.134 li
3023.69 274.134 3020.94 271.377 3020.94 267.976 cv
3020.94 267.976 li
3020.94 264.575 3023.69 261.818 3027.09 261.818 cv
3125.84 261.818 li
3129.24 261.818 3132 264.575 3132 267.976 cv
3132 267.976 li
3132 271.377 3129.24 274.134 3125.84 274.134 cv
cp
.733333 .811765 .980392 rgb
f
3125.84 307.9 mo
3027.09 307.9 li
3023.69 307.9 3020.94 305.144 3020.94 301.743 cv
3020.94 301.743 li
3020.94 298.341 3023.69 295.584 3027.09 295.584 cv
3125.84 295.584 li
3129.24 295.584 3132 298.341 3132 301.743 cv
3132 301.743 li
3132 305.144 3129.24 307.9 3125.84 307.9 cv
cp
f
3125.84 341.667 mo
3027.09 341.667 li
3023.69 341.667 3020.94 338.91 3020.94 335.509 cv
3020.94 335.509 li
3020.94 332.107 3023.69 329.351 3027.09 329.351 cv
3125.84 329.351 li
3129.24 329.351 3132 332.107 3132 335.509 cv
3132 335.509 li
3132 338.91 3129.24 341.667 3125.84 341.667 cv
cp
f
384.083 301.743 mo
384.083 337.617 355.001 366.698 319.126 366.698 cv
283.252 366.698 254.17 337.617 254.17 301.743 cv
254.17 265.868 283.252 236.786 319.126 236.786 cv
355.001 236.786 384.083 265.868 384.083 301.743 cv
cp
.486275 .603922 .94902 rgb
f
479.851 275.239 mo
471.827 282.889 li
466.369 277.12 460.229 274.235 453.406 274.235 cv
447.647 274.235 442.797 276.203 438.854 280.141 cv
434.91 284.078 432.938 288.931 432.938 294.7 cv
432.938 298.719 433.812 302.287 435.559 305.404 cv
437.305 308.521 439.774 310.968 442.968 312.745 cv
446.161 314.522 449.709 315.411 453.611 315.411 cv
456.94 315.411 459.982 314.789 462.739 313.545 cv
465.495 312.301 468.524 310.039 471.827 306.758 cv
479.604 314.873 li
475.152 319.219 470.945 322.231 466.985 323.912 cv
463.024 325.591 458.505 326.432 453.424 326.432 cv
444.056 326.432 436.387 323.462 430.419 317.521 cv
424.45 311.58 421.467 303.967 421.467 294.68 cv
421.467 288.671 422.825 283.331 425.543 278.66 cv
428.261 273.989 432.153 270.234 437.22 267.393 cv
442.286 264.553 447.742 263.132 453.588 263.132 cv
458.559 263.132 463.346 264.182 467.948 266.281 cv
472.551 268.381 476.518 271.368 479.851 275.239 cv
cp
.0235294 .0196078 .207843 rgb
f
509.779 289.722 mo
506.305 289.722 503.411 290.931 501.1 293.348 cv
498.787 295.766 497.632 298.858 497.632 302.628 cv
497.632 306.507 498.773 309.648 501.059 312.051 cv
503.343 314.455 506.236 315.657 509.738 315.657 cv
513.24 315.657 516.154 314.441 518.48 312.011 cv
520.806 309.58 521.969 306.452 521.969 302.628 cv
521.969 298.805 520.826 295.698 518.542 293.307 cv
516.257 290.917 513.337 289.722 509.779 289.722 cv
cp
509.596 279.192 mo
513.802 279.192 517.755 280.244 521.456 282.348 cv
525.157 284.451 528.046 287.305 530.122 290.911 cv
532.197 294.516 533.235 298.408 533.235 302.587 cv
533.235 306.794 532.19 310.727 530.102 314.387 cv
528.012 318.047 525.164 320.908 521.559 322.97 cv
517.953 325.032 513.979 326.063 509.637 326.063 cv
503.245 326.063 497.789 323.79 493.269 319.242 cv
488.747 314.694 486.487 309.17 486.487 302.669 cv
486.487 295.704 489.041 289.9 494.149 285.256 cv
498.629 281.214 503.777 279.192 509.596 279.192 cv
cp
f
542.29 280.339 mo
553.476 280.339 li
553.476 285.461 li
555.388 283.358 557.514 281.788 559.851 280.749 cv
562.188 279.712 564.736 279.192 567.497 279.192 cv
570.285 279.192 572.8 279.876 575.041 281.241 cv
577.282 282.607 579.087 284.601 580.453 287.223 cv
582.229 284.601 584.409 282.607 586.993 281.241 cv
589.576 279.876 592.398 279.192 595.46 279.192 cv
598.63 279.192 601.418 279.93 603.823 281.405 cv
606.229 282.88 607.958 284.806 609.01 287.182 cv
610.063 289.559 610.589 293.423 610.589 298.776 cv
610.589 324.916 li
599.322 324.916 li
599.322 302.3 li
599.322 297.247 598.693 293.827 597.438 292.037 cv
596.181 290.248 594.296 289.354 591.783 289.354 cv
589.871 289.354 588.157 289.9 586.642 290.993 cv
585.125 292.085 583.999 293.594 583.261 295.52 cv
582.523 297.445 582.155 300.539 582.155 304.799 cv
582.155 324.916 li
570.888 324.916 li
570.888 303.324 li
570.888 299.337 570.594 296.448 570.005 294.659 cv
569.416 292.871 568.533 291.539 567.356 290.664 cv
566.179 289.791 564.755 289.354 563.085 289.354 cv
561.224 289.354 559.532 289.906 558.013 291.013 cv
556.493 292.119 555.357 293.669 554.604 295.663 cv
553.852 297.657 553.476 300.799 553.476 305.086 cv
553.476 324.916 li
542.29 324.916 li
542.29 280.339 li
cp
f
644.103 289.518 mo
640.579 289.518 637.656 290.72 635.335 293.123 cv
633.014 295.526 631.853 298.668 631.853 302.546 cv
631.853 306.507 633.014 309.71 635.335 312.154 cv
637.656 314.599 640.579 315.82 644.103 315.82 cv
647.517 315.82 650.392 314.578 652.728 312.093 cv
655.063 309.607 656.23 306.438 656.23 302.587 cv
656.23 298.764 655.083 295.629 652.789 293.184 cv
650.494 290.74 647.599 289.518 644.103 289.518 cv
cp
632.345 280.339 mo
632.345 285.256 li
634.365 283.235 636.55 281.72 638.899 280.708 cv
641.248 279.698 643.761 279.192 646.438 279.192 cv
652.256 279.192 657.199 281.392 661.27 285.789 cv
665.34 290.187 667.375 295.827 667.375 302.71 cv
667.375 309.348 665.271 314.898 661.065 319.364 cv
656.858 323.831 651.873 326.063 646.11 326.063 cv
643.543 326.063 641.153 325.605 638.94 324.691 cv
636.729 323.776 634.529 322.28 632.345 320.204 cv
632.345 341.223 li
621.241 341.223 li
621.241 280.339 li
632.345 280.339 li
cp
f
697.776 289.518 mo
694.318 289.518 691.446 290.74 689.16 293.184 cv
686.873 295.629 685.729 298.764 685.729 302.587 cv
685.729 306.438 686.893 309.607 689.221 312.093 cv
691.548 314.578 694.413 315.82 697.816 315.82 cv
701.328 315.82 704.241 314.599 706.555 312.154 cv
708.868 309.71 710.025 306.507 710.025 302.546 cv
710.025 298.668 708.868 295.526 706.555 293.123 cv
704.241 290.72 701.314 289.518 697.776 289.518 cv
cp
709.534 280.339 mo
720.719 280.339 li
720.719 324.916 li
709.534 324.916 li
709.534 320.204 li
707.351 322.28 705.161 323.776 702.966 324.691 cv
700.77 325.605 698.39 326.063 695.824 326.063 cv
690.068 326.063 685.089 323.831 680.888 319.364 cv
676.687 314.898 674.586 309.348 674.586 302.71 cv
674.586 295.827 676.618 290.187 680.684 285.789 cv
684.748 281.392 689.687 279.192 695.498 279.192 cv
698.171 279.192 700.681 279.698 703.026 280.708 cv
705.373 281.72 707.542 283.235 709.534 285.256 cv
709.534 280.339 li
cp
f
732.027 280.339 mo
743.212 280.339 li
743.212 284.908 li
745.749 282.77 748.046 281.283 750.105 280.446 cv
752.165 279.61 754.272 279.192 756.427 279.192 cv
760.846 279.192 764.596 280.736 767.678 283.822 cv
770.269 286.444 771.564 290.323 771.564 295.458 cv
771.564 324.916 li
760.502 324.916 li
760.502 305.396 li
760.502 300.075 760.264 296.543 759.786 294.797 cv
759.31 293.051 758.479 291.721 757.293 290.807 cv
756.107 289.892 754.644 289.436 752.899 289.436 cv
750.638 289.436 748.696 290.192 747.075 291.707 cv
745.454 293.222 744.329 295.315 743.703 297.988 cv
743.376 299.381 743.212 302.395 743.212 307.032 cv
743.212 324.916 li
732.027 324.916 li
732.027 280.339 li
cp
f
777.435 280.339 mo
788.865 280.339 li
800.444 308.31 li
813.221 280.339 li
824.684 280.339 li
796.766 341.223 li
785.214 341.223 li
794.38 321.59 li
777.435 280.339 li
cp
f
258.511 945.004 mo
263.479 945.004 li
263.479 979.329 li
279.928 979.329 li
279.928 983.498 li
258.511 983.498 li
258.511 945.004 li
cp
0 0 0 rgb
f
287.581 969.734 mo
287.581 975.788 291.064 980.357 295.977 980.357 cv
300.774 980.357 304.372 975.845 304.372 969.62 cv
304.372 964.936 302.03 958.996 296.091 958.996 cv
290.151 958.996 287.581 964.479 287.581 969.734 cv
cp
309.513 969.448 mo
309.513 979.672 302.431 984.127 295.748 984.127 cv
288.267 984.127 282.498 978.644 282.498 969.905 cv
282.498 960.652 288.552 955.227 296.205 955.227 cv
304.144 955.227 309.513 960.995 309.513 969.448 cv
cp
f
315.853 964.479 mo
315.853 961.224 315.795 958.426 315.624 955.855 cv
320.021 955.855 li
320.192 961.281 li
320.421 961.281 li
321.678 957.568 324.705 955.227 328.074 955.227 cv
328.646 955.227 329.046 955.284 329.502 955.398 cv
329.502 960.139 li
328.988 960.024 328.475 959.968 327.789 959.968 cv
324.248 959.968 321.735 962.652 321.05 966.421 cv
320.936 967.106 320.821 967.906 320.821 968.763 cv
320.821 983.498 li
315.853 983.498 li
315.853 964.479 li
cp
f
351.491 966.992 mo
351.549 963.794 350.178 958.825 344.523 958.825 cv
339.44 958.825 337.213 963.509 336.813 966.992 cv
351.491 966.992 li
cp
336.756 970.591 mo
336.87 977.387 341.211 980.186 346.237 980.186 cv
349.835 980.186 352.006 979.558 353.891 978.758 cv
354.747 982.356 li
352.977 983.155 349.949 984.069 345.552 984.069 cv
337.042 984.069 331.959 978.473 331.959 970.134 cv
331.959 961.795 336.87 955.227 344.924 955.227 cv
353.947 955.227 356.346 963.166 356.346 968.249 cv
356.346 969.277 356.232 970.077 356.175 970.591 cv
336.756 970.591 li
cp
f
362.571 963.337 mo
362.571 960.481 362.515 958.14 362.343 955.855 cv
366.74 955.855 li
366.969 960.31 li
367.141 960.31 li
368.683 957.683 371.253 955.227 375.821 955.227 cv
379.591 955.227 382.447 957.511 383.646 960.767 cv
383.761 960.767 li
384.617 959.225 385.702 958.025 386.845 957.168 cv
388.501 955.912 390.329 955.227 392.956 955.227 cv
396.611 955.227 402.037 957.626 402.037 967.221 cv
402.037 983.498 li
397.125 983.498 li
397.125 967.85 li
397.125 962.537 395.184 959.339 391.128 959.339 cv
388.272 959.339 386.045 961.452 385.188 963.908 cv
384.96 964.593 384.789 965.508 384.789 966.421 cv
384.789 983.498 li
379.877 983.498 li
379.877 966.936 li
379.877 962.537 377.935 959.339 374.108 959.339 cv
370.967 959.339 368.683 961.852 367.883 964.365 cv
367.598 965.107 367.483 965.965 367.483 966.821 cv
367.483 983.498 li
362.571 983.498 li
362.571 963.337 li
cp
f
422.313 983.498 mo
422.313 955.855 li
427.339 955.855 li
427.339 983.498 li
422.313 983.498 li
cp
427.91 948.088 mo
427.968 949.801 426.711 951.172 424.712 951.172 cv
422.941 951.172 421.685 949.801 421.685 948.088 cv
421.685 946.317 422.998 944.946 424.826 944.946 cv
426.711 944.946 427.91 946.317 427.91 948.088 cv
cp
f
440.646 972.247 mo
440.646 972.989 440.761 973.675 440.875 974.303 cv
441.788 977.787 444.815 980.186 448.414 980.186 cv
453.726 980.186 456.81 975.845 456.81 969.506 cv
456.81 963.966 453.896 959.225 448.585 959.225 cv
445.158 959.225 441.96 961.681 440.989 965.45 cv
440.817 966.079 440.646 966.821 440.646 967.507 cv
440.646 972.247 li
cp
435.678 964.879 mo
435.678 961.338 435.563 958.482 435.449 955.855 cv
439.961 955.855 li
440.189 960.596 li
440.304 960.596 li
442.359 957.226 445.615 955.227 450.127 955.227 cv
456.81 955.227 461.835 960.881 461.835 969.277 cv
461.835 979.215 455.781 984.127 449.271 984.127 cv
445.615 984.127 442.417 982.527 440.761 979.786 cv
440.646 979.786 li
440.646 994.807 li
435.678 994.807 li
435.678 964.879 li
cp
f
467.489 978.358 mo
468.975 979.329 471.602 980.357 474.114 980.357 cv
477.77 980.357 479.483 978.529 479.483 976.245 cv
479.483 973.846 478.056 972.532 474.343 971.162 cv
469.374 969.392 467.032 966.649 467.032 963.337 cv
467.032 958.882 470.631 955.227 476.57 955.227 cv
479.369 955.227 481.825 956.026 483.367 956.94 cv
482.11 960.596 li
481.025 959.91 479.026 958.996 476.456 958.996 cv
473.486 958.996 471.83 960.71 471.83 962.766 cv
471.83 965.051 473.486 966.079 477.085 967.449 cv
481.882 969.277 484.338 971.676 484.338 975.788 cv
484.338 980.643 480.568 984.069 474.001 984.069 cv
470.974 984.069 468.175 983.327 466.233 982.185 cv
467.489 978.358 li
cp
f
513.923 975.959 mo
513.923 978.815 513.98 981.328 514.151 983.498 cv
509.696 983.498 li
509.411 978.986 li
509.297 978.986 li
507.983 981.214 505.07 984.127 500.159 984.127 cv
495.818 984.127 490.621 981.728 490.621 972.019 cv
490.621 955.855 li
495.646 955.855 li
495.646 971.162 li
495.646 976.416 497.246 979.957 501.815 979.957 cv
505.185 979.957 507.526 977.615 508.44 975.388 cv
508.726 974.646 508.897 973.731 508.897 972.818 cv
508.897 955.855 li
513.923 955.855 li
513.923 975.959 li
cp
f
522.262 963.337 mo
522.262 960.481 522.205 958.14 522.033 955.855 cv
526.431 955.855 li
526.659 960.31 li
526.831 960.31 li
528.373 957.683 530.943 955.227 535.512 955.227 cv
539.281 955.227 542.138 957.511 543.337 960.767 cv
543.451 960.767 li
544.308 959.225 545.393 958.025 546.535 957.168 cv
548.191 955.912 550.02 955.227 552.646 955.227 cv
556.302 955.227 561.728 957.626 561.728 967.221 cv
561.728 983.498 li
556.815 983.498 li
556.815 967.85 li
556.815 962.537 554.874 959.339 550.818 959.339 cv
547.963 959.339 545.735 961.452 544.879 963.908 cv
544.65 964.593 544.479 965.508 544.479 966.421 cv
544.479 983.498 li
539.567 983.498 li
539.567 966.936 li
539.567 962.537 537.625 959.339 533.799 959.339 cv
530.657 959.339 528.373 961.852 527.573 964.365 cv
527.288 965.107 527.174 965.965 527.174 966.821 cv
527.174 983.498 li
522.262 983.498 li
522.262 963.337 li
cp
f
600.851 967.106 mo
600.851 966.478 600.794 965.622 600.623 964.993 cv
599.88 961.795 597.139 959.168 593.369 959.168 cv
588.172 959.168 585.088 963.737 585.088 969.848 cv
585.088 975.445 587.829 980.071 593.255 980.071 cv
596.625 980.071 599.709 977.844 600.623 974.074 cv
600.794 973.39 600.851 972.704 600.851 971.904 cv
600.851 967.106 li
cp
605.877 942.947 mo
605.877 976.359 li
605.877 978.815 605.935 981.613 606.105 983.498 cv
601.594 983.498 li
601.365 978.701 li
601.251 978.701 li
599.709 981.785 596.339 984.127 591.827 984.127 cv
585.145 984.127 580.005 978.473 580.005 970.077 cv
579.947 960.881 585.659 955.227 592.398 955.227 cv
596.625 955.227 599.48 957.226 600.736 959.453 cv
600.851 959.453 li
600.851 942.947 li
605.877 942.947 li
cp
f
617.3 969.734 mo
617.3 975.788 620.784 980.357 625.695 980.357 cv
630.493 980.357 634.092 975.845 634.092 969.62 cv
634.092 964.936 631.75 958.996 625.81 958.996 cv
619.87 958.996 617.3 964.479 617.3 969.734 cv
cp
639.231 969.448 mo
639.231 979.672 632.149 984.127 625.468 984.127 cv
617.985 984.127 612.217 978.644 612.217 969.905 cv
612.217 960.652 618.271 955.227 625.924 955.227 cv
633.863 955.227 639.231 960.995 639.231 969.448 cv
cp
f
645.571 942.947 mo
650.598 942.947 li
650.598 983.498 li
645.571 983.498 li
645.571 942.947 li
cp
f
662.134 969.734 mo
662.134 975.788 665.618 980.357 670.529 980.357 cv
675.327 980.357 678.926 975.845 678.926 969.62 cv
678.926 964.936 676.584 958.996 670.644 958.996 cv
664.704 958.996 662.134 964.479 662.134 969.734 cv
cp
684.065 969.448 mo
684.065 979.672 676.983 984.127 670.302 984.127 cv
662.819 984.127 657.051 978.644 657.051 969.905 cv
657.051 960.652 663.105 955.227 670.758 955.227 cv
678.697 955.227 684.065 960.995 684.065 969.448 cv
cp
f
690.405 964.479 mo
690.405 961.224 690.349 958.426 690.177 955.855 cv
694.574 955.855 li
694.746 961.281 li
694.975 961.281 li
696.231 957.568 699.258 955.227 702.628 955.227 cv
703.199 955.227 703.599 955.284 704.056 955.398 cv
704.056 960.139 li
703.542 960.024 703.027 959.968 702.342 959.968 cv
698.801 959.968 696.288 962.652 695.603 966.421 cv
695.488 967.106 695.374 967.906 695.374 968.763 cv
695.374 983.498 li
690.405 983.498 li
690.405 964.479 li
cp
f
720.504 978.358 mo
721.989 979.329 724.616 980.357 727.129 980.357 cv
730.784 980.357 732.498 978.529 732.498 976.245 cv
732.498 973.846 731.07 972.532 727.357 971.162 cv
722.389 969.392 720.047 966.649 720.047 963.337 cv
720.047 958.882 723.646 955.227 729.585 955.227 cv
732.384 955.227 734.84 956.026 736.382 956.94 cv
735.125 960.596 li
734.04 959.91 732.041 958.996 729.471 958.996 cv
726.501 958.996 724.845 960.71 724.845 962.766 cv
724.845 965.051 726.501 966.079 730.1 967.449 cv
734.896 969.277 737.353 971.676 737.353 975.788 cv
737.353 980.643 733.583 984.069 727.016 984.069 cv
723.988 984.069 721.189 983.327 719.248 982.185 cv
720.504 978.358 li
cp
f
743.807 983.498 mo
743.807 955.855 li
748.833 955.855 li
748.833 983.498 li
743.807 983.498 li
cp
749.404 948.088 mo
749.461 949.801 748.204 951.172 746.205 951.172 cv
744.435 951.172 743.179 949.801 743.179 948.088 cv
743.179 946.317 744.492 944.946 746.319 944.946 cv
748.204 944.946 749.404 946.317 749.404 948.088 cv
cp
f
763.225 947.916 mo
763.225 955.855 li
770.421 955.855 li
770.421 959.682 li
763.225 959.682 li
763.225 974.589 li
763.225 978.016 764.196 979.957 766.994 979.957 cv
768.309 979.957 769.279 979.786 769.907 979.614 cv
770.136 983.384 li
769.165 983.784 767.623 984.069 765.681 984.069 cv
763.339 984.069 761.454 983.327 760.255 981.956 cv
758.827 980.472 758.313 978.016 758.313 974.76 cv
758.313 959.682 li
754.029 959.682 li
754.029 955.855 li
758.313 955.855 li
758.313 949.23 li
763.225 947.916 li
cp
f
802.748 969.392 mo
797.265 969.277 791.039 970.248 791.039 975.616 cv
791.039 978.872 793.21 980.414 795.78 980.414 cv
799.378 980.414 801.662 978.13 802.462 975.788 cv
802.634 975.273 802.748 974.703 802.748 974.188 cv
802.748 969.392 li
cp
803.49 983.498 mo
803.091 980.015 li
802.919 980.015 li
801.377 982.185 798.407 984.127 794.466 984.127 cv
788.869 984.127 786.014 980.186 786.014 976.188 cv
786.014 969.506 791.953 965.851 802.634 965.907 cv
802.634 965.336 li
802.634 963.052 802.005 958.939 796.351 958.939 cv
793.781 958.939 791.097 959.739 789.154 960.995 cv
788.013 957.683 li
790.297 956.198 793.609 955.227 797.094 955.227 cv
805.546 955.227 807.603 960.995 807.603 966.535 cv
807.603 976.873 li
807.603 979.271 807.717 981.613 808.06 983.498 cv
803.49 983.498 li
cp
f
815.713 963.337 mo
815.713 960.481 815.655 958.14 815.484 955.855 cv
819.882 955.855 li
820.11 960.31 li
820.281 960.31 li
821.823 957.683 824.394 955.227 828.963 955.227 cv
832.732 955.227 835.588 957.511 836.787 960.767 cv
836.901 960.767 li
837.759 959.225 838.844 958.025 839.985 957.168 cv
841.643 955.912 843.47 955.227 846.097 955.227 cv
849.752 955.227 855.178 957.626 855.178 967.221 cv
855.178 983.498 li
850.267 983.498 li
850.267 967.85 li
850.267 962.537 848.324 959.339 844.27 959.339 cv
841.414 959.339 839.187 961.452 838.329 963.908 cv
838.101 964.593 837.93 965.508 837.93 966.421 cv
837.93 983.498 li
833.018 983.498 li
833.018 966.936 li
833.018 962.537 831.076 959.339 827.249 959.339 cv
824.108 959.339 821.823 961.852 821.024 964.365 cv
820.738 965.107 820.624 965.965 820.624 966.821 cv
820.624 983.498 li
815.713 983.498 li
815.713 963.337 li
cp
f
880.88 966.992 mo
880.938 963.794 879.566 958.825 873.912 958.825 cv
868.829 958.825 866.602 963.509 866.202 966.992 cv
880.88 966.992 li
cp
866.145 970.591 mo
866.259 977.387 870.6 980.186 875.626 980.186 cv
879.224 980.186 881.395 979.558 883.279 978.758 cv
884.136 982.356 li
882.365 983.155 879.338 984.069 874.94 984.069 cv
866.431 984.069 861.348 978.473 861.348 970.134 cv
861.348 961.795 866.259 955.227 874.313 955.227 cv
883.336 955.227 885.734 963.166 885.734 968.249 cv
885.734 969.277 885.621 970.077 885.563 970.591 cv
866.145 970.591 li
cp
f
898.014 947.916 mo
898.014 955.855 li
905.21 955.855 li
905.21 959.682 li
898.014 959.682 li
898.014 974.589 li
898.014 978.016 898.985 979.957 901.783 979.957 cv
903.098 979.957 904.068 979.786 904.696 979.614 cv
904.925 983.384 li
903.954 983.784 902.412 984.069 900.47 984.069 cv
898.128 984.069 896.243 983.327 895.044 981.956 cv
893.616 980.472 893.103 978.016 893.103 974.76 cv
893.103 959.682 li
888.818 959.682 li
888.818 955.855 li
893.103 955.855 li
893.103 949.23 li
898.014 947.916 li
cp
f
907.438 990.523 mo
908.695 987.153 910.237 981.042 910.865 976.873 cv
916.463 976.302 li
915.148 981.156 912.636 987.496 911.037 990.181 cv
907.438 990.523 li
cp
f
954.328 982.471 mo
953.015 983.155 950.102 984.069 946.389 984.069 cv
938.051 984.069 932.625 978.415 932.625 969.962 cv
932.625 961.452 938.45 955.284 947.475 955.284 cv
950.444 955.284 953.071 956.026 954.442 956.712 cv
953.3 960.596 li
952.101 959.91 950.216 959.282 947.475 959.282 cv
941.135 959.282 937.708 963.966 937.708 969.734 cv
937.708 976.131 941.82 980.071 947.303 980.071 cv
950.158 980.071 952.043 979.329 953.471 978.701 cv
954.328 982.471 li
cp
f
962.953 969.734 mo
962.953 975.788 966.437 980.357 971.349 980.357 cv
976.146 980.357 979.744 975.845 979.744 969.62 cv
979.744 964.936 977.402 958.996 971.463 958.996 cv
965.523 958.996 962.953 964.479 962.953 969.734 cv
cp
984.885 969.448 mo
984.885 979.672 977.803 984.127 971.12 984.127 cv
963.639 984.127 957.87 978.644 957.87 969.905 cv
957.87 960.652 963.924 955.227 971.577 955.227 cv
979.516 955.227 984.885 960.995 984.885 969.448 cv
cp
f
991.225 963.337 mo
991.225 960.481 991.167 958.14 990.996 955.855 cv
995.45 955.855 li
995.736 960.425 li
995.851 960.425 li
997.221 957.797 1000.42 955.227 1004.99 955.227 cv
1008.82 955.227 1014.75 957.511 1014.75 966.992 cv
1014.75 983.498 li
1009.73 983.498 li
1009.73 967.563 li
1009.73 963.108 1008.07 959.396 1003.33 959.396 cv
1000.02 959.396 997.449 961.738 996.593 964.536 cv
996.364 965.165 996.25 966.021 996.25 966.878 cv
996.25 983.498 li
991.225 983.498 li
991.225 963.337 li
cp
f
1022.24 978.358 mo
1023.72 979.329 1026.35 980.357 1028.86 980.357 cv
1032.52 980.357 1034.23 978.529 1034.23 976.245 cv
1034.23 973.846 1032.8 972.532 1029.09 971.162 cv
1024.12 969.392 1021.78 966.649 1021.78 963.337 cv
1021.78 958.882 1025.38 955.227 1031.32 955.227 cv
1034.12 955.227 1036.57 956.026 1038.11 956.94 cv
1036.86 960.596 li
1035.77 959.91 1033.77 958.996 1031.2 958.996 cv
1028.23 958.996 1026.58 960.71 1026.58 962.766 cv
1026.58 965.051 1028.23 966.079 1031.83 967.449 cv
1036.63 969.277 1039.09 971.676 1039.09 975.788 cv
1039.09 980.643 1035.32 984.069 1028.75 984.069 cv
1025.72 984.069 1022.92 983.327 1020.98 982.185 cv
1022.24 978.358 li
cp
f
1063.07 966.992 mo
1063.13 963.794 1061.76 958.825 1056.11 958.825 cv
1051.02 958.825 1048.79 963.509 1048.4 966.992 cv
1063.07 966.992 li
cp
1048.34 970.591 mo
1048.45 977.387 1052.79 980.186 1057.82 980.186 cv
1061.42 980.186 1063.59 979.558 1065.47 978.758 cv
1066.33 982.356 li
1064.56 983.155 1061.53 984.069 1057.13 984.069 cv
1048.62 984.069 1043.54 978.473 1043.54 970.134 cv
1043.54 961.795 1048.45 955.227 1056.51 955.227 cv
1065.53 955.227 1067.93 963.166 1067.93 968.249 cv
1067.93 969.277 1067.81 970.077 1067.76 970.591 cv
1048.34 970.591 li
cp
f
1093.86 982.471 mo
1092.54 983.155 1089.63 984.069 1085.92 984.069 cv
1077.58 984.069 1072.15 978.415 1072.15 969.962 cv
1072.15 961.452 1077.98 955.284 1087 955.284 cv
1089.97 955.284 1092.6 956.026 1093.97 956.712 cv
1092.83 960.596 li
1091.63 959.91 1089.75 959.282 1087 959.282 cv
1080.66 959.282 1077.24 963.966 1077.24 969.734 cv
1077.24 976.131 1081.35 980.071 1086.83 980.071 cv
1089.69 980.071 1091.57 979.329 1093 978.701 cv
1093.86 982.471 li
cp
f
1111.39 966.192 mo
1111.39 969.905 li
1097.29 969.905 li
1097.29 966.192 li
1111.39 966.192 li
cp
f
264.393 1027.64 mo
264.393 1035.58 li
271.589 1035.58 li
271.589 1039.4 li
264.393 1039.4 li
264.393 1054.31 li
264.393 1057.73 265.364 1059.68 268.162 1059.68 cv
269.477 1059.68 270.447 1059.51 271.075 1059.33 cv
271.304 1063.1 li
270.333 1063.5 268.791 1063.79 266.849 1063.79 cv
264.507 1063.79 262.622 1063.05 261.423 1061.68 cv
259.995 1060.19 259.481 1057.73 259.481 1054.48 cv
259.481 1039.4 li
255.197 1039.4 li
255.197 1035.58 li
259.481 1035.58 li
259.481 1028.95 li
264.393 1027.64 li
cp
f
294.436 1046.71 mo
294.492 1043.51 293.122 1038.54 287.468 1038.54 cv
282.385 1038.54 280.157 1043.23 279.757 1046.71 cv
294.436 1046.71 li
cp
279.7 1050.31 mo
279.814 1057.11 284.155 1059.91 289.181 1059.91 cv
292.779 1059.91 294.949 1059.28 296.834 1058.48 cv
297.69 1062.08 li
295.92 1062.88 292.894 1063.79 288.495 1063.79 cv
279.985 1063.79 274.902 1058.19 274.902 1049.85 cv
274.902 1041.52 279.814 1034.95 287.867 1034.95 cv
296.892 1034.95 299.29 1042.88 299.29 1047.97 cv
299.29 1049 299.176 1049.8 299.119 1050.31 cv
279.7 1050.31 li
cp
f
311.569 1027.64 mo
311.569 1035.58 li
318.766 1035.58 li
318.766 1039.4 li
311.569 1039.4 li
311.569 1054.31 li
311.569 1057.73 312.54 1059.68 315.339 1059.68 cv
316.652 1059.68 317.623 1059.51 318.252 1059.33 cv
318.48 1063.1 li
317.509 1063.5 315.967 1063.79 314.025 1063.79 cv
311.684 1063.79 309.799 1063.05 308.6 1061.68 cv
307.172 1060.19 306.657 1057.73 306.657 1054.48 cv
306.657 1039.4 li
302.374 1039.4 li
302.374 1035.58 li
306.657 1035.58 li
306.657 1028.95 li
311.569 1027.64 li
cp
f
347.551 1055.68 mo
347.551 1058.54 347.608 1061.05 347.779 1063.22 cv
343.324 1063.22 li
343.039 1058.71 li
342.925 1058.71 li
341.611 1060.93 338.698 1063.85 333.787 1063.85 cv
329.446 1063.85 324.249 1061.45 324.249 1051.74 cv
324.249 1035.58 li
329.274 1035.58 li
329.274 1050.88 li
329.274 1056.14 330.874 1059.68 335.443 1059.68 cv
338.813 1059.68 341.154 1057.34 342.068 1055.11 cv
342.354 1054.37 342.525 1053.45 342.525 1052.54 cv
342.525 1035.58 li
347.551 1035.58 li
347.551 1055.68 li
cp
f
373.424 1046.71 mo
373.48 1043.51 372.11 1038.54 366.456 1038.54 cv
361.373 1038.54 359.146 1043.23 358.745 1046.71 cv
373.424 1046.71 li
cp
358.688 1050.31 mo
358.803 1057.11 363.144 1059.91 368.169 1059.91 cv
371.768 1059.91 373.938 1059.28 375.822 1058.48 cv
376.679 1062.08 li
374.908 1062.88 371.882 1063.79 367.483 1063.79 cv
358.974 1063.79 353.891 1058.19 353.891 1049.85 cv
353.891 1041.52 358.803 1034.95 366.855 1034.95 cv
375.88 1034.95 378.278 1042.88 378.278 1047.97 cv
378.278 1049 378.164 1049.8 378.107 1050.31 cv
358.688 1050.31 li
cp
f
384.504 1044.2 mo
384.504 1040.94 384.446 1038.15 384.275 1035.58 cv
388.673 1035.58 li
388.844 1041 li
389.072 1041 li
390.329 1037.29 393.356 1034.95 396.726 1034.95 cv
397.297 1034.95 397.697 1035 398.153 1035.12 cv
398.153 1039.86 li
397.64 1039.75 397.126 1039.69 396.44 1039.69 cv
392.899 1039.69 390.387 1042.37 389.701 1046.14 cv
389.587 1046.83 389.473 1047.63 389.473 1048.48 cv
389.473 1063.22 li
384.504 1063.22 li
384.504 1044.2 li
cp
f
429.852 1049.11 mo
424.369 1049 418.144 1049.97 418.144 1055.34 cv
418.144 1058.59 420.313 1060.13 422.884 1060.13 cv
426.482 1060.13 428.767 1057.85 429.566 1055.51 cv
429.737 1054.99 429.852 1054.42 429.852 1053.91 cv
429.852 1049.11 li
cp
430.594 1063.22 mo
430.194 1059.73 li
430.023 1059.73 li
428.481 1061.91 425.511 1063.85 421.57 1063.85 cv
415.973 1063.85 413.117 1059.91 413.117 1055.91 cv
413.117 1049.23 419.058 1045.57 429.737 1045.63 cv
429.737 1045.06 li
429.737 1042.77 429.109 1038.66 423.455 1038.66 cv
420.885 1038.66 418.2 1039.46 416.259 1040.72 cv
415.116 1037.4 li
417.401 1035.92 420.714 1034.95 424.197 1034.95 cv
432.65 1034.95 434.706 1040.72 434.706 1046.26 cv
434.706 1056.59 li
434.706 1058.99 434.82 1061.33 435.163 1063.22 cv
430.594 1063.22 li
cp
f
461.664 1046.83 mo
461.664 1046.2 461.606 1045.34 461.436 1044.71 cv
460.693 1041.52 457.951 1038.89 454.183 1038.89 cv
448.984 1038.89 445.9 1043.46 445.9 1049.57 cv
445.9 1055.17 448.643 1059.79 454.068 1059.79 cv
457.438 1059.79 460.521 1057.56 461.436 1053.79 cv
461.606 1053.11 461.664 1052.42 461.664 1051.62 cv
461.664 1046.83 li
cp
466.69 1022.67 mo
466.69 1056.08 li
466.69 1058.54 466.747 1061.33 466.919 1063.22 cv
462.406 1063.22 li
462.178 1058.42 li
462.063 1058.42 li
460.521 1061.5 457.152 1063.85 452.64 1063.85 cv
445.958 1063.85 440.817 1058.19 440.817 1049.8 cv
440.761 1040.6 446.472 1034.95 453.211 1034.95 cv
457.438 1034.95 460.293 1036.95 461.55 1039.17 cv
461.664 1039.17 li
461.664 1022.67 li
466.69 1022.67 li
cp
f
475.029 1063.22 mo
475.029 1035.58 li
480.055 1035.58 li
480.055 1063.22 li
475.029 1063.22 li
cp
480.626 1027.81 mo
480.684 1029.52 479.427 1030.89 477.428 1030.89 cv
475.657 1030.89 474.4 1029.52 474.4 1027.81 cv
474.4 1026.04 475.714 1024.67 477.542 1024.67 cv
479.427 1024.67 480.626 1026.04 480.626 1027.81 cv
cp
f
493.362 1051.97 mo
493.362 1052.71 493.477 1053.39 493.591 1054.02 cv
494.504 1057.51 497.531 1059.91 501.13 1059.91 cv
506.441 1059.91 509.525 1055.56 509.525 1049.23 cv
509.525 1043.69 506.612 1038.95 501.301 1038.95 cv
497.874 1038.95 494.676 1041.4 493.705 1045.17 cv
493.533 1045.8 493.362 1046.54 493.362 1047.23 cv
493.362 1051.97 li
cp
488.394 1044.6 mo
488.394 1041.06 488.279 1038.2 488.165 1035.58 cv
492.677 1035.58 li
492.905 1040.32 li
493.02 1040.32 li
495.075 1036.95 498.331 1034.95 502.843 1034.95 cv
509.525 1034.95 514.551 1040.6 514.551 1049 cv
514.551 1058.93 508.497 1063.85 501.986 1063.85 cv
498.331 1063.85 495.133 1062.25 493.477 1059.51 cv
493.362 1059.51 li
493.362 1074.53 li
488.394 1074.53 li
488.394 1044.6 li
cp
f
520.891 1063.22 mo
520.891 1035.58 li
525.917 1035.58 li
525.917 1063.22 li
520.891 1063.22 li
cp
526.488 1027.81 mo
526.545 1029.52 525.288 1030.89 523.289 1030.89 cv
521.519 1030.89 520.263 1029.52 520.263 1027.81 cv
520.263 1026.04 521.576 1024.67 523.403 1024.67 cv
525.288 1024.67 526.488 1026.04 526.488 1027.81 cv
cp
f
533.569 1058.08 mo
535.055 1059.05 537.682 1060.08 540.194 1060.08 cv
543.85 1060.08 545.563 1058.25 545.563 1055.96 cv
545.563 1053.57 544.136 1052.25 540.423 1050.88 cv
535.454 1049.11 533.112 1046.37 533.112 1043.06 cv
533.112 1038.6 536.711 1034.95 542.65 1034.95 cv
545.449 1034.95 547.905 1035.75 549.447 1036.66 cv
548.19 1040.32 li
547.105 1039.63 545.106 1038.72 542.536 1038.72 cv
539.566 1038.72 537.91 1040.43 537.91 1042.49 cv
537.91 1044.77 539.566 1045.8 543.165 1047.17 cv
547.962 1049 550.418 1051.4 550.418 1055.51 cv
550.418 1060.36 546.648 1063.79 540.081 1063.79 cv
537.054 1063.79 534.255 1063.05 532.313 1061.91 cv
533.569 1058.08 li
cp
f
576.576 1062.19 mo
575.263 1062.88 572.35 1063.79 568.638 1063.79 cv
560.299 1063.79 554.873 1058.13 554.873 1049.68 cv
554.873 1041.17 560.699 1035 569.723 1035 cv
572.692 1035 575.32 1035.75 576.69 1036.43 cv
575.549 1040.32 li
574.349 1039.63 572.464 1039 569.723 1039 cv
563.383 1039 559.956 1043.69 559.956 1049.45 cv
559.956 1055.85 564.068 1059.79 569.552 1059.79 cv
572.407 1059.79 574.292 1059.05 575.72 1058.42 cv
576.576 1062.19 li
cp
f
582.46 1063.22 mo
582.46 1035.58 li
587.485 1035.58 li
587.485 1063.22 li
582.46 1063.22 li
cp
588.057 1027.81 mo
588.114 1029.52 586.857 1030.89 584.858 1030.89 cv
583.088 1030.89 581.831 1029.52 581.831 1027.81 cv
581.831 1026.04 583.145 1024.67 584.973 1024.67 cv
586.857 1024.67 588.057 1026.04 588.057 1027.81 cv
cp
f
595.824 1043.06 mo
595.824 1040.2 595.767 1037.86 595.596 1035.58 cv
600.05 1035.58 li
600.336 1040.14 li
600.45 1040.14 li
601.82 1037.52 605.02 1034.95 609.588 1034.95 cv
613.415 1034.95 619.354 1037.23 619.354 1046.71 cv
619.354 1063.22 li
614.329 1063.22 li
614.329 1047.28 li
614.329 1042.83 612.673 1039.12 607.932 1039.12 cv
604.619 1039.12 602.049 1041.46 601.192 1044.26 cv
600.964 1044.88 600.85 1045.74 600.85 1046.6 cv
600.85 1063.22 li
595.824 1063.22 li
595.824 1043.06 li
cp
f
646.142 1046.48 mo
646.142 1045.63 646.084 1044.88 645.855 1044.2 cv
644.941 1041.29 642.486 1038.89 638.831 1038.89 cv
634.033 1038.89 630.606 1042.94 630.606 1049.34 cv
630.606 1054.77 633.348 1059.28 638.773 1059.28 cv
641.857 1059.28 644.656 1057.34 645.741 1054.14 cv
646.027 1053.28 646.142 1052.31 646.142 1051.45 cv
646.142 1046.48 li
cp
651.339 1035.58 mo
651.225 1037.57 651.11 1039.8 651.11 1043.17 cv
651.11 1059.22 li
651.11 1065.56 649.854 1069.44 647.169 1071.84 cv
644.484 1074.36 640.602 1075.16 637.117 1075.16 cv
633.805 1075.16 630.149 1074.36 627.922 1072.87 cv
629.179 1069.04 li
631.006 1070.19 633.861 1071.21 637.288 1071.21 cv
642.429 1071.21 646.198 1068.53 646.198 1061.56 cv
646.198 1058.48 li
646.084 1058.48 li
644.542 1061.05 641.572 1063.1 637.288 1063.1 cv
630.435 1063.1 625.523 1057.28 625.523 1049.63 cv
625.523 1040.26 631.634 1034.95 637.974 1034.95 cv
642.771 1034.95 645.398 1037.46 646.598 1039.75 cv
646.712 1039.75 li
646.94 1035.58 li
651.339 1035.58 li
cp
f
689.091 1046.71 mo
689.147 1043.51 687.777 1038.54 682.123 1038.54 cv
677.04 1038.54 674.813 1043.23 674.412 1046.71 cv
689.091 1046.71 li
cp
674.355 1050.31 mo
674.47 1057.11 678.811 1059.91 683.836 1059.91 cv
687.435 1059.91 689.604 1059.28 691.489 1058.48 cv
692.346 1062.08 li
690.575 1062.88 687.549 1063.79 683.15 1063.79 cv
674.641 1063.79 669.558 1058.19 669.558 1049.85 cv
669.558 1041.52 674.47 1034.95 682.522 1034.95 cv
691.547 1034.95 693.945 1042.88 693.945 1047.97 cv
693.945 1049 693.831 1049.8 693.774 1050.31 cv
674.355 1050.31 li
cp
f
700.171 1022.67 mo
705.196 1022.67 li
705.196 1063.22 li
700.171 1063.22 li
700.171 1022.67 li
cp
f
713.649 1063.22 mo
713.649 1035.58 li
718.675 1035.58 li
718.675 1063.22 li
713.649 1063.22 li
cp
719.246 1027.81 mo
719.304 1029.52 718.047 1030.89 716.048 1030.89 cv
714.277 1030.89 713.021 1029.52 713.021 1027.81 cv
713.021 1026.04 714.334 1024.67 716.162 1024.67 cv
718.047 1024.67 719.246 1026.04 719.246 1027.81 cv
cp
f
733.067 1027.64 mo
733.067 1035.58 li
740.264 1035.58 li
740.264 1039.4 li
733.067 1039.4 li
733.067 1054.31 li
733.067 1057.73 734.038 1059.68 736.837 1059.68 cv
738.15 1059.68 739.121 1059.51 739.75 1059.33 cv
739.979 1063.1 li
739.007 1063.5 737.465 1063.79 735.523 1063.79 cv
733.182 1063.79 731.297 1063.05 730.098 1061.68 cv
728.67 1060.19 728.155 1057.73 728.155 1054.48 cv
728.155 1039.4 li
723.872 1039.4 li
723.872 1035.58 li
728.155 1035.58 li
728.155 1028.95 li
733.067 1027.64 li
cp
f
742.492 1070.24 mo
743.748 1066.87 745.29 1060.76 745.919 1056.59 cv
751.516 1056.02 li
750.202 1060.88 747.689 1067.22 746.09 1069.9 cv
742.492 1070.24 li
cp
f
768.991 1058.08 mo
770.477 1059.05 773.104 1060.08 775.616 1060.08 cv
779.271 1060.08 780.985 1058.25 780.985 1055.96 cv
780.985 1053.57 779.558 1052.25 775.845 1050.88 cv
770.876 1049.11 768.534 1046.37 768.534 1043.06 cv
768.534 1038.6 772.133 1034.95 778.072 1034.95 cv
780.871 1034.95 783.327 1035.75 784.869 1036.66 cv
783.612 1040.32 li
782.527 1039.63 780.528 1038.72 777.958 1038.72 cv
774.988 1038.72 773.332 1040.43 773.332 1042.49 cv
773.332 1044.77 774.988 1045.8 778.587 1047.17 cv
783.384 1049 785.84 1051.4 785.84 1055.51 cv
785.84 1060.36 782.07 1063.79 775.503 1063.79 cv
772.476 1063.79 769.677 1063.05 767.735 1061.91 cv
768.991 1058.08 li
cp
f
809.828 1046.71 mo
809.885 1043.51 808.515 1038.54 802.86 1038.54 cv
797.777 1038.54 795.55 1043.23 795.149 1046.71 cv
809.828 1046.71 li
cp
795.093 1050.31 mo
795.207 1057.11 799.548 1059.91 804.573 1059.91 cv
808.172 1059.91 810.342 1059.28 812.227 1058.48 cv
813.083 1062.08 li
811.313 1062.88 808.286 1063.79 803.888 1063.79 cv
795.378 1063.79 790.295 1058.19 790.295 1049.85 cv
790.295 1041.52 795.207 1034.95 803.26 1034.95 cv
812.284 1034.95 814.683 1042.88 814.683 1047.97 cv
814.683 1049 814.568 1049.8 814.512 1050.31 cv
795.093 1050.31 li
cp
f
839.755 1046.83 mo
839.755 1046.2 839.698 1045.34 839.527 1044.71 cv
838.784 1041.52 836.043 1038.89 832.273 1038.89 cv
827.076 1038.89 823.992 1043.46 823.992 1049.57 cv
823.992 1055.17 826.733 1059.79 832.159 1059.79 cv
835.529 1059.79 838.613 1057.56 839.527 1053.79 cv
839.698 1053.11 839.755 1052.42 839.755 1051.62 cv
839.755 1046.83 li
cp
844.781 1022.67 mo
844.781 1056.08 li
844.781 1058.54 844.839 1061.33 845.01 1063.22 cv
840.498 1063.22 li
840.27 1058.42 li
840.155 1058.42 li
838.613 1061.5 835.243 1063.85 830.731 1063.85 cv
824.049 1063.85 818.909 1058.19 818.909 1049.8 cv
818.852 1040.6 824.563 1034.95 831.303 1034.95 cv
835.529 1034.95 838.385 1036.95 839.641 1039.17 cv
839.755 1039.17 li
839.755 1022.67 li
844.781 1022.67 li
cp
f
884.075 1046.83 mo
884.075 1046.2 884.019 1045.34 883.848 1044.71 cv
883.104 1041.52 880.363 1038.89 876.594 1038.89 cv
871.396 1038.89 868.313 1043.46 868.313 1049.57 cv
868.313 1055.17 871.054 1059.79 876.479 1059.79 cv
879.85 1059.79 882.934 1057.56 883.848 1053.79 cv
884.019 1053.11 884.075 1052.42 884.075 1051.62 cv
884.075 1046.83 li
cp
889.102 1022.67 mo
889.102 1056.08 li
889.102 1058.54 889.159 1061.33 889.33 1063.22 cv
884.818 1063.22 li
884.59 1058.42 li
884.476 1058.42 li
882.934 1061.5 879.563 1063.85 875.052 1063.85 cv
868.369 1063.85 863.229 1058.19 863.229 1049.8 cv
863.172 1040.6 868.884 1034.95 875.623 1034.95 cv
879.85 1034.95 882.705 1036.95 883.961 1039.17 cv
884.075 1039.17 li
884.075 1022.67 li
889.102 1022.67 li
cp
f
897.44 1063.22 mo
897.44 1035.58 li
902.467 1035.58 li
902.467 1063.22 li
897.44 1063.22 li
cp
903.038 1027.81 mo
903.095 1029.52 901.838 1030.89 899.839 1030.89 cv
898.068 1030.89 896.813 1029.52 896.813 1027.81 cv
896.813 1026.04 898.126 1024.67 899.953 1024.67 cv
901.838 1024.67 903.038 1026.04 903.038 1027.81 cv
cp
f
925.369 1049.11 mo
919.886 1049 913.66 1049.97 913.66 1055.34 cv
913.66 1058.59 915.831 1060.13 918.401 1060.13 cv
921.999 1060.13 924.283 1057.85 925.083 1055.51 cv
925.255 1054.99 925.369 1054.42 925.369 1053.91 cv
925.369 1049.11 li
cp
926.111 1063.22 mo
925.712 1059.73 li
925.54 1059.73 li
923.998 1061.91 921.028 1063.85 917.087 1063.85 cv
911.49 1063.85 908.635 1059.91 908.635 1055.91 cv
908.635 1049.23 914.574 1045.57 925.255 1045.63 cv
925.255 1045.06 li
925.255 1042.77 924.626 1038.66 918.972 1038.66 cv
916.402 1038.66 913.718 1039.46 911.775 1040.72 cv
910.634 1037.4 li
912.918 1035.92 916.23 1034.95 919.715 1034.95 cv
928.167 1034.95 930.224 1040.72 930.224 1046.26 cv
930.224 1056.59 li
930.224 1058.99 930.338 1061.33 930.681 1063.22 cv
926.111 1063.22 li
cp
f
938.334 1043.06 mo
938.334 1040.2 938.276 1037.86 938.105 1035.58 cv
942.503 1035.58 li
942.731 1040.03 li
942.902 1040.03 li
944.444 1037.4 947.015 1034.95 951.584 1034.95 cv
955.354 1034.95 958.209 1037.23 959.408 1040.49 cv
959.522 1040.49 li
960.38 1038.95 961.465 1037.75 962.606 1036.89 cv
964.264 1035.63 966.091 1034.95 968.718 1034.95 cv
972.373 1034.95 977.799 1037.35 977.799 1046.94 cv
977.799 1063.22 li
972.888 1063.22 li
972.888 1047.57 li
972.888 1042.26 970.945 1039.06 966.891 1039.06 cv
964.035 1039.06 961.808 1041.17 960.95 1043.63 cv
960.722 1044.31 960.551 1045.23 960.551 1046.14 cv
960.551 1063.22 li
955.639 1063.22 li
955.639 1046.66 li
955.639 1042.26 953.697 1039.06 949.87 1039.06 cv
946.729 1039.06 944.444 1041.57 943.646 1044.08 cv
943.359 1044.83 943.245 1045.68 943.245 1046.54 cv
943.245 1063.22 li
938.334 1063.22 li
938.334 1043.06 li
cp
f
258.339 1122.78 mo
258.339 1119.92 258.282 1117.58 258.11 1115.3 cv
262.565 1115.3 li
262.851 1119.86 li
262.965 1119.86 li
264.336 1117.24 267.534 1114.67 272.104 1114.67 cv
275.93 1114.67 281.87 1116.95 281.87 1126.43 cv
281.87 1142.94 li
276.844 1142.94 li
276.844 1127 li
276.844 1122.55 275.188 1118.84 270.447 1118.84 cv
267.135 1118.84 264.564 1121.18 263.708 1123.98 cv
263.479 1124.61 263.365 1125.46 263.365 1126.32 cv
263.365 1142.94 li
258.339 1142.94 li
258.339 1122.78 li
cp
f
293.121 1129.17 mo
293.121 1135.23 296.605 1139.8 301.517 1139.8 cv
306.314 1139.8 309.913 1135.29 309.913 1129.06 cv
309.913 1124.38 307.571 1118.44 301.631 1118.44 cv
295.691 1118.44 293.121 1123.92 293.121 1129.17 cv
cp
315.053 1128.89 mo
315.053 1139.11 307.971 1143.57 301.289 1143.57 cv
293.807 1143.57 288.038 1138.08 288.038 1129.35 cv
288.038 1120.09 294.093 1114.67 301.745 1114.67 cv
309.685 1114.67 315.053 1120.44 315.053 1128.89 cv
cp
f
321.393 1122.78 mo
321.393 1119.92 321.336 1117.58 321.164 1115.3 cv
325.619 1115.3 li
325.904 1119.86 li
326.019 1119.86 li
327.39 1117.24 330.588 1114.67 335.157 1114.67 cv
338.983 1114.67 344.924 1116.95 344.924 1126.43 cv
344.924 1142.94 li
339.897 1142.94 li
339.897 1127 li
339.897 1122.55 338.241 1118.84 333.501 1118.84 cv
330.188 1118.84 327.618 1121.18 326.762 1123.98 cv
326.533 1124.61 326.419 1125.46 326.419 1126.32 cv
326.419 1142.94 li
321.393 1142.94 li
321.393 1122.78 li
cp
f
376.222 1135.4 mo
376.222 1138.25 376.279 1140.77 376.45 1142.94 cv
371.995 1142.94 li
371.71 1138.43 li
371.596 1138.43 li
370.282 1140.65 367.369 1143.57 362.458 1143.57 cv
358.117 1143.57 352.92 1141.17 352.92 1131.46 cv
352.92 1115.3 li
357.945 1115.3 li
357.945 1130.6 li
357.945 1135.86 359.545 1139.4 364.114 1139.4 cv
367.483 1139.4 369.825 1137.06 370.739 1134.83 cv
371.024 1134.09 371.196 1133.17 371.196 1132.26 cv
371.196 1115.3 li
376.222 1115.3 li
376.222 1135.4 li
cp
f
384.561 1122.78 mo
384.561 1119.92 384.504 1117.58 384.332 1115.3 cv
388.729 1115.3 li
388.958 1119.75 li
389.13 1119.75 li
390.672 1117.12 393.242 1114.67 397.811 1114.67 cv
401.58 1114.67 404.437 1116.95 405.636 1120.21 cv
405.75 1120.21 li
406.606 1118.67 407.691 1117.47 408.834 1116.61 cv
410.49 1115.35 412.318 1114.67 414.945 1114.67 cv
418.601 1114.67 424.026 1117.07 424.026 1126.66 cv
424.026 1142.94 li
419.114 1142.94 li
419.114 1127.29 li
419.114 1121.98 417.173 1118.78 413.117 1118.78 cv
410.262 1118.78 408.034 1120.89 407.178 1123.35 cv
406.949 1124.03 406.778 1124.95 406.778 1125.86 cv
406.778 1142.94 li
401.866 1142.94 li
401.866 1126.38 li
401.866 1121.98 399.924 1118.78 396.098 1118.78 cv
392.956 1118.78 390.672 1121.29 389.872 1123.81 cv
389.587 1124.55 389.473 1125.4 389.473 1126.26 cv
389.473 1142.94 li
384.561 1142.94 li
384.561 1122.78 li
cp
f
432.194 1122.78 mo
432.194 1119.92 432.138 1117.58 431.966 1115.3 cv
436.363 1115.3 li
436.592 1119.75 li
436.764 1119.75 li
438.306 1117.12 440.876 1114.67 445.444 1114.67 cv
449.214 1114.67 452.07 1116.95 453.27 1120.21 cv
453.384 1120.21 li
454.24 1118.67 455.325 1117.47 456.468 1116.61 cv
458.124 1115.35 459.952 1114.67 462.579 1114.67 cv
466.234 1114.67 471.66 1117.07 471.66 1126.66 cv
471.66 1142.94 li
466.748 1142.94 li
466.748 1127.29 li
466.748 1121.98 464.807 1118.78 460.751 1118.78 cv
457.896 1118.78 455.668 1120.89 454.812 1123.35 cv
454.583 1124.03 454.412 1124.95 454.412 1125.86 cv
454.412 1142.94 li
449.5 1142.94 li
449.5 1126.38 li
449.5 1121.98 447.558 1118.78 443.731 1118.78 cv
440.59 1118.78 438.306 1121.29 437.506 1123.81 cv
437.221 1124.55 437.106 1125.4 437.106 1126.26 cv
437.106 1142.94 li
432.194 1142.94 li
432.194 1122.78 li
cp
f
480.914 1115.3 mo
486.968 1131.63 li
487.597 1133.46 488.282 1135.63 488.738 1137.28 cv
488.853 1137.28 li
489.367 1135.63 489.938 1133.51 490.623 1131.52 cv
496.106 1115.3 li
501.418 1115.3 li
493.879 1135 li
490.281 1144.48 487.825 1149.33 484.398 1152.3 cv
481.942 1154.48 479.486 1155.33 478.229 1155.56 cv
476.974 1151.33 li
478.229 1150.93 479.886 1150.13 481.371 1148.88 cv
482.742 1147.79 484.455 1145.85 485.598 1143.28 cv
485.826 1142.77 485.997 1142.37 485.997 1142.08 cv
485.997 1141.8 485.883 1141.4 485.654 1140.77 cv
475.432 1115.3 li
480.914 1115.3 li
cp
f
518.095 1122.78 mo
518.095 1119.92 518.038 1117.58 517.866 1115.3 cv
522.321 1115.3 li
522.606 1119.86 li
522.721 1119.86 li
524.092 1117.24 527.29 1114.67 531.859 1114.67 cv
535.686 1114.67 541.626 1116.95 541.626 1126.43 cv
541.626 1142.94 li
536.6 1142.94 li
536.6 1127 li
536.6 1122.55 534.943 1118.84 530.203 1118.84 cv
526.891 1118.84 524.32 1121.18 523.464 1123.98 cv
523.235 1124.61 523.121 1125.46 523.121 1126.32 cv
523.121 1142.94 li
518.095 1142.94 li
518.095 1122.78 li
cp
f
549.793 1142.94 mo
549.793 1115.3 li
554.819 1115.3 li
554.819 1142.94 li
549.793 1142.94 li
cp
555.391 1107.53 mo
555.447 1109.24 554.19 1110.61 552.191 1110.61 cv
550.421 1110.61 549.165 1109.24 549.165 1107.53 cv
549.165 1105.76 550.479 1104.39 552.306 1104.39 cv
554.19 1104.39 555.391 1105.76 555.391 1107.53 cv
cp
f
568.126 1131.86 mo
568.126 1132.49 568.24 1133.12 568.354 1133.69 cv
569.325 1137.17 572.238 1139.57 575.894 1139.57 cv
581.148 1139.57 584.289 1135.29 584.289 1128.95 cv
584.289 1123.41 581.434 1118.67 576.065 1118.67 cv
572.639 1118.67 569.439 1121.01 568.412 1124.83 cv
568.298 1125.4 568.126 1126.09 568.126 1126.89 cv
568.126 1131.86 li
cp
562.929 1142.94 mo
563.043 1141.05 563.157 1138.25 563.157 1135.8 cv
563.157 1102.39 li
568.126 1102.39 li
568.126 1119.75 li
568.24 1119.75 li
570.011 1116.67 573.209 1114.67 577.664 1114.67 cv
584.518 1114.67 589.372 1120.38 589.315 1128.77 cv
589.315 1138.66 583.09 1143.57 576.922 1143.57 cv
572.924 1143.57 569.726 1142.02 567.669 1138.37 cv
567.498 1138.37 li
567.27 1142.94 li
562.929 1142.94 li
cp
f
595.655 1102.39 mo
600.681 1102.39 li
600.681 1119.63 li
600.795 1119.63 li
601.595 1118.21 602.852 1116.95 604.394 1116.09 cv
605.878 1115.24 607.648 1114.67 609.533 1114.67 cv
613.246 1114.67 619.186 1116.95 619.186 1126.49 cv
619.186 1142.94 li
614.16 1142.94 li
614.16 1127.06 li
614.16 1122.61 612.504 1118.84 607.763 1118.84 cv
604.508 1118.84 601.938 1121.12 601.023 1123.86 cv
600.738 1124.55 600.681 1125.29 600.681 1126.26 cv
600.681 1142.94 li
595.655 1142.94 li
595.655 1102.39 li
cp
f
656.995 1126.43 mo
657.052 1123.23 655.682 1118.27 650.027 1118.27 cv
644.944 1118.27 642.717 1122.95 642.316 1126.43 cv
656.995 1126.43 li
cp
642.26 1130.03 mo
642.374 1136.83 646.715 1139.63 651.74 1139.63 cv
655.339 1139.63 657.509 1139 659.394 1138.2 cv
660.25 1141.8 li
658.479 1142.6 655.453 1143.51 651.055 1143.51 cv
642.545 1143.51 637.462 1137.91 637.462 1129.57 cv
637.462 1121.23 642.374 1114.67 650.427 1114.67 cv
659.451 1114.67 661.85 1122.61 661.85 1127.69 cv
661.85 1128.72 661.735 1129.52 661.679 1130.03 cv
642.26 1130.03 li
cp
f
691.206 1135.4 mo
691.206 1138.25 691.263 1140.77 691.435 1142.94 cv
686.979 1142.94 li
686.694 1138.43 li
686.58 1138.43 li
685.266 1140.65 682.354 1143.57 677.441 1143.57 cv
673.101 1143.57 667.903 1141.17 667.903 1131.46 cv
667.903 1115.3 li
672.93 1115.3 li
672.93 1130.6 li
672.93 1135.86 674.528 1139.4 679.098 1139.4 cv
682.468 1139.4 684.81 1137.06 685.723 1134.83 cv
686.009 1134.09 686.18 1133.17 686.18 1132.26 cv
686.18 1115.3 li
691.206 1115.3 li
691.206 1135.4 li
cp
f
699.545 1142.94 mo
699.545 1115.3 li
704.57 1115.3 li
704.57 1142.94 li
699.545 1142.94 li
cp
705.142 1107.53 mo
705.199 1109.24 703.942 1110.61 701.943 1110.61 cv
700.173 1110.61 698.916 1109.24 698.916 1107.53 cv
698.916 1105.76 700.229 1104.39 702.058 1104.39 cv
703.942 1104.39 705.142 1105.76 705.142 1107.53 cv
cp
f
712.224 1137.8 mo
713.708 1138.77 716.336 1139.8 718.849 1139.8 cv
722.504 1139.8 724.218 1137.97 724.218 1135.68 cv
724.218 1133.29 722.789 1131.97 719.077 1130.6 cv
714.108 1128.83 711.767 1126.09 711.767 1122.78 cv
711.767 1118.32 715.364 1114.67 721.305 1114.67 cv
724.104 1114.67 726.559 1115.47 728.101 1116.38 cv
726.845 1120.04 li
725.76 1119.35 723.761 1118.44 721.19 1118.44 cv
718.221 1118.44 716.564 1120.15 716.564 1122.21 cv
716.564 1124.49 718.221 1125.52 721.818 1126.89 cv
726.616 1128.72 729.072 1131.12 729.072 1135.23 cv
729.072 1140.08 725.303 1143.51 718.734 1143.51 cv
715.707 1143.51 712.909 1142.77 710.967 1141.63 cv
712.224 1137.8 li
cp
f
735.526 1122.78 mo
735.526 1119.92 735.469 1117.58 735.298 1115.3 cv
739.695 1115.3 li
739.924 1119.75 li
740.095 1119.75 li
741.637 1117.12 744.207 1114.67 748.776 1114.67 cv
752.546 1114.67 755.401 1116.95 756.601 1120.21 cv
756.715 1120.21 li
757.572 1118.67 758.657 1117.47 759.799 1116.61 cv
761.456 1115.35 763.283 1114.67 765.91 1114.67 cv
769.565 1114.67 774.991 1117.07 774.991 1126.66 cv
774.991 1142.94 li
770.08 1142.94 li
770.08 1127.29 li
770.08 1121.98 768.138 1118.78 764.083 1118.78 cv
761.228 1118.78 759 1120.89 758.143 1123.35 cv
757.914 1124.03 757.743 1124.95 757.743 1125.86 cv
757.743 1142.94 li
752.831 1142.94 li
752.831 1126.38 li
752.831 1121.98 750.89 1118.78 747.063 1118.78 cv
743.922 1118.78 741.637 1121.29 740.838 1123.81 cv
740.552 1124.55 740.438 1125.4 740.438 1126.26 cv
740.438 1142.94 li
735.526 1142.94 li
735.526 1122.78 li
cp
f
786.244 1129.17 mo
786.244 1135.23 789.728 1139.8 794.64 1139.8 cv
799.438 1139.8 803.035 1135.29 803.035 1129.06 cv
803.035 1124.38 800.693 1118.44 794.754 1118.44 cv
788.814 1118.44 786.244 1123.92 786.244 1129.17 cv
cp
808.176 1128.89 mo
808.176 1139.11 801.094 1143.57 794.411 1143.57 cv
786.93 1143.57 781.161 1138.08 781.161 1129.35 cv
781.161 1120.09 787.215 1114.67 794.868 1114.67 cv
802.807 1114.67 808.176 1120.44 808.176 1128.89 cv
cp
f
833.362 1126.55 mo
833.362 1125.92 833.306 1125.06 833.135 1124.43 cv
832.392 1121.23 829.65 1118.61 825.881 1118.61 cv
820.684 1118.61 817.6 1123.18 817.6 1129.29 cv
817.6 1134.88 820.341 1139.51 825.767 1139.51 cv
829.137 1139.51 832.221 1137.28 833.135 1133.51 cv
833.306 1132.83 833.362 1132.14 833.362 1131.34 cv
833.362 1126.55 li
cp
838.389 1102.39 mo
838.389 1135.8 li
838.389 1138.25 838.446 1141.05 838.617 1142.94 cv
834.105 1142.94 li
833.877 1138.14 li
833.763 1138.14 li
832.221 1141.22 828.851 1143.57 824.339 1143.57 cv
817.656 1143.57 812.517 1137.91 812.517 1129.52 cv
812.459 1120.32 818.171 1114.67 824.91 1114.67 cv
829.137 1114.67 831.992 1116.67 833.248 1118.89 cv
833.362 1118.89 li
833.362 1102.39 li
838.389 1102.39 li
cp
f
864.89 1107.36 mo
864.89 1115.3 li
872.086 1115.3 li
872.086 1119.12 li
864.89 1119.12 li
864.89 1134.03 li
864.89 1137.46 865.86 1139.4 868.659 1139.4 cv
869.973 1139.4 870.943 1139.23 871.572 1139.05 cv
871.801 1142.82 li
870.829 1143.22 869.287 1143.51 867.346 1143.51 cv
865.004 1143.51 863.119 1142.77 861.92 1141.4 cv
860.492 1139.91 859.978 1137.46 859.978 1134.2 cv
859.978 1119.12 li
855.694 1119.12 li
855.694 1115.3 li
859.978 1115.3 li
859.978 1108.67 li
864.89 1107.36 li
cp
f
877.74 1142.94 mo
877.74 1115.3 li
882.767 1115.3 li
882.767 1142.94 li
877.74 1142.94 li
cp
883.338 1107.53 mo
883.395 1109.24 882.138 1110.61 880.139 1110.61 cv
878.368 1110.61 877.112 1109.24 877.112 1107.53 cv
877.112 1105.76 878.426 1104.39 880.253 1104.39 cv
882.138 1104.39 883.338 1105.76 883.338 1107.53 cv
cp
f
891.104 1122.78 mo
891.104 1119.92 891.048 1117.58 890.876 1115.3 cv
895.331 1115.3 li
895.616 1119.86 li
895.73 1119.86 li
897.102 1117.24 900.3 1114.67 904.869 1114.67 cv
908.695 1114.67 914.636 1116.95 914.636 1126.43 cv
914.636 1142.94 li
909.609 1142.94 li
909.609 1127 li
909.609 1122.55 907.953 1118.84 903.213 1118.84 cv
899.9 1118.84 897.33 1121.18 896.474 1123.98 cv
896.245 1124.61 896.131 1125.46 896.131 1126.32 cv
896.131 1142.94 li
891.104 1142.94 li
891.104 1122.78 li
cp
f
942.507 1141.91 mo
941.193 1142.6 938.28 1143.51 934.568 1143.51 cv
926.229 1143.51 920.804 1137.86 920.804 1129.4 cv
920.804 1120.89 926.63 1114.72 935.653 1114.72 cv
938.623 1114.72 941.251 1115.47 942.621 1116.15 cv
941.479 1120.04 li
940.279 1119.35 938.395 1118.72 935.653 1118.72 cv
929.313 1118.72 925.887 1123.41 925.887 1129.17 cv
925.887 1135.57 929.999 1139.51 935.482 1139.51 cv
938.338 1139.51 940.223 1138.77 941.65 1138.14 cv
942.507 1141.91 li
cp
f
948.391 1142.94 mo
948.391 1115.3 li
953.416 1115.3 li
953.416 1142.94 li
948.391 1142.94 li
cp
953.987 1107.53 mo
954.045 1109.24 952.788 1110.61 950.789 1110.61 cv
949.019 1110.61 947.762 1109.24 947.762 1107.53 cv
947.762 1105.76 949.075 1104.39 950.903 1104.39 cv
952.788 1104.39 953.987 1105.76 953.987 1107.53 cv
cp
f
980.602 1126.55 mo
980.602 1125.92 980.545 1125.06 980.374 1124.43 cv
979.631 1121.23 976.89 1118.61 973.12 1118.61 cv
967.923 1118.61 964.839 1123.18 964.839 1129.29 cv
964.839 1134.88 967.58 1139.51 973.006 1139.51 cv
976.376 1139.51 979.46 1137.28 980.374 1133.51 cv
980.545 1132.83 980.602 1132.14 980.602 1131.34 cv
980.602 1126.55 li
cp
985.628 1102.39 mo
985.628 1135.8 li
985.628 1138.25 985.686 1141.05 985.856 1142.94 cv
981.345 1142.94 li
981.116 1138.14 li
981.002 1138.14 li
979.46 1141.22 976.09 1143.57 971.578 1143.57 cv
964.896 1143.57 959.756 1137.91 959.756 1129.52 cv
959.698 1120.32 965.41 1114.67 972.149 1114.67 cv
976.376 1114.67 979.231 1116.67 980.487 1118.89 cv
980.602 1118.89 li
980.602 1102.39 li
985.628 1102.39 li
cp
f
1017.1 1135.4 mo
1017.1 1138.25 1017.16 1140.77 1017.33 1142.94 cv
1012.87 1142.94 li
1012.59 1138.43 li
1012.47 1138.43 li
1011.16 1140.65 1008.25 1143.57 1003.33 1143.57 cv
998.993 1143.57 993.796 1141.17 993.796 1131.46 cv
993.796 1115.3 li
998.821 1115.3 li
998.821 1130.6 li
998.821 1135.86 1000.42 1139.4 1004.99 1139.4 cv
1008.36 1139.4 1010.7 1137.06 1011.62 1134.83 cv
1011.9 1134.09 1012.07 1133.17 1012.07 1132.26 cv
1012.07 1115.3 li
1017.1 1115.3 li
1017.1 1135.4 li
cp
f
1025.44 1122.78 mo
1025.44 1119.92 1025.38 1117.58 1025.21 1115.3 cv
1029.66 1115.3 li
1029.95 1119.86 li
1030.06 1119.86 li
1031.43 1117.24 1034.63 1114.67 1039.2 1114.67 cv
1043.03 1114.67 1048.97 1116.95 1048.97 1126.43 cv
1048.97 1142.94 li
1043.94 1142.94 li
1043.94 1127 li
1043.94 1122.55 1042.29 1118.84 1037.54 1118.84 cv
1034.23 1118.84 1031.66 1121.18 1030.81 1123.98 cv
1030.58 1124.61 1030.46 1125.46 1030.46 1126.32 cv
1030.46 1142.94 li
1025.44 1142.94 li
1025.44 1122.78 li
cp
f
1062.96 1107.36 mo
1062.96 1115.3 li
1070.16 1115.3 li
1070.16 1119.12 li
1062.96 1119.12 li
1062.96 1134.03 li
1062.96 1137.46 1063.93 1139.4 1066.73 1139.4 cv
1068.04 1139.4 1069.01 1139.23 1069.64 1139.05 cv
1069.87 1142.82 li
1068.9 1143.22 1067.36 1143.51 1065.42 1143.51 cv
1063.07 1143.51 1061.19 1142.77 1059.99 1141.4 cv
1058.56 1139.91 1058.05 1137.46 1058.05 1134.2 cv
1058.05 1119.12 li
1053.76 1119.12 li
1053.76 1115.3 li
1058.05 1115.3 li
1058.05 1108.67 li
1062.96 1107.36 li
cp
f
1503.38 1730.3 mo
1364.13 1603.2 1173.83 1471.96 1248.45 1273.71 cv
1297.54 1143.31 1417.88 1106.96 1517.91 1026.55 cv
1567.28 986.872 1536.23 929.111 1535.32 871.783 cv
1533.22 724.975 1728.65 611.055 1908.32 613.432 cv
2102.93 616.006 2187.18 780.034 2350.42 788.831 cv
2414.53 789.655 2471.93 758.115 2528.65 733.062 cv
2696.7 658.827 2963.36 706.167 2976.84 885.694 cv
2980.32 982.646 2848.7 1138.63 2980.57 1189.62 cv
3085.67 1230.26 3191.85 1245.23 3210.79 1390.59 cv
3235.58 1580.84 3104.52 1685.26 2933.74 1734.22 cv
1503.38 1730.3 li
cp
.866667 .909804 .992157 rgb
f
1535.8 1006.79 mo
1698.24 1006.79 li
1718.34 1006.79 1734.64 1023.09 1734.64 1043.2 cv
1734.64 1118.92 li
1734.64 1139.03 1718.34 1155.33 1698.24 1155.33 cv
1697.03 1155.33 li
1710.07 1199 li
1710.64 1200.92 1708.42 1202.46 1706.83 1201.24 cv
1646.64 1155.33 li
1535.8 1155.33 li
1515.69 1155.33 1499.39 1139.03 1499.39 1118.92 cv
1499.39 1043.2 li
1499.39 1023.09 1515.69 1006.79 1535.8 1006.79 cv
cp
1 1 1 rgb
f
1698.16 1070.38 mo
1542.21 1070.38 li
1532.25 1070.38 1524.18 1062.31 1524.18 1052.35 cv
1524.18 1052.35 li
1524.18 1042.4 1532.25 1034.33 1542.21 1034.33 cv
1698.16 1034.33 li
1708.11 1034.33 1716.18 1042.4 1716.18 1052.35 cv
1716.18 1052.35 li
1716.18 1062.31 1708.11 1070.38 1698.16 1070.38 cv
cp
.866667 .909804 .992157 rgb
f
1698.16 1125.41 mo
1542.21 1125.41 li
1532.25 1125.41 1524.18 1117.34 1524.18 1107.39 cv
1524.18 1107.39 li
1524.18 1097.44 1532.25 1089.37 1542.21 1089.37 cv
1698.16 1089.37 li
1708.11 1089.37 1716.18 1097.44 1716.18 1107.39 cv
1716.18 1107.39 li
1716.18 1117.34 1708.11 1125.41 1698.16 1125.41 cv
cp
f
2529.9 802.388 mo
2352.75 802.388 li
2330.82 802.388 2313.05 820.163 2313.05 842.091 cv
2313.05 924.673 li
2313.05 946.601 2330.82 964.376 2352.75 964.376 cv
2354.07 964.376 li
2339.85 1012.01 li
2339.22 1014.1 2341.64 1015.78 2343.38 1014.45 cv
2409.02 964.376 li
2529.9 964.376 li
2551.83 964.376 2569.6 946.601 2569.6 924.673 cv
2569.6 842.091 li
2569.6 820.163 2551.83 802.388 2529.9 802.388 cv
cp
1 1 1 rgb
f
2526.99 872.184 mo
2351.45 872.184 li
2341.83 872.184 2334.02 864.38 2334.02 854.753 cv
2334.02 853.574 li
2334.02 843.947 2341.83 836.143 2351.45 836.143 cv
2526.99 836.143 li
2536.62 836.143 2544.42 843.947 2544.42 853.574 cv
2544.42 854.753 li
2544.42 864.38 2536.62 872.184 2526.99 872.184 cv
cp
.866667 .909804 .992157 rgb
f
2441.93 926.676 mo
2357.23 926.676 li
2347.6 926.676 2339.79 918.872 2339.79 909.245 cv
2339.79 908.066 li
2339.79 898.439 2347.6 890.635 2357.23 890.635 cv
2441.93 890.635 li
2451.55 890.635 2459.36 898.438 2459.36 908.065 cv
2459.36 909.245 li
2459.36 918.872 2451.55 926.676 2441.93 926.676 cv
cp
f
1368.16 1513.79 mo
1359.05 1513.79 1352.94 1506.93 1352.94 1498.57 cv
1352.94 1491.41 1359.05 1484.55 1368.16 1484.55 cv
1376.07 1484.55 1382.18 1491.41 1382.18 1498.57 cv
1382.18 1506.78 1376.36 1513.79 1368.16 1513.79 cv
cp
1347.71 1414.26 mo
1354.43 1409.19 1362.49 1406.65 1371.89 1406.65 cv
1392.18 1406.65 1402.92 1417.69 1402.92 1433.21 cv
1402.92 1442.17 1398.6 1451.27 1389.79 1460.37 cv
1378.6 1472.16 1370.54 1477.98 1365.47 1477.98 cv
1360.55 1477.98 1356.96 1474.1 1356.96 1469.48 cv
1356.96 1465.3 1360.84 1461.12 1367.56 1455 cv
1368.01 1454.55 1368.46 1454.11 1368.75 1453.96 cv
1376.36 1446.94 1378.75 1443.06 1378.75 1438.29 cv
1378.75 1432.32 1374.72 1429.04 1368.9 1429.04 cv
1366.22 1429.04 1363.08 1429.63 1359.35 1430.83 cv
1355.62 1432.02 1352.94 1432.62 1351.29 1432.62 cv
1347.12 1432.62 1342.34 1429.04 1342.34 1423.07 cv
1342.34 1419.93 1344.13 1416.95 1347.71 1414.26 cv
cp
1 1 1 rgb
f
2580.26 1144.87 mo
2574.27 1144.87 2570.25 1140.35 2570.25 1134.86 cv
2570.25 1130.15 2574.27 1125.63 2580.26 1125.63 cv
2585.46 1125.63 2589.48 1130.15 2589.48 1134.86 cv
2589.48 1140.25 2585.66 1144.87 2580.26 1144.87 cv
cp
2566.81 1079.41 mo
2571.23 1076.07 2576.53 1074.41 2582.71 1074.41 cv
2596.06 1074.41 2603.12 1081.67 2603.12 1091.87 cv
2603.12 1097.76 2600.28 1103.75 2594.49 1109.73 cv
2587.13 1117.49 2581.83 1121.31 2578.49 1121.31 cv
2575.25 1121.31 2572.9 1118.76 2572.9 1115.72 cv
2572.9 1112.97 2575.45 1110.23 2579.87 1106.2 cv
2580.16 1105.91 2580.45 1105.61 2580.65 1105.51 cv
2585.66 1100.9 2587.23 1098.35 2587.23 1095.21 cv
2587.23 1091.29 2584.58 1089.13 2580.75 1089.13 cv
2578.98 1089.13 2576.92 1089.52 2574.47 1090.3 cv
2572.01 1091.09 2570.25 1091.48 2569.17 1091.48 cv
2566.42 1091.48 2563.28 1089.13 2563.28 1085.2 cv
2563.28 1083.14 2564.46 1081.18 2566.81 1079.41 cv
cp
f
2879.89 1105.86 mo
2693.57 1105.86 li
2690.28 1105.86 2687.61 1103.19 2687.61 1099.89 cv
2687.61 939.512 li
2687.61 936.219 2690.28 933.548 2693.57 933.548 cv
2696.87 933.548 2699.54 936.219 2699.54 939.512 cv
2699.54 1093.93 li
2879.89 1093.93 li
2883.18 1093.93 2885.85 1096.6 2885.85 1099.89 cv
2885.85 1103.19 2883.18 1105.86 2879.89 1105.86 cv
cp
f
2707.67 1066.65 mo
2706.18 1066.65 2704.69 1066.1 2703.53 1064.98 cv
2701.16 1062.69 2701.1 1058.91 2703.39 1056.54 cv
2763.6 994.252 li
2765.59 992.201 2768.75 991.842 2771.14 993.394 cv
2799.62 1011.87 li
2829.64 976.974 li
2831.79 974.478 2835.56 974.196 2838.05 976.344 cv
2840.55 978.493 2840.83 982.259 2838.68 984.755 cv
2805.26 1023.59 li
2803.31 1025.86 2800 1026.33 2797.49 1024.71 cv
2768.77 1006.07 li
2711.96 1064.83 li
2710.79 1066.04 2709.24 1066.65 2707.67 1066.65 cv
cp
f
2838.82 1002.55 mo
2830.32 985.333 li
2812.03 979.497 li
2852.75 959.274 li
2838.82 1002.55 li
cp
f
1608.62 798.246 mo
1594.2 798.246 1582.46 809.977 1582.46 824.397 cv
1582.46 838.816 1594.2 850.548 1608.62 850.548 cv
1623.04 850.548 1634.77 838.816 1634.77 824.397 cv
1634.77 809.977 1623.04 798.246 1608.62 798.246 cv
cp
1608.62 860.489 mo
1588.71 860.489 1572.52 844.298 1572.52 824.397 cv
1572.52 804.495 1588.71 788.305 1608.62 788.305 cv
1628.52 788.305 1644.71 804.495 1644.71 824.397 cv
1644.71 844.298 1628.52 860.489 1608.62 860.489 cv
cp
f
2709.72 1102.16 mo
2699.16 1102.16 2690.56 1110.75 2690.56 1121.31 cv
2690.56 1131.88 2699.16 1140.47 2709.72 1140.47 cv
2720.28 1140.47 2728.87 1131.88 2728.87 1121.31 cv
2728.87 1110.75 2720.28 1102.16 2709.72 1102.16 cv
cp
2709.72 1147.75 mo
2695.14 1147.75 2683.28 1135.89 2683.28 1121.31 cv
2683.28 1106.74 2695.14 1094.88 2709.72 1094.88 cv
2724.29 1094.88 2736.15 1106.74 2736.15 1121.31 cv
2736.15 1135.89 2724.29 1147.75 2709.72 1147.75 cv
cp
.866667 .909804 .992157 rgb
f
1321.87 1251.73 mo
1312.39 1251.73 1304.67 1259.45 1304.67 1268.93 cv
1304.67 1278.42 1312.39 1286.13 1321.87 1286.13 cv
1331.36 1286.13 1339.07 1278.42 1339.07 1268.93 cv
1339.07 1259.45 1331.36 1251.73 1321.87 1251.73 cv
cp
1321.87 1292.67 mo
1308.78 1292.67 1298.14 1282.02 1298.14 1268.93 cv
1298.14 1255.84 1308.78 1245.2 1321.87 1245.2 cv
1334.96 1245.2 1345.61 1255.84 1345.61 1268.93 cv
1345.61 1282.02 1334.96 1292.67 1321.87 1292.67 cv
cp
1 1 1 rgb
f
2594.29 755.213 mo
2594.29 762.346 2588.51 768.128 2581.38 768.128 cv
2574.25 768.128 2568.47 762.346 2568.47 755.213 cv
2568.47 748.081 2574.25 742.299 2581.38 742.299 cv
2588.51 742.299 2594.29 748.081 2594.29 755.213 cv
cp
f
1462.37 994.311 mo
1462.37 1008.33 1451 1019.7 1436.97 1019.7 cv
1422.95 1019.7 1411.58 1008.33 1411.58 994.311 cv
1411.58 980.287 1422.95 968.918 1436.97 968.918 cv
1451 968.918 1462.37 980.287 1462.37 994.311 cv
cp
.866667 .909804 .992157 rgb
f
2478.45 713.857 mo
2478.45 724.399 2469.9 732.946 2459.36 732.946 cv
2448.82 732.946 2440.27 724.399 2440.27 713.857 cv
2440.27 703.314 2448.82 694.768 2459.36 694.768 cv
2469.9 694.768 2478.45 703.314 2478.45 713.857 cv
cp
f
2764.87 1163.51 mo
2764.87 1172.51 2757.58 1179.81 2748.58 1179.81 cv
2739.58 1179.81 2732.29 1172.51 2732.29 1163.51 cv
2732.29 1154.52 2739.58 1147.22 2748.58 1147.22 cv
2757.58 1147.22 2764.87 1154.52 2764.87 1163.51 cv
cp
f
2623.83 803.854 mo
2623.83 815.073 2614.74 824.168 2603.52 824.168 cv
2592.3 824.168 2583.2 815.073 2583.2 803.854 cv
2583.2 792.634 2592.3 783.539 2603.52 783.539 cv
2614.74 783.539 2623.83 792.634 2623.83 803.854 cv
cp
1 1 1 rgb
f
1689.53 766.96 mo
1689.53 778.34 1680.3 787.565 1668.92 787.565 cv
1657.54 787.565 1648.32 778.34 1648.32 766.96 cv
1648.32 755.58 1657.54 746.354 1668.92 746.354 cv
1680.3 746.354 1689.53 755.58 1689.53 766.96 cv
cp
f
3091.48 1741.43 mo
1373.96 1741.43 li
1368.36 1741.43 1363.81 1738.21 1363.81 1734.22 cv
1363.81 1734.22 li
1363.81 1730.25 1368.36 1727.02 1373.96 1727.02 cv
3091.48 1727.02 li
3097.08 1727.02 3101.62 1730.25 3101.62 1734.22 cv
3101.62 1734.22 li
3101.62 1738.21 3097.08 1741.43 3091.48 1741.43 cv
cp
.0235294 .0196078 .203922 rgb
f
1847.77 1110.48 mo
1847.79 1110.48 li
1866.51 1110.55 li
1870.75 1154.77 li
1848.9 1166.31 li
1825.59 1154.9 li
1829.36 1110.55 li
1847.77 1110.48 li
cp
.952941 .478431 .313726 rgb
f
1796.33 1090.97 mo
1807.86 1119.76 1835.53 1135.77 1858.14 1126.72 cv
1880.76 1117.67 1889.75 1086.99 1878.23 1058.2 cv
1866.7 1029.4 1839.03 1013.4 1816.42 1022.45 cv
1793.8 1031.5 1784.81 1062.18 1796.33 1090.97 cv
cp
f
1868.39 1067.65 mo
1869.73 1069.57 1872.37 1070.04 1874.29 1068.71 cv
1876.21 1067.37 1876.68 1064.73 1875.35 1062.81 cv
1874.01 1060.89 1871.37 1060.41 1869.45 1061.75 cv
1867.53 1063.09 1867.06 1065.73 1868.39 1067.65 cv
cp
0 0 0 rgb
f
1836.67 1080.6 mo
1838.11 1082.67 1840.97 1083.19 1843.05 1081.74 cv
1845.13 1080.29 1845.64 1077.44 1844.19 1075.36 cv
1842.75 1073.28 1839.89 1072.77 1837.81 1074.21 cv
1835.73 1075.66 1835.22 1078.52 1836.67 1080.6 cv
cp
f
1861.96 1074.41 mo
1867.69 1078.92 1874.85 1084.37 1874.85 1084.37 cv
1874.85 1084.37 1874.92 1091.27 1866.85 1094.26 cv
1869.77 1091.62 1872.33 1088.09 1869.3 1084.03 cv
1866.26 1079.96 1861.96 1074.41 1861.96 1074.41 cv
cp
.870588 .384314 .235294 rgb
f
1828.32 1077.84 mo
1828.16 1077.84 1827.99 1077.82 1827.83 1077.78 cv
1826.69 1077.51 1825.99 1076.37 1826.26 1075.23 cv
1827 1072.13 1830.1 1066.26 1836.55 1066.23 cv
1837.72 1066.24 1838.67 1067.17 1838.67 1068.33 cv
1838.68 1069.5 1837.74 1070.45 1836.57 1070.46 cv
1831.79 1070.48 1830.39 1076.16 1830.37 1076.21 cv
1830.14 1077.18 1829.27 1077.84 1828.32 1077.84 cv
cp
.0235294 .0196078 .203922 rgb
f
1863.96 1058.69 mo
1863.65 1058.69 1863.35 1058.61 1863.07 1058.44 cv
1862.23 1057.95 1861.95 1056.87 1862.44 1056.03 cv
1862.52 1055.9 1864.37 1052.8 1867.87 1052.16 cv
1870.26 1051.71 1872.73 1052.5 1875.21 1054.48 cv
1875.97 1055.09 1876.09 1056.2 1875.48 1056.96 cv
1874.88 1057.72 1873.77 1057.84 1873.01 1057.23 cv
1871.36 1055.91 1869.85 1055.37 1868.51 1055.62 cv
1866.61 1055.97 1865.49 1057.8 1865.48 1057.81 cv
1865.15 1058.37 1864.56 1058.69 1863.96 1058.69 cv
cp
f
1780.6 1069.46 mo
1770.85 1041.72 1794.59 1025.77 1794.59 1025.77 cv
1794.59 1025.77 1788.22 1025.2 1787.46 1016.25 cv
1792.23 1017.74 1797.58 1017.63 1802.27 1015.93 cv
1833.92 1004.48 1855.7 1004.63 1855.7 1018.17 cv
1855.7 1022.99 1876.6 1019.69 1874.85 1052.1 cv
1874.97 1049.82 1867.5 1036.49 1860.45 1035.16 cv
1853.37 1033.82 1859.76 1043.26 1845.02 1045.28 cv
1830.14 1047.33 1819.2 1043.71 1810.11 1052.1 cv
1802.99 1059.42 1801.23 1096.66 1802.31 1098.91 cv
1799.83 1093.77 1784.88 1081.66 1780.6 1069.46 cv
cp
f
1882.58 1074.41 mo
1882.58 1074.41 1883.93 1091.3 1881.5 1096.52 cv
1878.96 1089.75 1873.52 1096.93 1868.4 1097.61 cv
1856.05 1099.24 1833.76 1095.12 1831.55 1113.65 cv
1816.46 1118.43 1802.31 1086.11 1802.31 1086.11 cv
1801.45 1122.22 1827.87 1142.72 1865.89 1136.71 cv
1890.93 1132.75 1893.26 1097.88 1882.58 1074.41 cv
cp
f
1856.54 1109.02 mo
1854.1 1108.44 1851.56 1107.44 1848.92 1106.03 cv
1848.23 1105.67 1847.97 1104.81 1848.34 1104.13 cv
1848.71 1103.44 1849.56 1103.18 1850.25 1103.55 cv
1856.09 1106.67 1861.34 1107.56 1865.83 1106.19 cv
1871.38 1104.5 1873.92 1099.82 1873.94 1099.77 cv
1874.31 1099.09 1875.16 1098.82 1875.85 1099.18 cv
1876.53 1099.54 1876.8 1100.39 1876.44 1101.08 cv
1876.32 1101.31 1873.38 1106.81 1866.7 1108.87 cv
1863.57 1109.84 1860.17 1109.89 1856.54 1109.02 cv
cp
.870588 .384314 .235294 rgb
f
1801.96 1086.35 mo
1808.31 1089.92 1811.1 1097.04 1808.18 1102.24 cv
1805.25 1107.44 1797.73 1108.76 1791.37 1105.19 cv
1785.01 1101.62 1782.23 1094.51 1785.15 1089.31 cv
1788.07 1084.1 1795.6 1082.78 1801.96 1086.35 cv
cp
.952941 .478431 .313726 rgb
f
1800.99 1101.94 mo
1801.19 1101.8 1801.35 1101.62 1801.48 1101.39 cv
1803.22 1098.15 1802.94 1094.86 1800.71 1092.57 cv
1798.43 1090.23 1794.75 1089.55 1791.96 1090.96 cv
1791.17 1091.36 1790.85 1092.32 1791.25 1093.11 cv
1791.65 1093.89 1792.61 1094.21 1793.4 1093.81 cv
1794.92 1093.04 1797.13 1093.47 1798.42 1094.79 cv
1799.66 1096.07 1799.75 1097.87 1798.67 1099.88 cv
1798.25 1100.65 1798.54 1101.62 1799.31 1102.04 cv
1799.86 1102.33 1800.51 1102.27 1800.99 1101.94 cv
cp
.870588 .384314 .235294 rgb
f
1869.43 1701 mo
1873.42 1690.18 1881.93 1688.98 1881.93 1688.98 cv
1898.49 1711.82 1939.14 1697.8 1937.79 1728.7 cv
1875.97 1728.3 1850.28 1728.7 1850.28 1728.7 cv
1850.36 1721.6 1851.58 1704.76 1853.01 1698.17 cv
1856.23 1698.76 li
1869.43 1701 li
cp
0 0 0 rgb
f
1776.94 1701.6 mo
1780.92 1690.78 1789.44 1689.58 1789.44 1689.58 cv
1805.99 1712.42 1846.65 1698.4 1845.3 1729.29 cv
1783.48 1728.9 1757.79 1729.29 1757.79 1729.29 cv
1757.87 1722.2 1759.09 1705.36 1760.52 1698.77 cv
1763.74 1699.36 li
1776.94 1701.6 li
cp
f
1910.55 1340.29 mo
1910.55 1340.29 1920.59 1486.68 1916.51 1519.23 cv
1912.43 1551.77 1897.99 1593.49 1899.63 1701.14 cv
1879.48 1706.18 1850.28 1701.14 1850.28 1701.14 cv
1850.28 1701.14 1845.95 1579.42 1867.26 1525.05 cv
1858.59 1472.25 1830.8 1351.29 1830.8 1351.29 cv
1910.55 1340.29 li
cp
.0235294 .0196078 .203922 rgb
f
1872.41 1344.3 mo
1872.41 1344.3 1852.14 1508.64 1842.22 1539.81 cv
1832.3 1570.98 1812.95 1597.34 1794.99 1703.38 cv
1774.28 1704.42 1754.99 1703.38 1754.99 1703.38 cv
1754.99 1703.38 1757.79 1568.87 1790.04 1538.28 cv
1791.13 1484.73 1784.83 1345.35 1784.83 1345.35 cv
1872.41 1344.3 li
cp
.0313726 .027451 .301961 rgb
f
1778.98 1157.78 mo
1778.98 1157.78 1814.18 1145.46 1825.92 1151.11 cv
1862.39 1168.67 1870.75 1151.11 1870.75 1151.11 cv
1882.41 1152.12 1917.59 1157.78 1917.59 1157.78 cv
1917.59 1197.07 1920.21 1236.5 1919.5 1266.23 cv
1918.99 1292.12 1923.93 1362.58 1923.93 1362.58 cv
1923.93 1362.58 1885.12 1372.76 1848.41 1373.02 cv
1811.7 1372.78 1774.33 1363 1774.33 1363 cv
1774.33 1363 1776.29 1291.63 1777.92 1265.1 cv
1777.39 1235.37 1778.98 1196.96 1778.98 1157.78 cv
cp
.992157 .443137 .4 rgb
f
1980.16 1216.18 mo
1965.63 1181.51 1922.52 1159.46 1917.59 1157.78 cv
1907.59 1202.28 li
1928.3 1214.53 1943.33 1227.78 1943.33 1227.78 cv
1940.79 1240.17 1941.21 1252.33 1934.04 1268 cv
1934.04 1268 1940.27 1259.4 1947.95 1264.49 cv
1955.42 1269.43 1969.17 1259.34 1969.17 1259.34 cv
1969.17 1259.34 1991.26 1242.65 1980.16 1216.18 cv
cp
.788235 .352941 .317647 rgb
f
2255.14 1688.07 mo
2240.48 1707.63 2203.79 1698.98 2204.98 1725.44 cv
2259.75 1725.1 2283.6 1725.59 2283.6 1725.59 cv
2283.53 1719.51 2282.03 1696.77 2280.77 1691.12 cv
2255.14 1688.07 li
cp
0 0 0 rgb
f
2349.88 1688.07 mo
2364.54 1707.63 2401.24 1698.98 2400.04 1725.44 cv
2345.28 1725.1 2321.42 1725.59 2321.42 1725.59 cv
2321.49 1719.51 2322.99 1696.77 2324.26 1691.12 cv
2349.88 1688.07 li
cp
f
2222.54 1154.36 mo
2222.54 1154.36 2178.03 1178.51 2149.65 1200.85 cv
2134.29 1247.38 li
2163.92 1243.86 2237.28 1211.75 2237.28 1211.75 cv
2222.54 1154.36 li
cp
.0235294 .0196078 .203922 rgb
f
2125.48 1104.13 mo
2126.85 1111.24 2126.79 1118.76 2135.26 1123.27 cv
2135.26 1123.27 2131.94 1146.16 2131.26 1165.12 cv
2131.26 1165.12 2154.64 1142.99 2154.64 1142.97 cv
2154.09 1135.25 2154.36 1120.78 2156.25 1112.72 cv
2156.74 1110.63 2157.34 1108.55 2157.85 1106.46 cv
2159.22 1101.38 2161.2 1096.23 2158.6 1089.73 cv
2148.56 1064.61 2153.35 1057.05 2151.77 1055.73 cv
2149.16 1054.29 2142.34 1058.57 2144.92 1070.71 cv
2147.42 1082.46 2146.07 1088 2146.07 1088 cv
2146.07 1088 2137.04 1085.46 2133.5 1088.38 cv
2131.89 1089.71 2123.87 1095.82 2125.48 1104.13 cv
cp
.952941 .478431 .313726 rgb
f
2128.58 1127.43 mo
2158.07 1131.84 li
2172.42 1214.92 li
2134.29 1247.38 li
2126.04 1231.1 2118.94 1163.63 2128.58 1127.43 cv
cp
.0235294 .0196078 .203922 rgb
f
2358.1 1333.52 mo
2320.45 1338.09 2282.32 1338.23 2243.69 1333.77 cv
2234.95 1522.45 li
2234.95 1522.45 2239.84 1647.28 2246.43 1691.08 cv
2287.88 1690.98 li
2285.17 1640.05 2293.04 1522.33 2293.04 1522.33 cv
2301.3 1414.69 li
2309.6 1522.29 li
2309.6 1522.29 2317.77 1639.98 2315.28 1690.92 cv
2358.48 1690.83 li
2364.87 1647 2367.6 1522.16 2367.6 1522.16 cv
2358.1 1333.52 li
cp
f
2371.76 1155.03 mo
2371.76 1155.03 2397.16 1206.26 2412.57 1238.93 cv
2398.49 1284.22 li
2373.56 1267.83 2332.93 1199.77 2332.93 1199.77 cv
2371.76 1155.03 li
cp
f
2321.54 1142.75 mo
2269.96 1145.04 li
2264.75 1195.51 li
2270.38 1339.55 li
2324.78 1338.87 li
2339 1177.63 li
2321.54 1142.75 li
cp
.584314 .65098 .858824 rgb
f
2264.95 1065.01 mo
2272.13 1056.76 2277.8 1064.77 2288.04 1054.54 cv
2298.28 1044.32 2306.5 1036.96 2315.27 1047.75 cv
2324.04 1058.54 2328.55 1060.05 2334.93 1059.43 cv
2341.32 1058.82 2341.28 1085.06 2341.28 1085.06 cv
2341.28 1085.06 2366.39 1078.78 2363.02 1060.46 cv
2359.29 1040.14 2350.05 1045.95 2344.88 1029.49 cv
2339.71 1013.03 2319.75 1003.74 2310.61 1007.7 cv
2300.98 1011.86 2295.93 1016.45 2281.91 1013.04 cv
2267.88 1009.63 2255.8 1013.76 2255.82 1031.94 cv
2255.85 1050.13 2234.46 1044.7 2241.31 1067.41 cv
2243.96 1076.21 2251.41 1084.32 2254.86 1083.62 cv
2259.49 1082.67 2260.31 1070.34 2264.95 1065.01 cv
cp
.0313726 .027451 .301961 rgb
f
2323.94 1348.01 mo
2273.28 1348.01 li
2273.28 1332.9 li
2323.94 1332.9 li
2323.94 1348.01 li
cp
.176471 .172549 .380392 rgb
f
2278.4 1155.45 mo
2296.35 1169.65 li
2314.57 1155.45 li
2316.98 1120.76 li
2275.99 1120.76 li
2278.4 1155.45 li
cp
.870588 .384314 .235294 rgb
f
2222.42 1154.46 mo
2223.35 1380.02 li
2240.92 1394.44 2275.34 1398.38 2275.34 1398.38 cv
2269.08 1148.41 li
2222.42 1154.46 li
cp
.0313726 .027451 .301961 rgb
f
2371.83 1154.46 mo
2370.89 1380.02 li
2353.33 1394.44 2318.91 1398.38 2318.91 1398.38 cv
2325.16 1148.41 li
2371.83 1154.46 li
cp
f
2243.87 1178.08 mo
2273.52 1306.01 li
2269.02 1146.14 li
2243.87 1178.08 li
cp
.176471 .172549 .380392 rgb
f
2351.94 1169.22 mo
2321.54 1307.47 li
2325.16 1148.41 li
2351.94 1169.22 li
cp
f
2300.5 1030.26 mo
2247.59 1029.02 2259.67 1100.28 2263.53 1111.47 cv
2265.64 1117.58 2279.06 1141 2300.64 1141.33 cv
2322.22 1141 2335.35 1117.58 2337.46 1111.47 cv
2341.32 1100.28 2355.23 1031.1 2300.5 1030.26 cv
cp
.952941 .478431 .313726 rgb
f
2294.16 1077.42 mo
2294.69 1077.13 2295.12 1076.65 2295.33 1076.03 cv
2295.75 1074.75 2295.05 1073.37 2293.77 1072.94 cv
2293.38 1072.82 2284.22 1069.9 2275.89 1075.88 cv
2274.79 1076.67 2274.54 1078.2 2275.33 1079.29 cv
2276.11 1080.39 2277.64 1080.64 2278.74 1079.85 cv
2285.07 1075.3 2292.17 1077.56 2292.24 1077.59 cv
2292.9 1077.8 2293.59 1077.72 2294.16 1077.42 cv
cp
.0313726 .027451 .301961 rgb
f
2317.15 1076.73 mo
2316.61 1076.44 2316.18 1075.96 2315.98 1075.34 cv
2315.56 1074.06 2316.25 1072.67 2317.54 1072.25 cv
2317.92 1072.13 2327.08 1069.21 2335.42 1075.19 cv
2336.51 1075.98 2336.76 1077.51 2335.98 1078.6 cv
2335.19 1079.7 2333.66 1079.95 2332.57 1079.16 cv
2326.23 1074.62 2319.13 1076.87 2319.06 1076.9 cv
2318.4 1077.11 2317.71 1077.03 2317.15 1076.73 cv
cp
f
2327.87 1085.68 mo
2327.87 1088.07 2325.93 1090 2323.55 1090 cv
2321.17 1090 2319.24 1088.07 2319.24 1085.68 cv
2319.24 1083.3 2321.17 1081.37 2323.55 1081.37 cv
2325.93 1081.37 2327.87 1083.3 2327.87 1085.68 cv
cp
0 0 0 rgb
f
2290.86 1085.68 mo
2290.86 1088.07 2288.93 1090 2286.55 1090 cv
2284.17 1090 2282.24 1088.07 2282.24 1085.68 cv
2282.24 1083.3 2284.17 1081.37 2286.55 1081.37 cv
2288.93 1081.37 2290.86 1083.3 2290.86 1085.68 cv
cp
f
2308.52 1089.81 mo
2311.98 1095.32 2316.38 1102.04 2316.38 1102.04 cv
2316.38 1102.04 2314.38 1107.87 2306.7 1107.98 cv
2309.95 1106.62 2313.15 1104.42 2311.81 1100.09 cv
2310.47 1095.76 2308.52 1089.81 2308.52 1089.81 cv
cp
.870588 .384314 .235294 rgb
f
2301.06 1182.92 mo
2310.11 1304.42 li
2296.54 1320.43 li
2282.97 1304.42 li
2292.22 1183.23 li
2301.06 1182.92 li
cp
.992157 .443137 .4 rgb
f
2306.02 1169.86 mo
2297 1167.49 li
2287.77 1170.27 li
2292.21 1183.46 li
2301.09 1183.3 li
2306.02 1169.86 li
cp
f
2296.54 1167.52 mo
2296.54 1167.52 2290.56 1176.27 2279.96 1181.22 cv
2262.17 1154.23 li
2269.96 1145.04 li
2296.54 1167.52 li
cp
1 1 1 rgb
f
2296.54 1167.52 mo
2296.54 1167.52 2305.19 1177.61 2313.59 1180.63 cv
2329.7 1151.49 li
2322.12 1142.75 li
2296.54 1167.52 li
cp
f
2478.67 1229.75 mo
2471.62 1202.71 li
2402.77 1232.81 li
2398.49 1284.22 li
2416.65 1282.47 2453.27 1257.28 2478.67 1229.75 cv
cp
.0235294 .0196078 .203922 rgb
f
2318.79 1117.54 mo
2319.5 1116.38 2318.86 1114.68 2317.76 1114.81 cv
2314.97 1115.14 2310.36 1115.55 2305.98 1115.36 cv
2301.61 1115.17 2297.05 1114.37 2294.3 1113.8 cv
2293.21 1113.58 2292.43 1115.22 2293.04 1116.43 cv
2294.89 1120.18 2298.81 1125.92 2305.52 1126.21 cv
2312.23 1126.49 2316.62 1121.11 2318.79 1117.54 cv
cp
1 1 1 rgb
f
2258.65 1077.85 mo
2264.63 1079.84 2266.33 1037.08 2289.57 1052.57 cv
2305.93 1063.48 2336.08 1066.21 2329.99 1051.41 cv
2334.88 1055.04 2340.42 1060.75 2340.42 1060.75 cv
2331.8 1032.22 li
2331.8 1032.22 2287.44 1018.28 2271.69 1032.4 cv
2255.94 1046.53 2258.65 1077.85 2258.65 1077.85 cv
cp
.0313726 .027451 .301961 rgb
f
2269.69 1082.68 mo
2273.2 1089.58 2271.16 1097.67 2265.11 1100.75 cv
2259.06 1103.84 2251.31 1100.74 2247.79 1093.84 cv
2244.28 1086.94 2246.33 1078.85 2252.37 1075.77 cv
2258.42 1072.69 2266.17 1075.78 2269.69 1082.68 cv
cp
.952941 .478431 .313726 rgb
f
2260.53 1097.15 mo
2260.38 1097.15 2260.22 1097.13 2260.07 1097.08 cv
2259.23 1096.83 2258.75 1095.94 2259.01 1095.1 cv
2260.3 1090.87 2260.18 1087.68 2258.68 1085.87 cv
2256.66 1083.42 2252.57 1083.82 2252.53 1083.83 cv
2251.65 1083.92 2250.87 1083.29 2250.77 1082.42 cv
2250.68 1081.55 2251.3 1080.77 2252.17 1080.67 cv
2252.41 1080.64 2257.98 1080.05 2261.12 1083.82 cv
2263.38 1086.53 2263.69 1090.64 2262.05 1096.02 cv
2261.85 1096.71 2261.22 1097.15 2260.53 1097.15 cv
cp
.870588 .384314 .235294 rgb
f
2526.62 1185.89 mo
2522.93 1200.63 li
2517.76 1221.3 li
2513.83 1236.99 li
2482.86 1233.37 li
2482.65 1217.2 li
2482.39 1195.89 li
2482.2 1180.7 li
2526.62 1185.89 li
cp
.992157 .443137 .4 rgb
f
2477.75 1180.18 mo
2531.07 1186.41 li
2530.84 1180.72 li
2479.28 1174.7 li
2477.75 1180.18 li
cp
.839216 .376471 .337255 rgb
f
2526.77 1180.25 mo
2483.36 1175.17 li
2484.87 1169.85 li
2526.52 1174.71 li
2526.77 1180.25 li
cp
f
2513.83 1236.99 mo
2512.46 1242.49 li
2482.93 1239.04 li
2482.86 1233.37 li
2513.83 1236.99 li
cp
f
2522.93 1200.63 mo
2517.76 1221.3 li
2482.65 1217.2 li
2482.39 1195.89 li
2522.93 1200.63 li
cp
f
2512.51 1218.43 mo
2512.84 1218.19 2513.2 1218.04 2513.57 1217.92 cv
2513.53 1217.86 2513.49 1217.81 2513.45 1217.76 cv
2511.08 1214.47 2511.07 1210.43 2513.43 1208.73 cv
2513.81 1208.45 2514.24 1208.26 2514.7 1208.14 cv
2513.97 1205.66 2514.44 1203.26 2516.12 1202.04 cv
2516.79 1201.56 2517.58 1201.33 2518.42 1201.3 cv
2517.53 1198.88 2518.06 1196.28 2519.94 1194.92 cv
2522.3 1193.22 2525.85 1194.12 2527.88 1196.92 cv
2529.9 1199.73 2529.63 1203.38 2527.27 1205.08 cv
2526.67 1205.51 2526 1205.77 2525.29 1205.88 cv
2527.03 1208.96 2526.84 1212.41 2524.71 1213.94 cv
2524.32 1214.22 2523.89 1214.41 2523.44 1214.54 cv
2524.16 1217.01 2523.69 1219.42 2522.01 1220.63 cv
2521.39 1221.08 2520.66 1221.31 2519.89 1221.37 cv
2520.78 1223.48 2520.36 1225.82 2518.7 1227.01 cv
2516.71 1228.45 2513.71 1227.69 2512 1225.32 cv
2510.29 1222.95 2510.52 1219.86 2512.51 1218.43 cv
cp
.952941 .478431 .313726 rgb
f
2482.91 1208.17 mo
2485.2 1207.27 2488.1 1204.43 2489.62 1199.18 cv
2491.14 1193.93 2503.44 1190.53 2499.02 1187.71 cv
2494.59 1184.89 2481.04 1187.25 2475.89 1199.04 cv
2472.99 1201.98 2471.62 1202.71 2471.62 1202.71 cv
2477.91 1227.03 li
2482.79 1225.95 li
2482.91 1208.17 li
cp
f
1972.06 1303.78 mo
1972.31 1303.86 1972.57 1303.9 1972.82 1303.93 cv
1973.64 1303.93 li
1975.16 1303.77 1976.51 1302.73 1976.99 1301.19 cv
2015.72 1176.31 li
2015.8 1176.06 2015.85 1175.81 2015.87 1175.56 cv
2015.89 1175.39 2015.88 1175.23 2015.88 1175.06 cv
2015.88 1174.96 2015.89 1174.86 2015.88 1174.77 cv
2015.87 1174.68 2015.84 1174.6 2015.83 1174.51 cv
2015.59 1173.09 2014.6 1171.85 2013.14 1171.39 cv
2012.9 1171.32 2012.65 1171.26 2012.4 1171.23 cv
2012.11 1171.2 2011.83 1171.21 2011.56 1171.23 cv
1914.05 1171.23 li
1874.98 1303.93 li
1972.13 1303.93 li
1972.06 1303.78 li
cp
.584314 .65098 .858824 rgb
f
1914.94 1171.39 mo
1912.86 1170.74 1910.66 1171.9 1910.01 1173.98 cv
1871.53 1298.54 li
1871.44 1298.84 li
1870.8 1300.9 1871.95 1303.09 1874.01 1303.74 cv
1874.02 1303.75 li
1876.09 1304.4 1878.3 1303.24 1878.94 1301.16 cv
1917.53 1176.31 li
1918.18 1174.24 1917.02 1172.03 1914.94 1171.39 cv
cp
.462745 .560784 .858824 rgb
f
1988.61 1250.61 mo
1988.97 1250.37 1989.37 1250.22 1989.77 1250.11 cv
1989.73 1250.04 1989.69 1249.99 1989.64 1249.92 cv
1987.22 1246.27 1987.38 1241.89 1990.01 1240.15 cv
1990.44 1239.87 1990.91 1239.68 1991.41 1239.57 cv
1990.72 1236.86 1991.33 1234.27 1993.21 1233.03 cv
1993.95 1232.54 1994.82 1232.32 1995.73 1232.33 cv
1994.87 1229.66 1995.55 1226.87 1997.65 1225.48 cv
2000.27 1223.74 2004.08 1224.86 2006.15 1227.99 cv
2008.22 1231.11 2007.77 1235.05 2005.15 1236.79 cv
2004.48 1237.23 2003.74 1237.48 2002.97 1237.57 cv
2004.72 1240.98 2004.37 1244.71 2001.99 1246.28 cv
2001.56 1246.56 2001.09 1246.75 2000.59 1246.87 cv
2001.28 1249.57 2000.67 1252.16 1998.79 1253.4 cv
1998.1 1253.86 1997.3 1254.08 1996.47 1254.11 cv
1997.33 1256.44 1996.78 1258.94 1994.94 1260.17 cv
1992.72 1261.63 1989.5 1260.69 1987.76 1258.05 cv
1986.01 1255.41 1986.39 1252.08 1988.61 1250.61 cv
cp
.952941 .478431 .313726 rgb
f
1868.73 1242.72 mo
1877.62 1237.57 li
1877.62 1237.57 1880.08 1224.96 1894.36 1224.66 cv
1892.72 1229.95 1890.37 1237.57 1890.37 1237.57 cv
1890.37 1237.57 1897.39 1243.03 1914.05 1233.69 cv
1930.34 1230.03 1923.38 1241.91 1928.78 1242.76 cv
1936.75 1244.02 1922.98 1259.67 1906.71 1262.06 cv
1885.67 1265.17 1883.17 1260.86 1883.17 1260.86 cv
1871.26 1265.02 li
1868.73 1242.72 li
cp
f
1786.48 1256.19 mo
1816.19 1254.11 1866.87 1239.44 1866.87 1239.44 cv
1874.98 1251.88 1872.74 1268.4 1872.74 1268.4 cv
1826.6 1308.85 1757.17 1321.93 1735.86 1312.19 cv
1716.41 1303.3 1730.14 1184.9 1778.98 1157.78 cv
1778.98 1157.78 li
1795.72 1186.11 1786.48 1256.19 1786.48 1256.19 cv
cp
.788235 .352941 .317647 rgb
f
2389.96 1483.15 mo
1770.12 1483.15 li
1755.55 1483.15 1743.74 1475.2 1743.74 1465.4 cv
1743.74 1465.4 li
1743.74 1455.59 1755.55 1447.65 1770.12 1447.65 cv
2389.96 1447.65 li
2404.53 1447.65 2416.34 1455.59 2416.34 1465.4 cv
2416.34 1465.4 li
2416.34 1475.2 2404.53 1483.15 2389.96 1483.15 cv
cp
.584314 .65098 .858824 rgb
f
2002.43 1733.27 mo
2002.43 1733.27 li
1995.79 1733.27 1991.79 1725.9 1995.43 1720.33 cv
2159.08 1469.53 li
2173.09 1478.67 li
2009.44 1729.47 li
2007.89 1731.84 2005.26 1733.27 2002.43 1733.27 cv
cp
f
2157.65 1733.27 mo
2157.65 1733.27 li
2164.29 1733.27 2168.28 1725.9 2164.65 1720.33 cv
2000.99 1469.53 li
1986.98 1478.67 li
2150.64 1729.47 li
2152.19 1731.84 2154.82 1733.27 2157.65 1733.27 cv
cp
f
1737.6 1729.29 mo
1737.6 1729.29 li
1742.03 1729.29 1745.61 1725.71 1745.61 1721.28 cv
1745.61 1579.32 li
1729.59 1579.32 li
1729.59 1721.28 li
1729.59 1725.71 1733.18 1729.29 1737.6 1729.29 cv
cp
.462745 .560784 .858824 rgb
f
1681.38 1729.29 mo
1681.38 1729.29 li
1685.8 1729.29 1689.39 1725.71 1689.39 1721.28 cv
1689.39 1579.32 li
1673.37 1579.32 li
1673.37 1721.28 li
1673.37 1725.71 1676.95 1729.29 1681.38 1729.29 cv
cp
f
1607.6 1729.29 mo
1607.6 1729.29 li
1612.03 1729.29 1615.62 1725.71 1615.62 1721.28 cv
1615.62 1579.32 li
1599.59 1579.32 li
1599.59 1721.28 li
1599.59 1725.71 1603.18 1729.29 1607.6 1729.29 cv
cp
f
1551.38 1729.29 mo
1551.38 1729.29 li
1555.81 1729.29 1559.39 1725.71 1559.39 1721.28 cv
1559.39 1579.32 li
1543.37 1579.32 li
1543.37 1721.28 li
1543.37 1725.71 1546.96 1729.29 1551.38 1729.29 cv
cp
f
1640.04 1368.63 mo
1640.04 1537.57 li
1640.04 1539.49 1641.59 1541.05 1643.52 1541.05 cv
1748.26 1541.05 li
1758.83 1541.05 1767.39 1549.62 1767.39 1560.19 cv
1767.39 1560.19 li
1767.39 1570.75 1758.83 1579.32 1748.26 1579.32 cv
1640.04 1579.32 li
1620.9 1579.32 li
1610.33 1579.32 1601.77 1570.75 1601.77 1560.19 cv
1601.77 1541.05 li
1601.77 1368.63 li
1601.77 1358.07 1610.33 1349.5 1620.9 1349.5 cv
1620.9 1349.5 li
1631.47 1349.5 1640.04 1358.07 1640.04 1368.63 cv
cp
.584314 .65098 .858824 rgb
f
1538.09 1544.15 mo
1620.9 1544.15 li
1620.9 1349.5 li
1538.09 1349.5 li
1538.09 1544.15 li
cp
f
1557.22 1368.63 mo
1557.22 1537.57 li
1557.22 1539.49 1558.78 1541.05 1560.7 1541.05 cv
1665.45 1541.05 li
1676.01 1541.05 1684.58 1549.62 1684.58 1560.19 cv
1684.58 1560.19 li
1684.58 1570.75 1676.01 1579.32 1665.45 1579.32 cv
1557.22 1579.32 li
1538.09 1579.32 li
1527.52 1579.32 1518.95 1570.75 1518.95 1560.19 cv
1518.95 1541.05 li
1518.95 1368.63 li
1518.95 1358.07 1527.52 1349.5 1538.09 1349.5 cv
1538.09 1349.5 li
1548.65 1349.5 1557.22 1358.07 1557.22 1368.63 cv
cp
.462745 .560784 .858824 rgb
f
1723.28 1407.13 mo
1715.7 1412.18 1717.8 1439.66 1720.66 1441.06 cv
1760.07 1445.88 1826.64 1413.22 1826.64 1413.22 cv
1829.25 1398.61 li
1829.25 1398.61 1773.65 1407.93 1723.28 1407.13 cv
cp
.952941 .478431 .313726 rgb
f
1636.68 1359.47 mo
1650.77 1382 1712.44 1440.26 1722.01 1441.13 cv
1730.16 1408.1 li
1730.16 1408.1 1674.8 1337.91 1665.05 1326.71 cv
1648.2 1307.27 1613.6 1322.73 1636.68 1359.47 cv
cp
f
1670.38 1239.07 mo
1672.08 1216.01 1665.41 1195.62 1647.01 1185.25 cv
1628.37 1174.73 1605.01 1185.04 1605.01 1185.04 cv
1605.01 1185.04 li
1605.01 1185.04 1585.24 1178.01 1567.33 1197.75 cv
1549.41 1217.48 1562.96 1234.85 1555.63 1249.24 cv
1551.29 1257.76 1529.22 1259.52 1534.92 1287.29 cv
1536.57 1295.29 1546.2 1300.68 1554.35 1301.22 cv
1568.69 1302.16 1582.03 1296.62 1587.84 1302.16 cv
1606.98 1320.42 1649.41 1313.81 1655.34 1297.11 cv
1657.18 1291.94 1695.34 1301.96 1691.54 1266.69 cv
1689.61 1248.82 1668.87 1259.69 1670.38 1239.07 cv
cp
.0313726 .027451 .301961 rgb
f
1635.41 1313.65 mo
1605.12 1308.05 li
1593.76 1323.17 li
1617.9 1372.67 li
1653.41 1342.53 li
1635.41 1313.65 li
cp
.952941 .478431 .313726 rgb
f
1674.69 1433 mo
1674.17 1423.59 1689.39 1384.91 1681.38 1365.44 cv
1675.54 1349.78 1665.79 1323.49 1653.86 1319.1 cv
1648.22 1317.03 1642.43 1315.59 1635.41 1313.65 cv
1635.41 1313.65 1639.37 1333.38 1631.12 1334.04 cv
1615.24 1335.32 1605.12 1308.05 1605.12 1308.05 cv
1596.55 1307.24 1557.28 1320.14 1557.29 1323.37 cv
1557.39 1348.63 1577.91 1385.49 1584.62 1412.8 cv
1587.26 1442.3 1576.97 1477.6 1576.94 1480.96 cv
1576.94 1480.96 1640.12 1498.72 1677.58 1478.1 cv
1678.36 1475.23 1675.4 1446.01 1674.69 1433 cv
cp
.486275 .603922 .94902 rgb
f
1586.44 1450.65 mo
1586.44 1450.65 1572.49 1485.84 1569.09 1507.99 cv
1565.69 1530.15 1584.89 1544.36 1584.89 1544.36 cv
1744.53 1544.36 li
1744.53 1544.36 1761.63 1516.64 1756.7 1497.51 cv
1751.78 1478.37 1740.46 1475.32 1740.46 1475.32 cv
1586.44 1450.65 li
cp
f
1746.67 1474.34 mo
1726.29 1471.47 1667.13 1494.44 1641.91 1544.36 cv
1712.48 1544.36 li
1746.67 1474.34 li
cp
.870588 .384314 .235294 rgb
f
1724.32 1492.71 mo
1726.95 1489.83 1729.34 1486.28 1731.45 1482.57 cv
1737.4 1472.09 1751.74 1470.32 1759.83 1479.25 cv
1789.26 1511.68 1851.98 1585.64 1865.96 1594.84 cv
1869.92 1597.44 1892.97 1610.71 1914.88 1608.09 cv
1914.88 1608.09 1925.7 1612.21 1918.49 1620.8 cv
1914.79 1625.22 1859.09 1629.79 1859.09 1629.79 cv
1854.75 1613.43 li
1822.33 1589.44 1781.97 1591.16 1747.75 1547.3 cv
1728.91 1523.14 1724.32 1492.71 1724.32 1492.71 cv
cp
f
1870.37 1639.22 mo
1892.78 1653.77 li
1895.86 1650.09 li
1877.69 1633.14 li
1888.01 1624.99 1911.93 1631.79 1911.93 1631.79 cv
1919.76 1626.73 1935.04 1610.32 1936.61 1601.53 cv
1931.59 1595.28 1914.89 1608.13 1914.89 1608.13 cv
1915.5 1610.92 1910.22 1620.57 1906.02 1622.21 cv
1887.78 1626.15 1869.59 1620.97 1854.75 1613.43 cv
1854.75 1613.43 1842.35 1632.22 1870.37 1639.22 cv
cp
.992157 .443137 .4 rgb
f
1723.99 1497.12 mo
1719.91 1498.22 1716.87 1501.64 1716.28 1505.82 cv
1714.68 1517.15 1706.44 1540.08 1717.59 1564.09 cv
1744.97 1623.04 1761.13 1661.88 1764 1677.09 cv
1756.85 1690.48 1785.37 1727.07 1785.79 1729.47 cv
1806.32 1723.04 li
1806.32 1723.04 1794.54 1705.52 1790.3 1698.66 cv
1780.21 1682.33 1778.55 1662.28 1776.91 1646.74 cv
1769.91 1580.41 1781.95 1538.53 1733.96 1499.61 cv
1731.12 1497.31 1727.52 1496.17 1723.99 1497.12 cv
cp
.952941 .478431 .313726 rgb
f
1753.78 1705.15 mo
1755.8 1731.79 li
1760.59 1732.01 li
1763.05 1707.28 li
1775.79 1710.55 1784.89 1733.69 1784.89 1733.69 cv
1793.66 1736.85 1815.97 1739.04 1823.92 1734.96 cv
1825.85 1727.18 1805.49 1721.7 1805.49 1721.7 cv
1803.65 1723.87 1792.78 1725.53 1788.92 1723.19 cv
1774.72 1711.06 1767.01 1693.46 1764 1677.09 cv
1764 1677.09 1742.35 1678.62 1753.78 1705.15 cv
cp
.992157 .443137 .4 rgb
f
1627.76 1288.9 mo
1603.16 1285.22 li
1605.12 1308.05 li
1605.12 1308.05 1609.83 1318.4 1615.29 1319.1 cv
1635.41 1313.65 li
1627.76 1288.9 li
cp
.952941 .478431 .313726 rgb
f
1580.4 1255.89 mo
1586.75 1282.41 1608.78 1299.87 1629.61 1294.88 cv
1650.45 1289.89 1662.18 1264.35 1655.83 1237.82 cv
1649.48 1211.3 1627.45 1193.84 1606.62 1198.83 cv
1585.78 1203.82 1574.04 1229.36 1580.4 1255.89 cv
cp
f
1646.07 1244.79 mo
1646.99 1246.63 1649.23 1247.38 1651.07 1246.47 cv
1652.91 1245.55 1653.66 1243.31 1652.74 1241.47 cv
1651.82 1239.63 1649.59 1238.88 1647.74 1239.8 cv
1645.9 1240.71 1645.15 1242.95 1646.07 1244.79 cv
cp
0 0 0 rgb
f
1616.81 1252.01 mo
1617.8 1254 1620.23 1254.81 1622.22 1253.82 cv
1624.21 1252.83 1625.02 1250.41 1624.03 1248.41 cv
1623.04 1246.42 1620.62 1245.61 1618.62 1246.6 cv
1616.63 1247.6 1615.82 1250.02 1616.81 1252.01 cv
cp
f
1612.35 1248.67 mo
1612.63 1248.53 1612.86 1248.31 1613 1248 cv
1615.02 1243.65 1620.48 1242.79 1620.54 1242.79 cv
1621.3 1242.67 1621.83 1241.96 1621.72 1241.2 cv
1621.61 1240.44 1620.91 1239.9 1620.14 1240.01 cv
1619.85 1240.05 1613.13 1241.06 1610.46 1246.83 cv
1610.13 1247.53 1610.44 1248.36 1611.14 1248.69 cv
1611.54 1248.87 1611.99 1248.85 1612.35 1248.67 cv
cp
.0313726 .027451 .301961 rgb
f
1654.2 1239.39 mo
1654.33 1239.33 1654.46 1239.24 1654.57 1239.12 cv
1655.11 1238.57 1655.11 1237.68 1654.56 1237.14 cv
1650.28 1232.91 1645.01 1234.67 1644.78 1234.74 cv
1644.05 1234.99 1643.66 1235.79 1643.92 1236.53 cv
1644.17 1237.25 1644.96 1237.64 1645.69 1237.4 cv
1645.87 1237.34 1649.58 1236.16 1652.58 1239.13 cv
1653.02 1239.57 1653.67 1239.65 1654.2 1239.39 cv
cp
f
1643.68 1252.89 mo
1645.72 1255 1647.51 1257.16 1649.46 1258.39 cv
1650.12 1258.81 1650.33 1259.68 1649.95 1260.36 cv
1648.37 1263.15 1643.77 1265.46 1640.95 1266.65 cv
1640.54 1266.83 1640.2 1266.29 1640.54 1266 cv
1643.38 1263.5 1644.61 1261.66 1645.12 1260.65 cv
1645.38 1260.15 1645.37 1259.55 1645.12 1259.05 cv
1644.53 1257.9 1643.37 1255.55 1642.58 1253.6 cv
1642.31 1252.93 1643.17 1252.37 1643.68 1252.89 cv
cp
.870588 .384314 .235294 rgb
f
1590.42 1256.06 mo
1595.48 1259.99 1596.97 1266.54 1593.75 1270.69 cv
1590.53 1274.83 1583.81 1275 1578.75 1271.06 cv
1573.69 1267.12 1572.2 1260.57 1575.42 1256.43 cv
1578.64 1252.28 1585.36 1252.12 1590.42 1256.06 cv
cp
.952941 .478431 .313726 rgb
f
1587.54 1269.48 mo
1587.73 1269.39 1587.9 1269.25 1588.03 1269.07 cv
1589.98 1266.49 1590.16 1263.58 1588.52 1261.3 cv
1586.84 1258.96 1583.73 1257.9 1581.12 1258.76 cv
1580.38 1259 1579.98 1259.8 1580.23 1260.53 cv
1580.47 1261.27 1581.26 1261.67 1582 1261.42 cv
1583.43 1260.95 1585.29 1261.61 1586.24 1262.94 cv
1587.15 1264.21 1586.99 1265.79 1585.79 1267.39 cv
1585.33 1268.01 1585.45 1268.89 1586.07 1269.35 cv
1586.51 1269.68 1587.08 1269.71 1587.54 1269.48 cv
cp
.870588 .384314 .235294 rgb
f
1620.65 1274.04 mo
1620.06 1273.25 1620.69 1272.14 1621.67 1272.26 cv
1624.16 1272.56 1628.27 1272.96 1632.2 1272.96 cv
1636.13 1272.96 1640.24 1272.56 1642.73 1272.26 cv
1643.71 1272.14 1644.34 1273.25 1643.75 1274.04 cv
1641.95 1276.48 1638.22 1280.17 1632.2 1280.17 cv
1626.18 1280.17 1622.45 1276.48 1620.65 1274.04 cv
cp
1 1 1 rgb
f
1579.88 1253.54 mo
1604.75 1250.21 1639.54 1224.88 1642.39 1211.88 cv
1637.58 1196.26 1611.96 1188.41 1597.49 1195.65 cv
1583.02 1202.88 1569.35 1233.89 1579.88 1253.54 cv
cp
.0313726 .027451 .301961 rgb
f
1812.49 1441.57 mo
1812.49 1441.57 li
1809.18 1440.49 1807.38 1436.93 1808.46 1433.62 cv
1846.83 1316.05 li
1847.92 1312.74 1851.47 1310.93 1854.78 1312.01 cv
1854.78 1312.01 li
1858.09 1313.09 1859.9 1316.65 1858.82 1319.96 cv
1820.44 1437.53 li
1819.36 1440.84 1815.8 1442.65 1812.49 1441.57 cv
cp
1 1 1 rgb
f
1832.88 1399.43 mo
1840.7 1375.48 li
1840.7 1375.48 1847.47 1389.26 1840.7 1402.34 cv
1833.92 1415.42 1827.47 1416 1827.47 1416 cv
1832.88 1399.43 li
cp
.952941 .478431 .313726 rgb
f
1821.71 1393.02 mo
1819.73 1388.37 1815.07 1376.74 1819.73 1376.79 cv
1824.39 1376.84 1825.14 1382.49 1825.14 1382.49 cv
1821.71 1393.02 li
cp
f
1437.23 1323.01 mo
1447.78 1312.36 1440.86 1301.44 1440.86 1301.44 cv
1446.65 1300.2 1477.21 1346.49 1490.38 1375.9 cv
1513.37 1352.74 1553.86 1321.46 1564.81 1319.63 cv
1564.81 1319.63 1579.58 1315.66 1584.89 1333.52 cv
1589.63 1349.47 1571.15 1360.76 1571.15 1360.76 cv
1571.15 1360.76 1492.11 1416.57 1480.42 1411.61 cv
1462.23 1403.89 1445.76 1337.47 1437.23 1323.01 cv
cp
f
1420.72 1321.69 mo
1427.17 1322.09 1435.15 1318.9 1437.64 1324.68 cv
1450.37 1318.47 li
1451.14 1310.8 li
1440.2 1293.27 1413.53 1288.3 1410.89 1288.06 cv
1404.03 1287.46 1400.85 1286.75 1400.31 1287.67 cv
1399.78 1288.59 1398.1 1294.7 1408.05 1295.89 cv
1420.54 1297.39 1412.25 1307.38 1386.91 1297.87 cv
1380.57 1295.49 1368.63 1298.58 1372.95 1303.21 cv
1377.7 1308.32 1391.38 1319.9 1420.72 1321.69 cv
cp
f
2110.38 964.778 mo
2110.38 970.591 2109.39 976.217 2107.52 981.559 cv
2098.17 1008.39 2066.97 1028.1 2029.91 1028.1 cv
1992.86 1028.1 1961.66 1008.39 1952.32 981.559 cv
1950.45 976.217 1949.45 970.591 1949.45 964.778 cv
2110.38 964.778 li
cp
.486275 .603922 .94902 rgb
f
2110.38 964.778 mo
2110.38 970.591 2109.39 976.217 2107.52 981.559 cv
1952.32 981.559 li
1950.45 976.217 1949.45 970.591 1949.45 964.778 cv
2110.38 964.778 li
cp
.415686 .52549 .807843 rgb
f
2198.42 693.328 mo
2198.42 600.345 2123.11 524.953 2030.16 524.822 cv
1938.48 524.692 1863.08 598.573 1861.44 690.236 cv
1860.72 730.327 1874.01 767.289 1896.73 796.56 cv
1925.49 833.596 1941.45 878.958 1941.45 925.847 cv
1941.45 926.676 li
2118.39 926.676 li
2118.39 925.85 li
2118.39 878.895 2134.46 833.529 2163.22 796.407 cv
2185.29 767.916 2198.42 732.157 2198.42 693.328 cv
cp
.654902 .756863 .913725 rgb
f
2031.76 694.768 mo
2026.89 703.039 2022.84 712.343 2019.99 721.989 cv
2015.03 738.829 2014.35 754.964 2018.18 765.148 cv
2020.95 772.5 2025.66 776.326 2032.57 776.846 cv
2039.7 777.383 2044.19 774.457 2046.7 767.64 cv
2052.41 752.121 2045.48 720.425 2031.76 694.768 cv
cp
2055.41 907.604 mo
2054.94 907.604 2054.46 907.527 2053.99 907.364 cv
2051.75 906.581 2050.56 904.126 2051.34 901.879 cv
2051.54 901.308 2071.41 844.058 2085.85 785.762 cv
2111.44 682.432 2098.27 665.636 2091.42 663.211 cv
2071.28 656.08 2055.24 666.629 2045.34 676.733 cv
2042.43 679.7 2039.64 683.053 2037.01 686.707 cv
2041.31 694.147 2045.19 702.367 2048.44 711.051 cv
2057.36 734.891 2059.73 757.156 2054.78 770.614 cv
2050.96 780.995 2042.85 786.259 2031.92 785.438 cv
2021.62 784.662 2014.08 778.696 2010.12 768.185 cv
2005.58 756.129 2006.17 738.404 2011.73 719.552 cv
2015.24 707.648 2020.5 696.196 2026.86 686.327 cv
2020.92 676.926 2014.04 668.838 2006.57 663.395 cv
1995.48 655.312 1985.07 654.959 1975.62 662.348 cv
1956.1 677.603 1955.35 723.481 1973.46 795.024 cv
1987.41 850.181 2007.89 901.176 2008.09 901.684 cv
2008.98 903.891 2007.92 906.4 2005.71 907.29 cv
2003.5 908.181 2000.99 907.114 2000.1 904.908 cv
1999.9 904.395 1979.23 852.929 1965.12 797.215 cv
1945.83 720.994 1947.57 673.333 1970.31 655.56 cv
1982.8 645.797 1997.48 646.106 2011.64 656.433 cv
2018.75 661.608 2025.76 669.365 2032.12 678.854 cv
2034.38 675.922 2036.75 673.189 2039.19 670.701 cv
2055.67 653.888 2075.24 648.343 2094.3 655.089 cv
2106.16 659.29 2111.03 675.256 2109.17 703.902 cv
2107.81 725.029 2102.77 753.284 2094.2 787.882 cv
2079.66 846.559 2059.68 904.138 2059.48 904.712 cv
2058.86 906.49 2057.19 907.604 2055.41 907.604 cv
cp
1 1 1 rgb
f
2103.86 970.29 mo
1955.98 970.29 li
1938.66 970.29 1924.62 956.251 1924.62 938.934 cv
1924.62 936.813 li
1924.62 919.495 1938.66 905.457 1955.98 905.457 cv
2103.86 905.457 li
2121.17 905.457 2135.21 919.496 2135.21 936.813 cv
2135.21 938.933 li
2135.21 956.251 2121.17 970.29 2103.86 970.29 cv
cp
.486275 .603922 .94902 rgb
f
2316.18 700.255 mo
2261.09 700.255 li
2253.25 700.255 2246.89 693.897 2246.89 686.056 cv
2246.89 686.056 li
2246.89 678.214 2253.25 671.857 2261.09 671.857 cv
2316.18 671.857 li
2324.02 671.857 2330.38 678.214 2330.38 686.056 cv
2330.38 686.056 li
2330.38 693.897 2324.02 700.255 2316.18 700.255 cv
cp
.654902 .756863 .913725 rgb
f
1798.75 700.255 mo
1743.65 700.255 li
1735.81 700.255 1729.45 693.897 1729.45 686.056 cv
1729.45 686.056 li
1729.45 678.214 1735.81 671.857 1743.65 671.857 cv
1798.75 671.857 li
1806.59 671.857 1812.94 678.214 1812.94 686.056 cv
1812.94 686.056 li
1812.94 693.897 1806.59 700.255 1798.75 700.255 cv
cp
f
1833.76 583.685 mo
1789.91 550.321 li
1783.67 545.573 1782.46 536.664 1787.21 530.423 cv
1787.21 530.423 li
1791.96 524.182 1800.87 522.973 1807.11 527.722 cv
1850.96 561.085 li
1857.2 565.834 1858.41 574.743 1853.66 580.983 cv
1853.66 580.983 li
1848.91 587.224 1840 588.434 1833.76 583.685 cv
cp
f
2223.26 583.685 mo
2267.11 550.321 li
2273.35 545.573 2274.56 536.664 2269.81 530.423 cv
2269.81 530.423 li
2265.06 524.182 2256.15 522.973 2249.91 527.722 cv
2206.07 561.085 li
2199.83 565.834 2198.62 574.743 2203.37 580.983 cv
2203.37 580.983 li
2208.12 587.224 2217.02 588.434 2223.26 583.685 cv
cp
f
1833.76 806.035 mo
1789.91 839.398 li
1783.67 844.147 1782.46 853.056 1787.21 859.297 cv
1787.21 859.297 li
1791.96 865.537 1800.87 866.746 1807.11 861.998 cv
1850.96 828.635 li
1857.2 823.886 1858.41 814.978 1853.66 808.736 cv
1853.66 808.736 li
1848.91 802.496 1840 801.286 1833.76 806.035 cv
cp
f
2223.26 806.035 mo
2267.11 839.398 li
2273.35 844.147 2274.56 853.056 2269.81 859.297 cv
2269.81 859.297 li
2265.06 865.537 2256.15 866.746 2249.91 861.998 cv
2206.07 828.635 li
2199.83 823.886 2198.62 814.978 2203.37 808.736 cv
2203.37 808.736 li
2208.12 802.496 2217.02 801.286 2223.26 806.035 cv
cp
f
2066.46 1387.94 mo
2066.46 1387.94 2053.79 1364.04 2048.72 1338.68 cv
2044.32 1317.01 2044.52 1291.14 2045.06 1277.31 cv
2045.19 1274.17 2049.31 1273.1 2050.96 1275.78 cv
2058.93 1288.82 2073.35 1315.02 2076.59 1338.69 cv
2078.91 1355.03 2080.4 1371.47 2081.07 1387.96 cv
2066.46 1387.94 li
cp
.486275 .603922 .94902 rgb
f
2079.71 1387.94 mo
2079.71 1387.94 2088.16 1358.71 2097.45 1339.22 cv
2104.21 1325.05 2119.58 1308.08 2127.47 1299.86 cv
2128.97 1298.31 2131.57 1299.65 2131.17 1301.77 cv
2129.14 1312.57 2124.46 1333.88 2116.8 1348.43 cv
2106.16 1368.65 2088.43 1387.94 2088.43 1387.94 cv
2079.71 1387.94 li
cp
f
2036.27 1362.01 mo
2035.06 1359.65 2037.33 1357.01 2039.85 1357.86 cv
2046.24 1360.02 2052.15 1363.44 2057.23 1367.94 cv
2066.68 1376.53 2068.44 1386.31 2068.44 1386.31 cv
2065.19 1387.41 li
2065.19 1387.41 2047.58 1384.2 2036.27 1362.01 cv
cp
.415686 .52549 .807843 rgb
f
2102.39 1293.68 mo
2102.18 1290.66 2098.3 1289.56 2096.53 1292.02 cv
2089.93 1301.2 2078.86 1319.29 2075.24 1341.46 cv
2070.7 1369.13 2075.98 1387.96 2075.98 1387.96 cv
2079.71 1387.96 li
2079.71 1387.96 2093.46 1361.9 2098.83 1344.24 cv
2103.89 1327.58 2103.24 1305.46 2102.39 1293.68 cv
cp
f
2088.43 1387.94 mo
2088.43 1387.94 2096.34 1361.59 2123.4 1351.56 cv
2124.98 1350.98 2126.5 1352.56 2125.86 1354.12 cv
2122.29 1362.82 2112.12 1383.62 2094.95 1387.93 cv
2088.43 1387.94 li
cp
f
2112.39 1383.48 mo
2049.74 1383.48 li
2057.78 1447.66 li
2104.35 1447.66 li
2112.39 1383.48 li
cp
.462745 .560784 .858824 rgb
f
2045.03 1433.67 mo
2045.03 1442.88 li
2047.54 1442.88 li
2048.76 1442.88 2049.75 1443.87 2049.75 1445.08 cv
2049.75 1445.46 li
2049.75 1446.67 2048.76 1447.66 2047.54 1447.66 cv
1940.66 1447.66 li
1939.24 1447.66 1938.09 1446.51 1938.09 1445.09 cv
1938.09 1431.83 li
1938.09 1430.41 1939.24 1429.26 1940.66 1429.26 cv
2047.54 1429.26 li
2048.76 1429.26 2049.75 1430.25 2049.75 1431.46 cv
2049.75 1431.46 li
2049.75 1432.68 2048.76 1433.67 2047.54 1433.67 cv
2045.03 1433.67 li
cp
.992157 .443137 .4 rgb
f
2045.35 1442.88 mo
1952.91 1442.88 li
1951.3 1442.88 1949.99 1441.57 1949.99 1439.97 cv
1949.99 1436.58 li
1949.99 1434.97 1951.3 1433.67 1952.91 1433.67 cv
2045.35 1433.67 li
2045.35 1442.88 li
cp
1 1 1 rgb
f
1928.64 1413.78 mo
1928.64 1423.97 li
1926.13 1423.97 li
1924.91 1423.97 1923.93 1425.07 1923.93 1426.41 cv
1923.93 1426.82 li
1923.93 1428.17 1924.91 1429.26 1926.13 1429.26 cv
2033.02 1429.26 li
2034.43 1429.26 2035.58 1427.99 2035.58 1426.42 cv
2035.58 1411.74 li
2035.58 1410.17 2034.43 1408.9 2033.02 1408.9 cv
1926.13 1408.9 li
1924.91 1408.9 1923.93 1410 1923.93 1411.34 cv
1923.93 1411.34 li
1923.93 1412.69 1924.91 1413.78 1926.13 1413.78 cv
1928.64 1413.78 li
cp
.486275 .603922 .94902 rgb
f
1928.32 1423.97 mo
2020.62 1423.97 li
2022.31 1423.97 2023.68 1422.6 2023.68 1420.91 cv
2023.68 1416.84 li
2023.68 1415.15 2022.31 1413.78 2020.61 1413.78 cv
1928.32 1413.78 li
1928.32 1423.97 li
cp
1 1 1 rgb
f
2031.84 1399.46 mo
1938.7 1399.46 li
1935.35 1399.46 1932.64 1396.74 1932.64 1393.39 cv
1932.64 1389 li
1932.64 1385.65 1935.35 1382.93 1938.7 1382.93 cv
2031.84 1382.93 li
2035.19 1382.93 2037.9 1385.65 2037.9 1389 cv
2037.9 1393.39 li
2037.9 1396.74 2035.19 1399.46 2031.84 1399.46 cv
cp
.992157 .443137 .4 rgb
f
2040.21 1408.9 mo
1944.08 1408.9 li
1941.56 1408.9 1939.52 1406.86 1939.52 1404.34 cv
1939.52 1404.03 li
1939.52 1401.5 1941.56 1399.46 1944.08 1399.46 cv
2040.21 1399.46 li
2042.74 1399.46 2044.78 1401.5 2044.78 1404.03 cv
2044.78 1404.34 li
2044.78 1406.86 2042.74 1408.9 2040.21 1408.9 cv
cp
.462745 .560784 .858824 rgb
f
2678.42 1004.99 mo
2643.33 995.086 2568.4 1026.8 2588.79 1154.41 cv
2609.18 1282.02 2705.8 1260.97 2705.8 1260.97 cv
2705.8 1260.97 2747.9 1247.74 2751.68 1166.67 cv
2755.46 1085.59 2737.42 1021.64 2678.42 1004.99 cv
cp
0 0 0 rgb
f
2649.17 1159.98 mo
2649.17 1159.98 2642.09 1232.74 2581.75 1270.12 cv
2571.16 1267.23 2561.05 1242.52 2561.05 1242.52 cv
2593.97 1162.8 li
2593.97 1162.8 2605.78 1145.58 2626.6 1145.87 cv
2644.74 1146.13 2649.17 1159.98 2649.17 1159.98 cv
cp
.839216 .376471 .337255 rgb
f
2647.94 1120.89 mo
2674.1 1116.97 li
2672.01 1141.25 li
2672.01 1141.25 2658.77 1165.12 2646.2 1161.01 cv
2633.64 1156.89 2639.76 1146.35 2639.76 1146.35 cv
2647.94 1120.89 li
cp
.952941 .478431 .313726 rgb
f
2695.02 1081.51 mo
2690.77 1110.19 2669.06 1130.73 2646.54 1127.39 cv
2624.01 1124.06 2609.2 1098.1 2613.45 1069.42 cv
2617.7 1040.74 2639.4 1020.2 2661.93 1023.53 cv
2684.45 1026.87 2699.27 1052.83 2695.02 1081.51 cv
cp
f
2666.13 1073.55 mo
2665.82 1073.46 2665.54 1073.26 2665.34 1072.97 cv
2662.42 1068.78 2656.54 1068.9 2656.48 1068.9 cv
2655.66 1068.92 2654.97 1068.28 2654.95 1067.46 cv
2654.92 1066.64 2655.56 1065.95 2656.39 1065.92 cv
2656.69 1065.91 2663.92 1065.73 2667.78 1071.27 cv
2668.25 1071.95 2668.09 1072.88 2667.41 1073.34 cv
2667.02 1073.61 2666.55 1073.67 2666.13 1073.55 cv
cp
0 0 0 rgb
f
2615.9 1072.72 mo
2615.75 1072.66 2615.61 1072.58 2615.48 1072.47 cv
2614.85 1071.94 2614.77 1070.99 2615.31 1070.37 cv
2619.44 1065.49 2625.19 1066.86 2625.43 1066.92 cv
2626.23 1067.11 2626.71 1067.92 2626.52 1068.72 cv
2626.32 1069.52 2625.51 1070 2624.72 1069.81 cv
2624.53 1069.77 2620.49 1068.87 2617.58 1072.29 cv
2617.16 1072.79 2616.47 1072.95 2615.9 1072.72 cv
cp
f
2636.7 1084.86 mo
2634.82 1087.16 2633.2 1089.51 2631.35 1090.92 cv
2630.72 1091.4 2630.58 1092.3 2631.03 1092.95 cv
2632.87 1095.63 2637.72 1097.54 2640.67 1098.5 cv
2641.1 1098.64 2641.39 1098.07 2641.03 1097.8 cv
2637.93 1095.53 2636.53 1093.78 2635.93 1092.81 cv
2635.62 1092.33 2635.58 1091.73 2635.79 1091.2 cv
2636.28 1089.99 2637.24 1087.51 2637.86 1085.47 cv
2638.08 1084.77 2637.16 1084.29 2636.7 1084.86 cv
cp
.870588 .384314 .235294 rgb
f
2655.57 1106.52 mo
2656.14 1105.64 2655.4 1104.51 2654.37 1104.7 cv
2651.75 1105.17 2647.41 1105.86 2643.24 1106.11 cv
2639.08 1106.36 2634.69 1106.19 2632.03 1106.04 cv
2630.98 1105.97 2630.38 1107.19 2631.05 1107.99 cv
2633.12 1110.46 2637.32 1114.14 2643.7 1113.76 cv
2650.09 1113.38 2653.81 1109.22 2655.57 1106.52 cv
cp
1 1 1 rgb
f
2704.19 1078.88 mo
2677.54 1077.68 2642.51 1053.09 2638.27 1039.59 cv
2641.91 1022.6 2655.3 1013 2671.3 1019.31 cv
2687.29 1025.62 2713.5 1057.09 2704.19 1078.88 cv
cp
0 0 0 rgb
f
2644.36 1046.41 mo
2644.36 1046.41 2628.5 1062.53 2612.45 1066.21 cv
2618.07 1047.41 2622.08 1033.16 2631.71 1028.55 cv
2641.35 1023.93 2651.98 1023.13 2651.98 1023.13 cv
2644.36 1046.41 li
cp
f
2688.79 1077.05 mo
2683.8 1081.7 2682.83 1088.77 2686.63 1092.86 cv
2690.43 1096.95 2697.56 1096.49 2702.55 1091.85 cv
2707.54 1087.21 2708.51 1080.13 2704.71 1076.05 cv
2700.91 1071.96 2693.78 1072.41 2688.79 1077.05 cv
cp
.952941 .478431 .313726 rgb
f
2693.09 1091.01 mo
2692.89 1090.92 2692.69 1090.79 2692.53 1090.62 cv
2690.23 1088.06 2689.77 1085 2691.29 1082.43 cv
2692.85 1079.8 2696.04 1078.38 2698.89 1079.05 cv
2699.69 1079.24 2700.19 1080.04 2700 1080.84 cv
2699.81 1081.64 2699.01 1082.14 2698.21 1081.95 cv
2696.65 1081.58 2694.74 1082.46 2693.85 1083.95 cv
2693.01 1085.38 2693.33 1087.04 2694.75 1088.62 cv
2695.3 1089.23 2695.25 1090.18 2694.64 1090.73 cv
2694.2 1091.12 2693.6 1091.21 2693.09 1091.01 cv
cp
.870588 .384314 .235294 rgb
f
2663.27 1077.94 mo
2663.27 1080.46 2661.22 1082.51 2658.69 1082.51 cv
2656.17 1082.51 2654.12 1080.46 2654.12 1077.94 cv
2654.12 1075.41 2656.17 1073.36 2658.69 1073.36 cv
2661.22 1073.36 2663.27 1075.41 2663.27 1077.94 cv
cp
0 0 0 rgb
f
2629.91 1077.94 mo
2629.91 1080.46 2627.86 1082.51 2625.33 1082.51 cv
2622.81 1082.51 2620.76 1080.46 2620.76 1077.94 cv
2620.76 1075.41 2622.81 1073.36 2625.33 1073.36 cv
2627.86 1073.36 2629.91 1075.41 2629.91 1077.94 cv
cp
f
2623.46 1670.55 mo
2625.21 1653.08 2616.2 1520.16 2616.2 1520.16 cv
2590.71 1403.3 2600.73 1319.65 2600.73 1319.65 cv
2644.53 1322.73 li
2661.79 1388.77 li
2653.6 1499.04 li
2653.6 1499.04 2656.68 1507.53 2658.3 1514.32 cv
2667.09 1551.13 2658.33 1595.13 2652.92 1624.45 cv
2650.41 1638.04 2646.5 1666.6 2646.4 1673.09 cv
2657.41 1687.31 li
2657.41 1687.31 2617.58 1731.39 2611.45 1731.67 cv
2599.55 1732.21 2603.05 1720.41 2603.05 1720.41 cv
2619.42 1703.6 2622.96 1675.55 2623.46 1670.55 cv
cp
.952941 .478431 .313726 rgb
f
2658.09 1702.93 mo
2655.9 1731.25 li
2650.81 1731.48 li
2648.23 1705.18 li
2634.68 1708.64 2624.98 1733.23 2624.98 1733.23 cv
2615.65 1736.57 2591.92 1738.87 2583.48 1734.52 cv
2581.44 1726.25 2603.09 1720.45 2603.09 1720.45 cv
2605.05 1722.76 2616.6 1724.54 2620.7 1722.05 cv
2635.81 1709.19 2643.18 1690.48 2646.4 1673.09 cv
2646.4 1673.09 2670.28 1674.75 2658.09 1702.93 cv
cp
.992157 .443137 .4 rgb
f
2638.27 1328.15 mo
2699.98 1319.65 li
2723.59 1373.06 2731.28 1466.05 2737.69 1499.17 cv
2763.41 1542.3 2771.58 1673.09 2771.58 1673.09 cv
2782.58 1687.31 li
2782.58 1687.31 2742.76 1731.39 2736.63 1731.67 cv
2724.72 1732.21 2728.23 1720.41 2728.23 1720.41 cv
2744.6 1703.6 2747.79 1681.27 2748.85 1676.35 cv
2750.44 1668.97 2698.9 1523.88 2698.9 1523.88 cv
2693.4 1510.11 li
2630.45 1406.14 2620.12 1327.54 2620.12 1327.54 cv
2638.27 1328.15 li
cp
.952941 .478431 .313726 rgb
f
2783.26 1702.93 mo
2781.07 1731.25 li
2775.98 1731.48 li
2773.41 1705.18 li
2759.86 1708.64 2750.15 1733.23 2750.15 1733.23 cv
2740.82 1736.57 2717.1 1738.87 2708.66 1734.52 cv
2706.62 1726.25 2728.27 1720.45 2728.27 1720.45 cv
2730.22 1722.76 2741.78 1724.54 2745.88 1722.05 cv
2760.99 1709.19 2768.36 1690.48 2771.58 1673.09 cv
2771.58 1673.09 2795.45 1674.75 2783.26 1702.93 cv
cp
.992157 .443137 .4 rgb
f
2753 1493.11 mo
2746.83 1472.49 2749.52 1324.91 2695.11 1284.77 cv
2601.49 1294.64 li
2579.86 1329.66 2587.8 1420.78 2595.08 1495.76 cv
2639.1 1511.48 2674.1 1517.78 2753 1493.11 cv
cp
.027451 .0235294 .207843 rgb
f
2600.35 1271.54 mo
2600.35 1251.04 2582.58 1220.32 2591.1 1199.62 cv
2597.31 1182.98 2609.49 1145.42 2622.77 1142.88 cv
2628.16 1141.85 2634.08 1142.89 2641.54 1140.82 cv
2641.54 1140.82 2637.64 1158.21 2646.42 1158.92 cv
2663.3 1160.27 2672.17 1138.62 2672.17 1138.62 cv
2681.28 1137.75 2713.02 1147.23 2713 1150.66 cv
2712.9 1177.51 2704.87 1214.77 2697.74 1243.8 cv
2696.41 1258.59 2699.83 1270.54 2701.31 1278.91 cv
2704.01 1287.63 2708.43 1297.26 2708.45 1299.14 cv
2708.45 1299.14 2638.61 1321.46 2598.79 1299.54 cv
2598.79 1299.54 2600.35 1285.38 2600.35 1271.54 cv
cp
.992157 .443137 .4 rgb
f
2646.42 1158.92 mo
2644.91 1165.94 2648.99 1174.36 2660.76 1170.41 cv
2674.85 1165.68 2681.43 1139.23 2681.43 1139.23 cv
2672.6 1134.44 li
2672.6 1134.44 2665.89 1152.71 2646.42 1158.92 cv
cp
1 1 1 rgb
f
2646.42 1158.92 mo
2644.68 1162.53 2634.76 1171.81 2630.07 1166.28 cv
2625.37 1160.76 2632.46 1142.24 2632.46 1142.24 cv
2641.75 1139.58 li
2641.75 1139.58 2637.35 1153.89 2646.42 1158.92 cv
cp
f
2712.52 1149.49 mo
2712.52 1149.49 2765.86 1215.35 2757.43 1248.66 cv
2734.07 1265.77 2722.19 1245.87 2722.19 1245.87 cv
2691.16 1194.98 li
2691.16 1194.98 2678.21 1177.25 2688.03 1159.83 cv
2696.58 1144.65 2712.52 1149.49 2712.52 1149.49 cv
cp
.839216 .376471 .337255 rgb
f
2640.44 1298.79 mo
2616.83 1298.79 li
2614.9 1298.79 2613.31 1297.29 2613.19 1295.37 cv
2609.76 1240.86 li
2609.68 1239.59 2610.69 1238.52 2611.96 1238.52 cv
2645.45 1238.52 li
2646.72 1238.52 2647.73 1239.59 2647.65 1240.86 cv
2644.08 1295.38 li
2643.95 1297.3 2642.36 1298.79 2640.44 1298.79 cv
cp
1 1 1 rgb
f
2644.97 1253.3 mo
2642.44 1293.88 li
2642.33 1295.66 2640.91 1297.05 2639.21 1297.05 cv
2618.24 1297.05 li
2616.53 1297.05 2615.11 1295.66 2615.01 1293.87 cv
2612.63 1254.29 li
2616.91 1252.77 2622.83 1251.88 2628.67 1254.96 cv
2634.21 1257.87 2641.88 1254.8 2644.97 1253.3 cv
cp
.501961 .615686 .94902 rgb
f
2661 1267.93 mo
2661 1267.93 2697.76 1250.23 2709.79 1243.48 cv
2722.38 1236.41 2737.56 1227.03 2757.43 1248.66 cv
2751.3 1272.42 2721.93 1285.96 2660.45 1285.02 cv
2661.5 1276.18 2661 1267.93 2661 1267.93 cv
cp
.952941 .478431 .313726 rgb
f
2661 1267.93 mo
2653.59 1264.61 2652.4 1251.33 2646.71 1254.33 cv
2646.42 1260.34 2646.18 1262.8 2646.03 1266.06 cv
2645.85 1270.35 2618.71 1267.6 2611.05 1265.48 cv
2604.95 1271.39 2605.05 1278.36 2610.28 1287.18 cv
2614.57 1294.42 2629.72 1303.5 2660.45 1285.02 cv
2662.93 1274.91 2661 1267.93 2661 1267.93 cv
cp
f
2492.24 1288.64 mo
2492.24 1288.64 2549.64 1245 2563.21 1242.52 cv
2569.24 1241.43 2575.76 1255.02 2581.75 1270.12 cv
2562.01 1287.12 2533.24 1300.3 2494.31 1305.61 cv
2493.99 1296.71 2492.24 1288.64 2492.24 1288.64 cv
cp
f
2482.91 1317.6 mo
2487.52 1313.08 2490.32 1305.8 2497.2 1305.18 cv
2500.38 1293.46 li
2495.2 1287.75 li
2474.88 1284.12 2453.32 1300.56 2451.38 1302.36 cv
2446.34 1307.05 2443.68 1308.93 2444 1309.95 cv
2444.32 1310.96 2447.73 1316.29 2455.28 1309.71 cv
2464.76 1301.46 2466.61 1314.29 2442.59 1326.72 cv
2436.57 1329.83 2430.86 1340.75 2437.2 1340.66 cv
2444.17 1340.55 2461.92 1338.17 2482.91 1317.6 cv
cp
f
2953.59 1368.47 mo
2914.84 1368.47 li
2872.77 1368.47 2838.67 1334.37 2838.67 1292.3 cv
2838.67 1186.45 li
2838.67 1144.38 2872.77 1110.28 2914.84 1110.28 cv
2953.59 1110.28 li
2995.66 1110.28 3029.76 1144.38 3029.76 1186.45 cv
3029.76 1292.3 li
3029.76 1334.37 2995.66 1368.47 2953.59 1368.47 cv
cp
.501961 .615686 .94902 rgb
f
3028.97 1166.25 mo
2839.46 1166.25 li
2836 1166.25 2833.2 1163.45 2833.2 1159.99 cv
2833.2 1159.99 li
2833.2 1156.53 2836 1153.73 2839.46 1153.73 cv
3028.97 1153.73 li
3032.42 1153.73 3035.23 1156.53 3035.23 1159.99 cv
3035.23 1159.99 li
3035.23 1163.45 3032.42 1166.25 3028.97 1166.25 cv
cp
.462745 .560784 .858824 rgb
f
3028.97 1325.01 mo
2839.46 1325.01 li
2836 1325.01 2833.2 1322.21 2833.2 1318.76 cv
2833.2 1318.76 li
2833.2 1315.3 2836 1312.5 2839.46 1312.5 cv
3028.97 1312.5 li
3032.42 1312.5 3035.23 1315.3 3035.23 1318.76 cv
3035.23 1318.76 li
3035.23 1322.21 3032.42 1325.01 3028.97 1325.01 cv
cp
f
2960 1376.16 mo
2908.43 1376.16 li
2908.43 1366.59 li
2960 1366.59 li
2960 1376.16 li
cp
.501961 .615686 .94902 rgb
f
2999.31 1729.41 mo
2871.64 1729.41 li
2854.92 1729.41 2841.37 1715.86 2841.37 1699.14 cv
2841.37 1406.43 li
2841.37 1389.72 2854.92 1376.17 2871.64 1376.17 cv
2999.31 1376.17 li
3016.02 1376.17 3029.57 1389.72 3029.57 1406.43 cv
3029.57 1699.14 li
3029.57 1715.86 3016.02 1729.41 2999.31 1729.41 cv
cp
.705882 .760784 .941176 rgb
f
2991.85 1543.53 mo
2880.54 1543.53 li
2871.16 1543.53 2863.55 1535.92 2863.55 1526.54 cv
2863.55 1431.37 li
2863.55 1421.99 2871.16 1414.38 2880.54 1414.38 cv
2991.85 1414.38 li
3001.24 1414.38 3008.84 1421.99 3008.84 1431.37 cv
3008.84 1526.54 li
3008.84 1535.92 3001.24 1543.53 2991.85 1543.53 cv
cp
.462745 .560784 .858824 rgb
f
2998.54 1432.48 mo
2998.54 1525.43 li
2998.54 1530.37 2994.54 1534.37 2989.6 1534.37 cv
2882.79 1534.37 li
2877.85 1534.37 2873.85 1530.37 2873.85 1525.43 cv
2873.85 1432.48 li
2873.85 1427.54 2877.85 1423.54 2882.79 1423.54 cv
2989.6 1423.54 li
2994.54 1423.54 2998.54 1427.54 2998.54 1432.48 cv
cp
.705882 .760784 .941176 rgb
f
2918.29 1458.16 mo
2918.29 1464.65 2913.03 1469.91 2906.53 1469.91 cv
2900.04 1469.91 2894.78 1464.65 2894.78 1458.16 cv
2894.78 1451.67 2900.04 1446.4 2906.53 1446.4 cv
2913.03 1446.4 2918.29 1451.67 2918.29 1458.16 cv
cp
.0313726 .027451 .301961 rgb
f
2906.53 1480.31 mo
2906.53 1480.31 li
2904.13 1480.31 2902.18 1478.36 2902.18 1475.96 cv
2902.18 1465.35 li
2902.18 1462.95 2904.13 1461 2906.53 1461 cv
2906.53 1461 li
2908.94 1461 2910.89 1462.95 2910.89 1465.35 cv
2910.89 1475.96 li
2910.89 1478.36 2908.94 1480.31 2906.53 1480.31 cv
cp
f
2911.91 1433.9 mo
2911.91 1448.28 li
2911.91 1450.65 2909.98 1452.58 2907.61 1452.58 cv
2905.47 1452.58 li
2903.09 1452.58 2901.16 1450.65 2901.16 1448.28 cv
2901.16 1433.9 li
2901.16 1431.52 2903.09 1429.6 2905.47 1429.6 cv
2907.61 1429.6 li
2909.98 1429.6 2911.91 1431.52 2911.91 1433.9 cv
cp
1 1 1 rgb
f
2911.91 1433.9 mo
2911.91 1439.15 li
2901.16 1439.15 li
2901.16 1433.9 li
2901.16 1431.52 2903.09 1429.6 2905.47 1429.6 cv
2907.61 1429.6 li
2909.98 1429.6 2911.91 1431.52 2911.91 1433.9 cv
cp
.992157 .443137 .4 rgb
f
2969.68 1458.16 mo
2969.68 1464.65 2964.42 1469.91 2957.93 1469.91 cv
2951.44 1469.91 2946.17 1464.65 2946.17 1458.16 cv
2946.17 1451.67 2951.44 1446.4 2957.93 1446.4 cv
2964.42 1446.4 2969.68 1451.67 2969.68 1458.16 cv
cp
.0313726 .027451 .301961 rgb
f
2957.93 1480.31 mo
2957.93 1480.31 li
2955.52 1480.31 2953.58 1478.36 2953.58 1475.96 cv
2953.58 1465.35 li
2953.58 1462.95 2955.52 1461 2957.93 1461 cv
2957.93 1461 li
2960.33 1461 2962.28 1462.95 2962.28 1465.35 cv
2962.28 1475.96 li
2962.28 1478.36 2960.33 1480.31 2957.93 1480.31 cv
cp
f
2963.3 1433.9 mo
2963.3 1448.28 li
2963.3 1450.65 2961.37 1452.58 2959 1452.58 cv
2956.86 1452.58 li
2954.49 1452.58 2952.56 1450.65 2952.56 1448.28 cv
2952.56 1433.9 li
2952.56 1431.52 2954.49 1429.6 2956.86 1429.6 cv
2959 1429.6 li
2961.37 1429.6 2963.3 1431.52 2963.3 1433.9 cv
cp
1 1 1 rgb
f
2963.3 1433.9 mo
2963.3 1439.15 li
2952.56 1439.15 li
2952.56 1433.9 li
2952.56 1431.52 2954.49 1429.6 2956.86 1429.6 cv
2959 1429.6 li
2961.37 1429.6 2963.3 1431.52 2963.3 1433.9 cv
cp
.501961 .615686 .94902 rgb
f
2998.54 1525.43 mo
2998.54 1530.37 2994.54 1534.37 2989.6 1534.37 cv
2882.79 1534.37 li
2877.85 1534.37 2873.85 1530.37 2873.85 1525.43 cv
2998.54 1525.43 li
cp
.0313726 .027451 .301961 rgb
f
3003.39 1581.62 mo
2867.98 1581.62 li
2864.92 1581.62 2862.45 1579.14 2862.45 1576.09 cv
2862.45 1576.09 li
2862.45 1573.03 2864.92 1570.55 2867.98 1570.55 cv
3003.39 1570.55 li
3006.45 1570.55 3008.93 1573.03 3008.93 1576.09 cv
3008.93 1576.09 li
3008.93 1579.14 3006.45 1581.62 3003.39 1581.62 cv
cp
.462745 .560784 .858824 rgb
f
2907.22 1284.51 mo
2909.84 1287.13 2909.84 1291.37 2907.22 1293.98 cv
2904.61 1296.6 2900.37 1296.6 2897.75 1293.98 cv
2895.14 1291.37 2895.14 1287.13 2897.75 1284.51 cv
2900.37 1281.9 2904.61 1281.9 2907.22 1284.51 cv
cp
.619608 .717647 1 rgb
f
2890.94 1260.51 mo
2889.52 1260.51 2888.1 1261.05 2887.02 1262.13 cv
2884.86 1264.3 2884.86 1267.81 2887.02 1269.97 cv
2888.1 1271.05 2889.52 1271.59 2890.94 1271.59 cv
2892.36 1271.59 2893.78 1271.05 2894.86 1269.97 cv
2897.02 1267.81 2897.02 1264.3 2894.86 1262.13 cv
2893.78 1261.05 2892.36 1260.51 2890.94 1260.51 cv
2890.94 1260.51 li
cp
2890.94 1262.69 mo
2891.84 1262.69 2892.68 1263.04 2893.32 1263.67 cv
2894.63 1264.99 2894.63 1267.12 2893.32 1268.43 cv
2892.68 1269.07 2891.84 1269.42 2890.94 1269.42 cv
2890.04 1269.42 2889.2 1269.07 2888.56 1268.43 cv
2887.25 1267.12 2887.25 1264.99 2888.56 1263.67 cv
2889.2 1263.04 2890.04 1262.69 2890.94 1262.69 cv
2890.94 1262.69 li
cp
f
2948.82 1252.27 mo
2951.43 1254.89 2951.43 1259.13 2948.82 1261.74 cv
2946.2 1264.36 2941.96 1264.36 2939.34 1261.74 cv
2936.73 1259.13 2936.73 1254.89 2939.34 1252.27 cv
2941.96 1249.66 2946.2 1249.66 2948.82 1252.27 cv
cp
f
2972.1 1202.56 mo
2974.72 1205.18 2974.72 1209.42 2972.1 1212.03 cv
2969.49 1214.65 2965.25 1214.65 2962.63 1212.03 cv
2960.02 1209.42 2960.02 1205.18 2962.63 1202.56 cv
2965.25 1199.95 2969.49 1199.95 2972.1 1202.56 cv
cp
f
2954.41 1349.42 mo
2956.25 1351.26 2956.25 1354.24 2954.41 1356.08 cv
2952.57 1357.92 2949.59 1357.92 2947.75 1356.08 cv
2945.91 1354.24 2945.91 1351.26 2947.75 1349.42 cv
2949.59 1347.58 2952.57 1347.58 2954.41 1349.42 cv
cp
f
2964.24 1331.81 mo
2966.08 1333.65 2966.08 1336.63 2964.24 1338.47 cv
2962.4 1340.31 2959.42 1340.31 2957.58 1338.47 cv
2955.74 1336.63 2955.74 1333.65 2957.58 1331.81 cv
2959.42 1329.97 2962.4 1329.97 2964.24 1331.81 cv
cp
f
2912.93 1138.23 mo
2914.77 1140.07 2914.77 1143.06 2912.93 1144.9 cv
2911.09 1146.74 2908.11 1146.74 2906.27 1144.9 cv
2904.42 1143.06 2904.42 1140.07 2906.27 1138.23 cv
2908.11 1136.39 2911.09 1136.39 2912.93 1138.23 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Colleagues making decision at meeting.eps)
%%CreationDate: 8/1/2020 3:24 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6=`Z@A[NO_q';>Fk!FhX5O9B"s9cu^mJ-m\-@OP1ZHgbl;3:-?kUVe,>n@KnbrT)SrN]<&BgqNMAI-2S3ZNd?XC<-Ij%FX4,
%qe6.tPq1J/Q#"OM1(OmOjD<W9O5DbS*smSSmgk+>L-Qju0XtWN5DDuW(d.TJiF/]m,O"6t5u0TUN\N23,*@tZI>e%Y`;^,#c]RVJ
%L_rpg'\OgH3_KrSMG>"o5Obr:&q:-^E5Mc4*0S&U1./];!:Q`,iF\cJ,RPeS_P[Tf^uJpRo`pqR=b#)7RZ1JRPqYU8!Ts,aPNhap
%#2Oj%iFh<IBX9f&5LkVT'T=%4L#!a"MAbAT^otu^Cem:qbKk\<q-SXNpRcs8a++$_pRhKZo=t8%qhq##5`q6B:(:k;rZO<"6XouP
%]+&4+)<+SHV-Z8"N-Rao>nFI91G?rLaM/,h_3*Qo5R9WZnYk@*MhJt*9e^K,T.^m;"@M^@-P-US6s3?XpoR?iShQB7]L,L8J^`,U
%hZ"89b9%)eI-b5.;/J3:W1.dV$BU6$^Vs=_?]lF=#i8[*;&J:$@@@/k(Ort2%@h_lVLX6=iG@3q`sG+L%L()9"oa.)bi%Z7<$oPn
%6/FALKiF(%G_1Yo/<tW)J?qHSpDMu)Lqt0CTE3(*#Q40Zp_SE?:p=<Z.h=9?q4J'sUI+Y2qr<@Ui/Vd:MDgAl^U%=9BYY0hs"FF8
%0u:Uas,S*_+NALqN-TdN]4N]"bieS&efiuL\<A4/E+WeY2+)m;!0/%^n(cC2(ZlV!@Q*1!@=DlrOl1rm(j:;r[k%/TXB?Rh^r%?b
%c6hXmQTY&4/_qRSKE2L>+q3g:]>;L7"omu,s*F26`3/WZNp)(K\EMj2kR0KX_r9cd#lKVWf[""$?bZX>$%[R<n.>LV&d4iC^M(^(
%p6?a"7L[BFK[5-)i8]jV%]:X%A#Tt.0hrUR#AXgg#[[4Wn)1Y\php:W'EKkA^qXOs]Gug7?f4S]`t3n<JA2s&jGX"U?o0j1"JfH.
%[[Riq.J"2$Ar_IT"2Q2r:q*)H8V*/_0iV<ui!VoLJ,hY8><e#[r/IDs*'"+VD3TD*?b@55Y]T#A*0#QabJW:tSl.NJl66-L1b!uO
%HU,pkisrd%r;!,SMp)1[J&?[2q%U*,:^C/&0kuig5!<ApjlaW-A.<,VT`klL!KNheq3]j<^dj-,"p+,hm*M,D_XN-6Ya>Wlf)XP,
%+rTBh$i@_Ijo\!11amsSEFm?,R[VVe6\?Y>lOu>k>]9j6%;pU`<+$INjIrer6+/0t'0oF!"8_2r@,?.'U\Ai10cJt00Ye0[l#8k5
%DY.(Z3:+CYpnZM[D\dnS5TT>D+XiGP+`?YZ9_.cf<>@NJnKJ:@2R?;W=Sd:Q(J$1@H^)Jd.QeJV?JpK]H,Yo!dg&`V3!ED65Z+lk
%nllQf'0V(tV[q:FJu2Rc;u[l1[X3aeIZ)(B5,"Zp+B*L]@pkN?lEgJS?raUA9U66.HZ16=[7<d'JK,IqK6-Zn`s"cLMd_:.^q^X&
%OD_P)C$GAs&*p\ni0I*2$fRY+2C-)IqoamJi#=ABF8\!Rol98P`hOc2m>oY6$m)t\9rWSW2C3lNhuXA:'ST37[!TU]UPLYR,%0o+
%a4&!pph0F*g6LTic0t6Eg'un"k]H_TDY+l3S8kZ[mrtWlKk=hB`3o^Li7b_b)OVYoJ+$)DYi-O=$_;CM#pcd:(U,G@LO;h22NI_G
%!e.B$[W"U%W#l:)r7Gj#r]ia-O6rW+12`-qA>P8_QP!e&a9)H%;/6sd._@#OV_b>1"27X%d&%<MQ6obsSSs:'4he-Y.P7/;$5E"j
%".5jb6qR8m+ZCb6dloH:Zk9+%FtdTc_TAP'gHmNcNR`83WjJ]!Db*D*)fH*3\@f2rU'Q''6rDZc6UY@X1hOMVR'hVndEiLEJha<)
%IYT;I5?;5aOdQ5SD2Z$kjG[ge7Fl6B_$C@@mGXg"5QMMYKOBCj#cK;CDL&p+ajGd;)934q\br1!0ZK"D!5(=dCH1$pFutK'QhTi5
%Hd?Tug$Lr7^PYQf$4#/Nn;?S]hoE2nL^rfX]A7Pq&4HQT[G/<:He30(g?i1XIra-nlncG!(Gqq'8ErOgG.UM3,Z,u.-PlrTglAh(
%bD>Y/fb&U`!M?%uiS&[?IBpO,O$FtJ(m2QV=RZ=B+W<q,gJe7qU>$b?b=du^1a2@&DMFkr"DtV\^lK(h_V=J2BEkfY&[2m+hA0:F
%Z9oUCG7a4bqCjoE"g<4#D.,k/L4,<NC?*2ib]ZKAC=.--8GR[+1/WR!#AH>D[^hR.<4e7VGfWt1i3bR@gjX$i$j>'``&j,^caDLC
%.erLWr!*9a^qZH"'VZu![bTRt1AHn35(c'.rq[&]h\#Vlrd+dK8[L3`5,).,I)E(t0_i.B6IJ=bkj>]OEdB_0iSVF>NhV4+3]Z3/
%4q>Vc'`/P%h\KP#Tq]\41JkNtkihQM[Mch.i\R%kj5Z(R<aS,skQmF?I-;*'_00+SrQ9rR<Y0$;Tt\ZC8PX]m^q[TKk,q8VKP9!<
%A`40.\F'r\ScbgK1_C4kh8V`pY!b8E[qPaci"/;m+h0ZTFBZ[GY7pTNhOW8X37XYp7`6"[@em;j&n)gZdjiJC\.PEUDY5QtD9hAl
%6+mqnR+pE4AOj#_6f.8Ts-7rP#Sf;q4llP_Z5cI0HcWr'[J_0;(YV62430BJUi*r&]\c*U"W6\%OEYs\RB]$9/onaOKP6A5pPjAR
%3k"(bV#A$tIc#CbDle.DIP>CDCJW"_(=Rj>mP[3'(1D6Z05Smr6a5VIh<p4KZK)j9b;%-`>'a\6Z""St*SAji<h62^euT&Y;*Lbd
%^m@AV9AFp8A`'Y+>)rKpO]"NcB[_9Af@7W#6FMr:m3?0=#T86U&cNg`1*jb\+"#`taaUo>G4\NA`:sU?M8U"Q?2]!<kdN`9,c4'G
%d5`C"I&sh:^5nn'6NkC?_O:1krQu&<poShbD/ite!?GVT^*1MB"DtUfVTJKK5Q(ZNkV1Vl*!kS<>]<<u9<p\l7c-44Zk#@eFRT<;
%rWBeIlBbKmCh^X%Ja5;>Fi5_q?eO[T`JleU`rro]\e&,ZZ4FV7"#'PeMgkBS#@@+TQ[Re'+*dVE$G:=d(,k[!7:DSYb<GF$_]J#*
%n=h<"Z9@IOII_c/-@f(Y*1ef(62GJ1\[l5_4!.o,Fsg>gnrV6W-.CI0YQEpZK`-H:4-<%Co*8<hbepS*=Fm'"[ej7u]:IdWD,72L
%p8:p'Y8D38/&rYGb'W6[)`[2qEr6EF3U(XlG$[J/bMBjLh"D`T:N?5;V`<q.fDQ"Nq\,L.Acd_%dflpGaF(6#?3ANiE.g;Z.`*5e
%"j`kL8&3#=LcqC<Sj*qsYlBF?;2)QuWhN*$f2k"Yb3f35\&"d^Z+ghCl^n4Oh4ddQGDbgL^"@dcn,CstSWX$[X/:Lnm5nMdpF&"o
%W85`7p$Oaf8g(`OR[CtB5S5$T]S8'a\le%-O790JiNq9JX#hTK%\#/ABFXM*i5i_56r*5pJ,1DKo,u]g5LA\]fQQ$/42eei0=-ZM
%nbFZXVuR_(9<P!hV"GPV:-dpE?!!o\0)t9B>6f6\muY:s^R&d6g3Ee8pQ-ln^2AccK&a1%dSD&1p.+uH*SC=QIXcoDg,3a*%jJ*g
%IBh;QMkr=Z$dCTSVk'fQq@:R5I!9@DD].oKAaiF?gHf5Y07DW9Nq7r')3<P*)b",O.,*ED)^!/8Jm:mhmOQBQ&c=3u62P'aW`-7-
%+Q&/&\U=YWDA:4[/')p907NdJ\\3%=/`jLG+Q!Xi\?@%4%HY+'+Q)M)h4:<j>2Arg,KQo3OeOMGD,.1H9(H8WR9q0Q^Wq6)dSYB`
%Np'AcH\r?;a?GJkbeC!s(\@(063)DRQ+t@pYT;?4Bqdj)T/0s37]C0e[,2X:A$S;c:YSLrLn_I#fWNUD,+To1C:uL&!5YuZcUJYR
%r-h#M9%\Am82Y!YCGl<#K-2_ZRa%^dgMT[T&IuB>37m(]aDeo1a8Jg%e,1#!Cfe/m@-:VBc7?"@Gah`*8c-A&Jgoln<*O.M/LJ2u
%FnAt#q"XLsESF_c?iGumpNJSB_i<SVm//:M^Fm[9'm(pT;*F8(=8s(#A7Chgq#Ymh3m>"&?U<R%_%(?/5`UI,_Y4]J?TX*0hq[Sr
%g@9Md.ZV6;4Y<0PKPJB-[Yhf362d?2&EL7r/jU6Ke/%'d]/IQ*]S/,Q?QqNK0He=-)2)p*_iLPC>F$Uifsk>bP%*K60psD(n/8r%
%Rhb[6[V[qoIt(mmfkPO5j5Rk;i!+mrkq:*f$p2Q%\dK!k53eif:>:'#o32D_=K^D]-+sh;aNY3Yns1=,pE%V[r45\/r&#ph^M!c-
%lLH4_Jf]E+]9jtah7j%Fk<Ud+GQ-HirG=1n7/DY+^[2J;=gsrR30YQ`52g^XnGCfgWF*#:ZEqW"pG5So@RU3M+Rjr>;mPd:RW,c2
%T=710qdZF#+=Ubdi6r[g#+;^_p=)>A5qA-I3gnd#^`Odp%Gl!K7^F7uiX1S^D[S/4+%%"o;]G1IqU<1<H5#6pDn7O%LA`iX,94q\
%`eWqS'#bq,1u2keW_8I!'Of$=gD2,E-(@2fYDFO]3nk?b.&O%a"nBsC(^.44Ogt@uYf)=3j$+)%%%'F]S3f'(fTq>Ja0,f%i8aeB
%8P];s5g3:_eG=%f1a6)Q]C'hAb2&8bZcTE^SSE3Q'06T<X39J:-lY@0#+pO1!.0->-k%an&$cWg62"W+pb1]D,1MU"G6dan.,!>:
%K%$9J\R0EmGg.E,dGKAs+cp*Hk4WRcH-O1%'_S_H/`L9L$cCs!g/C&fm[n0L+cq5k48g$hi1Fqt/S"Rf*A6+2X2Gdg\:K-$;Ni.^
%,i93B!V_aqj,u($Q[B&afLrrljP*>Ah3WNgORH#8=aog`OKO&lg22cBd?*T)B\*a=)f?$(<\"2f'Fq?]HVpIp$FAG9)JucT1&i@7
%C8)tBm<V6o4+K)Q.%*n9b^MlG!p/(%5JF5(YWmS/B3]"0HaH<[FFLWLM_AE`ruFk*6G[*^&"WPDpX_%CC&`Wtr<j]&-,+dgJU#9o
%4oKqT"#SbM><KC0dX%f[!k\\KJ"8Fue*X?FrZVgWE4WjbC")9A"JYh)7GlLRL;pC.^gSK>2X:JF.N>-Tp@l$smunsI;kuKn&q%<4
%-%;hQZV>`;[1AMS?cX\3@=KH`0BXXXKH1X7_(Qq.^48->DVOIR)`dqDQ/bqfK(VNX^ZVji]/Co2RlGoV./*I%)pLD=Id&-T"/7[q
%P1ai=%A?=8T;o.Pf%N;fK:@F?WlBKp<b0#7mfiU6mb+eSb3nT*"hQZK^G'X"FXC\gX*k.Ym<dB$"M\C4L=hRDn6(u[b";sb9[g0-
%U`^h3Ss$C?B^Daiot;Of#^*WRLrR_b2d\bC&c2bE%29fU&WN@SH,&(%ha]Ns&WL(cR=.J5+49j5&ImWAMJ++UoCX:Gb[HG!,RQd5
%3?29l3?f(/S>9h?djN(N-StJ^a#Z,*!6%.MZ)dTM<9o?^i?]\l>FK)jGJ9nh*.7X!Z+f;,=9q+bQb*t?0!Fa,Y3taY=L'in=Yt]L
%A31msg#&m8p\4C\hERLELL@4NrOq#P@INZ5I=L])?KUVG+QOX5*PU?Np^j<>n*o]b^:hFnGPLkAh`nTfkPn9ehfh2#50P'*&"PiX
%hb],%?\[IQ6QrZQC!q1[a`HqBQiB(Y4MM,pB]+g)[I[\0Z%)F@452dYkh#Sl]8Fe/DsI1!QDi)uO7m%!gO-CF?JA#8s$jj5,qcD<
%?@RsTn/Z77^4FLC+o%[:B74^NRGR'-s2%j@I)BeX,gP-:[I-De)#&B.]=/T4O9Y:;p&\GHhTM6_4<$J=@_\JEnl-`raO$l0@Vtor
%//4u8rVbAeTfQB`D"VqHeTWDd9-\74AUF2s9FU7*OD(E.>F&XL(4J,obp`Pc/\eT&D3O;7P9Jd07`9OtM,1j]ar0024+s`E0B)0j
%%/g,69-=,,O4jjq+&NGE^>Vg[`1>LW#Vi`jUSAB^q'm/&(>_<'W?rm6>J;9*`NHBSPT*<2j>gQQ_1Aerl8Mu;neKVP\eII.M%DW5
%p4l#BN1Jr$-59lPV^.-o6uENj0f_^j%_UVhNFjXZ^d<-rNOOTW750HT!bRuuJ(jo3$*SX'D.,<gNsQfbA@FH\CgW>R#9=,>m]c-E
%;WJ*P)DKFE-4Q2e!TC17b/'*SX)4P]?mc5H%hJSq)8Gk`'"?be+,DUP/`Iemmc3#<$Pe'a48o<_*FSh>E=1)g@U!a#ZbXW[&X'kJ
%rMgHWK*,94hr6KADr@:r^JcHd$8Ps7I'M!cfqnHp&ngV.>2Pr>`YjqH/eu?d&GH-E\L?k6P`(-FbZ@Y)?T],._6j+a\L:!B[JRK_
%ha2Us^Jc`l$8VK`P^P1,?_M?1\L9Q%lY%Q:I*Z%3,`0&&3pJfgU7`Y#<@mF=Sr81W(V@CB^2#>nq`Eo6THNi+<rF@hBte%O%FSMH
%O;clDbHH>6(/fn=IO;ecM&Tf7,(Ac)[Q/qXFfHU+EaCHD*g=m>RMYp&f3j"qNJ8&Jr$l@Zr5-Vk[t5,V.>soRIX8'?@qYLeDEU:@
%E&m`<(N]p.fF,:(T\Bi8+Qs<aA\YF:+*ZiKO81@9Iqi;Pj!s8($9E4>\_f1s0j"/2i,;[1k#mXk<ZTK$h[4G+/<j-TZ:,Tce;Wf5
%0(C[q%Rb&cl@:U(4Z'B=ZhSLlIqKPtf<di,6SJ3rC\M?\HgM"J2^!X(GW<G<221Qd%$X3eTD8rq!;$4S+7i:t^Whg(c9=m"e,&^W
%OJ'F13$4@!O-sp*:"Z$;5N&m,oEDH/bT^\c9YEZZ%#K6ST:l>dn2i&fJ+kr#V$?pDU1%EEDt&#rd<HoPA3TbiJH5HVp\?$Wm^;pK
%I)4-YqZ4I&JPRBG\).30%$u^H(S@CB!$9_L@K8)C?mo"pTEH-UTq\A#r;=<Yrk%,2s3&agrq##srp)fJf:W*6oA>#r[t">=YCdEC
%;.+DJe"f.a<I@>2VZ_oI[=pe^5d:7i..ppJ^&J"ls7l3SOBOmK%]BPn\c7keW,.*=^K'$/<3uQ$5<tunrQ"s3oDdk*TTYC^qu6k.
%rhlCg-@"EK47O2Gi*YWba8Ju^/;Q&O>p&fJo]`>)^PJ2no!GXiYIG3rY[nm,IuIRl&9d_2#_fMD=!\+l7QIb;K0.C>HjV9Hf_"`!
%5i.6&77nTu+OKm=O-PtXBKT@gIoSEHJtf&Q&"BSRb$ib2):QjfE/Hj-1flqPpd!<"S<&C?J,Sr6CA""Dj0^hF5[-M%3\a(&CgojZ
%D!p!`A<Da26+\;n*Y=dC(,HT;kpDg-I6sl9U5)IM\aJK0KNr(J%$]H$qW-rY$AmZe`<'kf)b^b3CsV;o3SFN(pIeXG60$<=KK9eQ
%)K\aQ/(RF#]85UQ*maRab&mCP*T6B>+N`kV^\rT!GVB^$)8%g.+0(umFSuq1LrBO"gIEjRo4atSFr;&O$Ggje4+LQY)"9p;+ho@Y
%RP?d6'L-aD0=Tg\$3r`a83!K'R:['Q4,t>t%*V\*,h;BuO],Y!>S,_*L$Bm&%_rKbq5'W:-l>OtL@(C5[<BH^!/bYA`\A[7GR'U>
%)]27rmD5/N>eC2rk6.oTT>LM(/Iol<5-,?[foY?[.1_nh.@_7g7&L6ckcFippi1qV-pNB$/pYS^Su'M"RNh6CH[^L*`3,1SpII7^
%0gtt[:4?6crclT4b#Xu@#thRjGURBb_iIH\)XqkGq1&DApRhKZO8n_@?[i!h5QC-6^\m,A2h3"LT:c,j55rn.p^dE":PJiX"l,(6
%D*UO]Z2u+s0#+IO)D;/%5e$n&(lB1V;P"b;N>ORp)EU3-`)V%.-pWf<*0:M*cqR&\2h%aU.ar*Hg*1O:_Z^1Hj;=,"_iUI^#:]%m
%&K^0ChWZSIbQ8^AoKWbRSrclb4+,]D"^7-,]q%aP_u1A1IVP'6C;IIFZ6;B#P(jlM:C4'$-R%k7?2".)4F8"OA$S6?B2c]07F!7F
%D>Q-rc_N;rkC<j>/[p`Z-MW7e%!8+%^1so<pu0+;;[OVq':aYcfDoa&".K6]8>H`3Li]@MZscur^CgXB5YSGF+TOtj?Tacoh^N"e
%@Pf$&o;GA/*"I^gS,.hKctk3PK4a/_)#TM(/3%Rj#D9AXpc"_GMs)UWasoj,"SE^BBFoYe%J`bKMRWH"rfh&+s+16DofU)">f#+3
%E.O)-BD=PsW03?)X4X!rM,&OY1=QTF*A]\:0*2G1f1uEd`fq;B2IV=r2$en)GV0ILrg*cDRr^@&:BEMgII@i_;OL6,J=SQ($ADte
%If34PMOkB<>V-"pC_haN8JME8i_sLrn%"sPH!/?`S(Hg\\qeNIPfp=.#iVm74r7B"i+$heV6+\5`:&6G5`SW[VC\1R<iJ5]2[-ig
%UrVpkmFI5*P;Wq%%Ye\(RGdH9K*`E#[X!krBMb76Q4YZg7JP(pMW"da!Pd'q6Wsbn4WKC#r$lOe@gE:5Of00[A]+X9V,n60eF;IX
%>sX+XkV]<kD3c"KKp"fc%:I()0R%g+!TbaYO^JW]j-%co<,Tt5pu;*I5cV)nrPH^XJROiA+4Goa-T8CgN+X:j[o>D@K9Q#JbK<)V
%%eM\a4@OGS<3FQoSVoY(DW*U/L+*\N1/0!FVYGDi2ZPo>k7%H]5N;3YKE[?fFLa(E%XB4E$\f,O"aI%XS4K0F3\`2E;t0Ve#m:s,
%`O*^p;.pD8-`D&\e5l@W!Fpos[#?2l,6g<-aMHY_$ON%?V_90uf/"C]/&MP\)_mTA3,5D<-53%PBZ",Z%nr82DZhqk(8=`A'^]=Y
%!gG5E%fZQoloUllh"4buAC2nAULDrm0u_6=i"QG"XqI*.YCB,m>dVp1!F!dXI).%Grf7@W9d*B_1g'PF3UpV)474f+"'$$A0SaZC
%KolVLppa,o!(hlj,o-ghV%iPl[/5F_WsUO-TIc11(!<`8p?=bVF[4b0dYQ:1Jjs#;"?\-\plUj,U'k!)LjFnG5qd8-PADnXP`3W"
%Lm3Qj7405phHP9\+o\DRD/u_W1aOdiq@p%8Lg_!_),kj"NmbKP4n!(GH(Oc74O)9P+*!`PQX"-ge[-sH)a\?"#f:;></9\YXE]Bl
%MO]Qr#C,"`!XK_$lR_4\mI#K*\:SJ([TM]X^C_rb1fQ@@k>!GIQl`S1;J%p\=VFBLV7%+6[b!sRh5Ac(Z-\7mU!'fOm<S.P.r@(?
%Be*q&OU>/(-RE-%l_##0X[OkN:IKN6NO9'>DPo`S[Lj_*\/nWbOpl[iaQHi^?bIOlb;4^KS\S<k_HL[Z_;W;*7%?f;d=_Fo"i`aQ
%BL`)mJ>*@58L[YX$G>W^66I^e_Rn]OYi4IOljIj:2bX67,?s8LQScc&7WH>5>aP_Mrg5E3@*jcrS/&T^9k[>'&)U3W$>;4BhJkht
%;5"^E&@AW/Ytt1Mj!g0SUXj,BL]-1QJ\#g^,n9)[%]379,36<;9,?5b@k^)\n57V3dVQXBK['L`Gf3W'1H`3['IA_l0Q@N3VXI/P
%'cI/M!CiF`Hj%!j>r6*ZB8rcR(9'ZTrWXtjBaQH68Xn4E6*!^Ee"SXfMs0>3^s?&lKYlYSkW'IiF.^>SmX^ENJ)M>8\c9O$@HOmm
%X@n)'7C%;T3+/$#*b#NeCoK.se>t_N\()=SD8[le3KqRGN+n32a7Jf(8i&@s7qI_8,L:&^J(j*i0k2WpZOq[L&oe.=IKf"ef-V3b
%mE]9'!VsH\:a/<AP[#Hia(^T`W/5=V96/b8'\TVfFG*HN(6?]9INK"]/a2,Vh6)Oh53.>LMX<nn25$;ibK<a\pG86<IMrkpTEW!p
%LK.LiaL=J)+iK[aKu)qCPiZDHB;6%bSqU@*@&1J\2e?\goQ9<]YZhm%ig:BX^0fN_CF<3t.W$ORaAg&3qC![2c!FOZ?F5q3kn?[Y
%k@#SF/g&#gLHP[kM$?\.q&?T#h\0(-.E[ANb&\&+efOp>a"min!b0V-aU@'H33GA?[P9'F6d-?I)(sZM`4\(ELQLnt@_'X;bb.4C
%6;\*Ce8J_6n?Oq\"EGp+2WW$l_]]2,Kjt\;f]@+]V)+e"8jn)mc:D@`<2DZj]4HNrRk]7g)PX/td/E^Dh!UK0:"\G<"'#/.=pcR[
%C."M'`M'.0X.f.=6V=:1Pa_(W`e9k^i;oFnNE9Mm[s@KcLrqWR3ZaIL'B:OE@1C&=?!t898Es!"jX;sTE'(_4r4i;]pSd[+f8*5N
%ouii%YShNUlF](#L;.G19"-1cp(%mha#7[nQNB.p7aq?5AB$'+$)VNp:CtU`2,lqnd>cj\'[r"q"ZEA3bVWfEJ7*)iZirQVm8"OV
%a:eh0.X[mFTFWW:7Om+uX&5?1eZ<P`%J5YW^]Dr"#=HkRU=WQd/6o^Pd)%58D$%[GMa1Ji[%7WpdV:=4=:!KD?mH#[(F)4Z/0'N%
%3pMa'T$C/"riqG0<0nT*$:!1'T!d]r1+5(c^u6#E>_jU,Btg,l2B[tVKGXOLec$Z/YY%_t@M)&U]lPj\C1dW]79BR$?c0o)DXUkR
%\".s5!_/p4'`/Z0=KqF`(`"'1dLD.`%0[YG[/ofmc=Wd^E/Q81R1M>(E9IJdXlI/.Qb\:@:PM8@'#N$']#aD/IlnRr;m8.rgSFap
%QcB11/GkV6J`ci8P0'3Oj5mtWV(@2fg`"NXXmN)M*6oD[6;e"R.58%<,)7hiXI:Xr)cV:ie&Tth$K&9!=L'IjL<E5YDp)e=+h,]%
%%:QYAe;/>-JE8$[h_`L[^XA@HoG!:[-BLR&7LsaV#+QkG^u[Fm?Aej:V6Jg?2Z2DV`Wd@]%8I!h2SaUDZ]7.,>>P\GE#LoN$do'C
%H%)("E'lE%K>08?SuCZkjNK:qJlg(!JUeR,!@Vn(Co?`HIr+>0g%PmV(3(2li->Q;J<F>5)OQ_M%=KQoM&V1/qq_jN8VU"f_g\(L
%]V/b24;`$_S7AY_7;"/^%N_8cn=pG'G;5aSD4$:fYjC,>^me1"5Vdt`gJiZsTdok0.H'jjNbH6s)2&l?F#*XQ!CC#T?F/?6QrJWq
%88$,R%BrJ4:iqio-/UJr:kB'C+>`3"6Mi8)bD`)X"i;#\7"hFRq@u[6(f.2K9F4=O.LB5:LJY'&P3.oIPO0D[Nee[BI(!EU:;eZ@
%'eZR5i8HfAmTFqSk.C9me]=qcSUT6WY@sA+6pltEkP]C5=Z;5q7SSG4K+2qoO6e(=c_XpGR9oJR^pr&$0PhjWIj_4H8.GmA&M7b6
%$Z,+&ZrO6mO\)HJ^eHoZ7#eT7FtSj1J?P?)4986YM^X9Z_,DYQ^k?_j</+hQFGlZ-eEEB^KaL7O6>>B,[.*;`re$l>WB'6+/)VHL
%e#Hmb\P<<*Fj1>NZltGEC2B,Kc'%)s'6GXH_"@?4rH\;UJIPTlO46UVQrm"^>B?@W:QWRk\ZA,gVe<9(k473<;Ak1OfrI-lZ@Xg,
%8iFba.QjRB0p%j5GJpLTJfn`W5m+J/QhH=g@g$^UBnc6UGA:r]iJ6=pI;9#6JD`BsL(TatVlGNfDGrfX$Sjm\hGDId<*KkGD("6f
%<?2AH!RJ(!RuLT]]K\f(H+:iA&<oF&=Fe2iB.2.=#5$Df.E"fP9)Yc%=+/YO;bN.K298.@7Y89eU>\Fir^Bfl^bH%S=Qts=4.K38
%(V7,#4buuT+3J-Lbb&7*d",r[`&mUKQBH*\mD*[e17:$$T6e.]WOj.(s1T=NclZHPYkeHR^0(&H&58$Ae*"F;F?Nh\a20h<(/lq`
%0au7OimkA/'737sK/mkH'L+)*LX\nmhRtaO"HT]>N4SUhQ;FQ(R])`Oj8HjVo:N;1_lQqD'JCe_rqRprg#$fek-,aYb][S$h8[;J
%q9#=frrZZ5^aXD3p4Elf$@ZifUG)('nDWjTr%Z3KR8]j$Nl]Y$%Do$P0;!FW_.mPqk24nS1\gX!q3hW0N`,@^Kl,UiCa\/m2Y/dH
%]+.TO#Fc<KI[lEu5J#d:r<.Rd!&-jB-g^tB*3b^5<]h@,"i2S<'mr0:mF)Ltr5oF*SFb7c2#-#&1J\B]K)1.-Dr=]@r[mq[K-,(%
%-Q^P9H7b$Mb$l"h@uH"1M["lOpZ:J^aCAc/bI8BRA)TC+97)7,.7Z)PF][%O:\q;WcStuVhR8bubFEh"FfhLXh"`Mrb#"(kB+T12
%b^_Kd_Kpc<3HuF_R@b,+[p+@LcT`up1NaUmSFtba%JRbM+HO&hhVK[FjQ?ZY%faF?1n;FP/iSKE_'AiPi2N+Ge1hgaXdr2K8,,.?
%r=#?64b!XM&,LZ`@ffD&V$W`XCPr3`)5bM\f2Js4o9I@'bWJ#=d^;imP0&&F+_F,#chln+1RB)Oj=TH+UR6=e]O_;(NpH?/Tq;p9
%e=t\)j>Y_tJ-6n9i%mM?he.Z'6Fd_cS@<FCrKC-rRD6E(T73Zk;.om&E"r\JBC.q`oFB0l0kYN!76)iWcP#KRlZAZa^NX)>Ap![8
%oDf>fMWQ"mL!48jl=8a8mlEh`d?FT"17l[a10pp@><^XiIK!X>K),=`B&)qBVd-c2[Y!p&_p`$J1CPA6U/<T"%Ap+Jg$]p!?f47*
%?Cq8N(M(*@_g9U%50tmYrKQ&^R^KTP0t52jlai^@\]j/H;ED)<N;gpQo:MDlmWW.fDgR-T4/EGrbM@jPo28^"9:\f98<)DXfc;_8
%b^O^7M)c2g#K,opm"-S>lF"=@Dl/,GN;<I3gpr3c;qh3lK9+fLaY=08[(IY<P:Lj2R01_MFr1C`fQ'jr_c:)=pkkFj213:-q)X?m
%cAt)To@fSJ>dpoGR/8oDJU(F:46Ct[T4#B1oc!GN;$%,oVIhA=]89p(bOHGcELC.<W4to4Z.$l=(,(>5=Q0O3`K&ZrM2'Z>jXuE:
%P@kU]FaN\>SW<YD/<b&6Yj@RQM<-=R)(SZN:U/@,j;BIL-78*74\K9$pgFiJ8ic9@eIj<@f<'-:X-YJ,fT#A!#.pFS(pSG9Q,ar8
%-Tqatq>M^u]j;5AZ+!3TKsbf6Ff]XK0k9$7ncJ->p_4ZLHmNTnGkf4uMPl8Y[dQDbW@Le#@V'q!1ef`l7SCa31"psJ2b%F<jYOL4
%_`+@Z&jJ,UrKe`/`Ye\GS/Gg<<h&V-0n)#-Xn]0kP^<*]Ap^qsZ1*&\16u:i6fZ.,WFDrN/jmY4n9So`RGKi\%mJ@fF*_LV2X=Jo
%fGXe;h4o#+fY7G-N(fEOj.mSD6SMI)9uLSD;eD4>Pj4\'rRRO]?&t4Drnp/f'Xe.8VUu0P9uh0B?.3NTj3a+'3ieW?F^Mt,EAoj3
%<M-H^VT-Z5g[nmZ>>6d@M:$uXEQU\^f12^!_"e38@iEt)4VM[(^RL4J<7br/A`(bXf4*(m4$*BqLU!>23W@h31agTsQoUZ->Ks!P
%g24QGhM'33(O]c,o-B4UBCB]fN$h:pk3h>VcTHHIBBI=CkW-SAAg[T&U#l:=im9]l4s0X)nF9ptRW]_n?WiPI).0k%=R9>f%PQ.(
%m"b84kOe8[35%P(*=b7D4!4FBiCELAH8t/t7i&1YLFh"BkM"q#N$aiee9GLq<;fUYdsg!T^fZJVgN1R"rEsGU=Bm5>a6R3XK)>Bf
%b<$;bZA`jK*m;cE^U%,-41Ea7Gjhc.gD>qDkkaMrRQ2`_eoIVDYu[K\.I19s2R1!AHC*3#jM>ON?'Li0l/4B%V4fblK%W9Bpq86l
%O!JNh+0hds?T>X+>lkmXCQ.Qpg[d5X[WTkB(Udbl(U6[jk=3'@6aZ7;XKuZ&?<ecCWE7e`07N%sHdsq9f^I.lGP3s.41FsJ%1'uQ
%3K/Y4LUg3Y_ddsI3?g,e:IhE!)E:>T1Z>jPOLX>%,[MLn+o^gFoO"10;mQ5[[+jJFS:MO1F<6^+/SFLrf6(E1E^T$GjZV_DNV&q9
%j"fb::5uY0!9:@B9c7$*:qgrj]?)F%ShBY@Pr<K"4hOaHY4c'Rmi&S<GAcHN0lX`8P>6<YiD.#6=.a^)o3mu-hhIbUm^MAk9D?5#
%la^ZsO$8U\o5s5R=B\)<Bl='hGg:5EGFmQIA$ZD)^F=G_BB,];GSWF8\ne^>2qB^;^"HQQeQYU=KAOY<ZWAefa0><EqV(MnD!>G:
%nA[<SV8@JnG;cRlI(/RT4(%;7)"rpi@/jZgFofDRrE"0Gs.jQ$q9-;:dXOVR"9+TN9DZ]*l>>JKZ_%^1:9;`+P0=F=kLnIB^qIWa
%%!7;O2"5d!Z3K^,qD];ug#%D7nCp[A)U4cU?fL4si5`f`/7cDop]-\CGFEZ/:6)*8d+O'#(qOpYV]k'99S_i)R1;:`NbLJ%(H$r*
%g$E/B``o^'g[98mps\>\7N@F^.MD?fPp1p@[iT85lHMk8BH'E)it%HSj#Ig1`pK;ue8WCYoD@`g1,+N-.+/^(4&FU8<pjG;V:$W4
%T$;ptO3+/t=TA<k,AsNO#3#[C]Gf*uDC=u?I.'&o7[V$7NubhFNrHq=,#L%'5^]DcM$Kb68b<rL3<83_Hp/g:6J5i,.$q9g7uc<I
%`DPgdb^)+bI<W^qRji`4Rf2Fl=*s?*0ck\M++JGUhbMt+L[7U\dBT<KiP"qVo@A;<1-#^IPHNn*Ps!0r?BSCQNcMH$GR7Lq3U'<j
%.CVB#80tI<QW.O:;,-!Q="Zp9nG&ul;Y6QXUI"3[h0+UFG".*U)LHlMUkAG@5Fq7*]Vk5Tn%.`o/)JHONs?bpq"8Hf3M6)Fb\O(h
%b"SbB'7e2NXrP8o3cL5*eu.!'Cq!EWc'e$5SQrOB7H_rG*`)4cY*[F.hCe,>Y9hlJB4;?troP(kkPL:e6c"*C5o5Qo]m/Ln(u,g/
%Ppp"W')%MufH#;jQL.`b9_%5KI9HJig8U5gI\&.QWmm\`hodB?,KK;eltW%<bA"TeUO;[_cB^]S7I&)\$XB5K$'Xt^hWVYCokoWI
%\ZPEjT:\6[hOXf[4:[$WIsPO];%FHjblBj5oqH=u4"big:EPpH5B_CAlt<VjNLPCTnfr4/>re\K]rQ6#s)`B"2I0UJNh:A-cXl(6
%P'cj*.Sn'PX7DZ#=K?uoDQ9"$ca.A-qDu=0?FmK/=Fi;8=5pYU!9UlYN7_o(Dq.o^"[A`hgR'p")dV9ie\-XtVI&oG>4pL)IF>oi
%cd#"]OZIAZ'=LNnIG/Po381j=S'9?,io[LpH@8.<NWuuOf+\2OAM8=SgU6*,md-?f#_9HY^NXVa*b0uF40"doha^9l+86MJmHFOt
%E7o\Z^6t`,\X/f:_okt$p5%]+mUMu8Oa:iR''/($DngPfGA5+HH1:e*WUnh952/lefQ6bjs7lNIRNu7E(QS`MGr`H.ZsIXQlPD3b
%@i0V'i=XOS"afUMp7mY;VW[(gh^mO[d:W9ikBsUkb-SSDfKXV-I@@TaF1Lt&VbV1!nAj!m*M8Utf<(fO[G&4Zgf@XDUK)*MY,8Z.
%9Y4'sTA&@O)=KsumiS+d[ZB^4DP-8`kfahiW[EiF@[K<YFb?O:G.2L95O/fjVnr+8+BX)re1Jr>!DR%:i:ZlD=7qSkHc#kQog@(!
%U]0p\ii,/V\q#P"8#4ikJ(1*]UQ<NDq.(&G$p0*r>WOp=5:60p3.Dqf50WrCaETpAN_YZ$UX<kME&P/Yimr,+l@0ka]tP0.(%k8B
%ZVp:Qm'W"sPCTiGRT/Ut[gD<;c2a6XfNU-/Gur"F'Gg<Pe>_WmQ>/IT7G<4CNW5']`HJ\KB:ECkHpQIo:Ck#%?&>CF17!*nHfXXl
%r_fmg\nkb,f'+%(A$ZWKrmn;%NjSW<+]55"lo8a3!fnRo4`eGjc'!-m@9eFJTGQ`7n.4Iio\b;i-[G1;R1-i!SZ1A0fB79_\t,hW
%1^H;L6H@]7i;CFar"J\[.%"aC1V%D93%120-[;f[HUuGS#+R'K8.W$39.-+]CTTmTfU3^!!sdg?Nk'IanEd7bbkkP;Nk$e2F-t^+
%)=VoI*c)8_0UB+RLZe_d#tC7#KMn)EA2"Z)`dgE=H9?Ac(!,TEd+;D_op(t6(4`*/Ui3)8PH2%=o/N;"Q&b;q"nFBiS#;i"IC[D8
%6_eU`5&'m7l0+K:'/]#B%MFc?O.ntf4"4\-Qog$_gR^IE.gCLHA$0DkN7n)\+_I?Yq@G[!&@mn'k4=>m[5hn9FUjnM_]]!^RngI2
%3I(n8Us5"n(&Ni7o7@2,a8lS@K;c-`*%1E<5D;59MqH7A/7OnK>s2LT#/_m@fu%#%r)+L9Vt_D_m.Z=MVdA`#9/onu!!0XHbKe.i
%0p$@)fDH%7.fuY&2j)ks.Pt)BJA^!T!MoqlNI(DjhC(Y6[N[Ta*KYm\=b)Ogq3B;YL#RmPJNVFlUP6.Fab_!:CA-dEgKNan1BWo3
%)Za>R_3[2`J/U/1@n5@b4Oh`qZ`h`s>g#D:?ta%YOuTQ805GUlqMHWj64p6jllpPN7,]*M\K*Y^:gjFD16IQ?_8Gcl$Jl2R92h<6
%-TS,*X&UpYTglCKA>"NCf#fY=1<]9FI\C(c>7BuTQ_>apiLA-)<u1)%]5aYQ2<sS[XUJ0BGDcKSW<I(&:,ls5W)]LSms>j'3N0;B
%q;@Tl$G?]u*UZ3`W[NWTSD"3T+mut*Kk`0O8'SG=THXWk=*T!>0MiVn/O_U-3ZO)3ZV"&6?d\Oi.hB&O93V^,oK`PDQYFt!j@XFU
%5.GHm`KRk?SNO5To?W&@#jUHTmiq&j6`?"kW$R%+Q7N"<!(SD7F>'4,E<W9Q;fpA8]IH4lq(<[@E=#SML':i]9UpQ.=#F-Zocn6K
%&aDAR&,I!55.Q+7VB#lGjj?4E&Q_bhG+1&4>O2&i&Sf"'c&(E`<!Ea9\ELOfT,c$A]a,\9'Ma]bjIo>oN/CGMRmlA%[0:*gXn_<^
%k;dgdQcXXHp%mc=(@"P(:mO@X_/Ooh*l=J"!n?D#mtDgoje6"/9Lb:l/1:n6=a!.=Xb\TP=Ee3]:`jS&q>TSO(2E3YD8]1Vgj&lW
%n]=%MC2G,fB$G"QKA$[d-&]hCG_%pnVu^\^<YFG=iHoVkdL`Eo8b4c'5%-FmJ(AE9^aG@G0%-QWKS)<[3@21E5l'/;W0mm?=Y(7m
%'Rc1`+B/jR'k/DP:h;SHDK[L\$H"k9(2D!AmM8(tpKWp/eJeTJBMN*a`DFg<,/@Dm#hULnQV%o:cc0Ub<#UNV&fD0oin>WNY`U3f
%)Q^Xtn7G('EeI(EQ<,iHBHVTsE:"b'.R!/bRqsGGPZIuQ&EbSOYCh,)34"CqdgmWPGoDP8S,C@l5tq,sgb[gYb>YQ0Zs$3e.mApr
%*47`eV`jt.\p,\N>/ZX8=<?4SY?s90WIXQg<i(-gpQQt-`)JJ">:#!T@jOe4pkECQG-.BV8`r%Xrm:uFe8J#OT=3&1j#PLt)VjJF
%]_s;No^8sF`KZuYk7T/#VoqJT4+*$V'jq!.<[T34Vh<_hk$%1%:UJNBOF1&S*?]`X'NTU-('l5T'q_qTXnm_Yd4CZ]r9R7-RSR;!
%#fW]SJX"Qc6F8Qb0\[6JYD5cbr/$'H3ak+54EWQbknNkKlT&9TSu'G2d?0`1^arfI3Q7K1E_fVpV\S/hi4KAda/n$XALned;g.-7
%$(\Ol1T]TK"f>nq*bR5%=o8<1`ubcc`rgfA@'3`d$ieu_Yno>TVE3loZGM=uLt=Dp&>b<dlUfXO.0omH:gkVD6+GRn7]\BKS2\9a
%nm9>U<o@]KcPQrtr#l'HHTVOHo(Gj_Fs,t,H0>dL7A<uleTi-Z^K,k'0puo+_^CQuYQ,(hn=q1,TTVM:MGS_TmT!O&._fko$>mt[
%$__`s:d]B3!,CjM;\q^d==g<Q<8,hHC-l,I-m<X%dl_s9Tb`D-W:gHbW.;`4!BI*kWQr!hF**$I,"'uA<<;C&M__HT!Z_p.!b-6h
%f0U'!F=hh0:ld>l*)tKn@fTk<'oC/e.>grqOjXfc.hUt'1S8n-!(L)aYqo9rb-lYfNQ.FS,,W]<r-_!ZC_W=mHQ;d"U*BcEISMs.
%!Na6II^>$PTcp'<$8[R%1Oq1P;dMdDhXpM9$.n04Ean>k\<$\(h?%dn:@-"76*prAOGoOM+3Yjjn`!IW82*.:5mQRJTjS/Jr#tgT
%F\-Tb(uq'?YS[j8mUX0m&Ok7f!LWENLtpte:JKhnE$;O0]R:9A.1-Z94%o*r^8Z^f(?k22*'AdSO$F?2]4O3?Mh$a!lMJlDLPO(q
%aI.6U@iE;/Eas]*9C/mO1FqDA938otns($M*D(46+ai3ZQ8r:`?CpHO%la1na[Mku8A\I0L4CH=7ro1+7V8DhCDoog$lt3B6C[a>
%E=NkA*Gl_R*0Lq(eYF#5'k;88pZ?[14pkK,U%%uBHXR;`c!SHQ:Nb)Q@=q1#?njgI\:Pu(!736XH&SAt82%4^Z7i!bD[V(-^#m<*
%)dIMTo$:l>841b]ggM"=Y_<ZW$KQQYcRGqL**;"9ro(pW%hLBMmt4iW4G?+,IX*]b5?[%gUs!gC,C5FZVJ[?>lEk0cVKd!0,HiO)
%-Kde5Ml:qQ*"+=fI%CL_9<O6eoG6m!K:";]M6M93>JL7-Esbk-ReUm/[A:cs$A;j'E4#-ad`1#dSL6N)bo)t,*m'W!0Bm3`ZU*nO
%]DrtqAcQ/!>CC<!;XX\*NV>6ZfeiM12guS@o>G.Vm8Y^B#8!*-r41ggnl#nqJ14bl^R#f@LY44VOXTRuE]kM1?u,h4Bi0%]a^U0o
%6PD43BQ35]VDm?XlV(knSBKC0.4Qf1B&+j@,'h`\`+VRa6.(p%BM[#$!upE;WiE%oPH6UY77`W*`42(G.V,<S;\VlAWL@;3!"N?!
%@[1@r;eHGIWmnQ;.#^_3j^<k?D!T?D%quO6AuS;)A8S8l"JRmrWuHBO*("QQAK$KWd5i6j<78"[qKPs:-.4E99O":$#B_Ca-daaZ
%5+P)W;B$jL:qEbq[#$3=+\F>3\'q-P*f8C8*m;*ia'5VoagB9?%mtJejHo$dA_c)3bhR]:&_q*G,H*U+)oFE69)6dd:^JC+*1/LE
%Gq`FQ,Z'YqCMIDe]eD;(NQ.-iGgI96!sT/<h$[1'M2FFRjp$Mj@]NGb82ug.Ub)QlcD+<(O1prgbkjuK0*6&dc@9AK7i1.Sg7ld+
%$f1@Zio&`n))?YI4d[FI^a:]cOUmh8.,b\f(kJ`@:Oj$QBULSFFEl'Q@kqc<"cu0hbOeUU,U;A,F\tud,7:4`MW4a<8ZR<Wb>V\W
%4ilq.$1fWLqB':YXa#VO+iHic)KSi,re2u!7m<5EGMXbOX.U9a(ql59\pT_EM-_rq?'-@6L)/00]\%l!pqSCdlt=bc0'gN6@Sob6
%'YqB$Fb:0:Ma4FQa$Vs5A=m@R-8t:WK.3NsXqGd+FcbVt_&5q2\CC/>eH-mCs4L)IWIkiNW>Q(P"q?sY1U&&q6A@[.;R@qWM+2,s
%O82(.(cf"$8K4eqTL:1.[pQu:KER/T&4doX6m2lAR=.-Vo$`8X2IH`RpnP9cID.DA("Wlrq%D;7lGHcg`HeO`8Mp]N2c6V6>A34h
%DV^gU<T?]mfbKX%F+Yg5cBm=#*UGCdkfLA7(TrE(-J!ajd6Uc0OLdF\lPB`aZtk[[9kfE5,r6?6B<M'[)&gcDL&5.V@7CO@$iFV'
%3eaUe^ap=_#:3>5G7*FD^TU;>107D(XJl\UgJjCQG."scF\?DXGS%;C,lB,`M<?6^;%96T51@]le"!=pXOrZZ;O$L$1N$2R>%=17
%d0km@kgkHF]npqNPt_aaI1BB"i3J1kd4CJUX13cVm8_(a=dI0meZXG_I8AL"^nYtK:m%1gKS,-7-kK?ddp,nad0'9/FJB(9JK)"_
%H'&9;3W7Hr)f7D"ram28-4SgahDQ_:DALZ;%0HqAZr*Zh\eG..[fPa5Z@Fp![VA=tdVU-2Zod!W/hYV8b)VW8A".B>H"C'=Gg[jd
%2S1=gfN&XO5g%h6>TOcTlNfVIV5QHQ9tZb'H:A_+;Fcm?csgKYFa7a\$W_XD>tcG8>f^XTk?Db>S"CeTK2H1r(X]M#^Ko7IQHTf.
%4A!iJ.cLL&,-q&65tHDEWFf.$H;R@d@6.Tc]N5tG_Y0qB=fcAA97'TqHcbEJWTcp'Ti7s5_/F5a'uW1f./FN7emrh3oJqX"GFPl:
%fri99;45m0o]$sl"3sMP77MS%e8P:=aZ_D"4IEN<;HJm7C5qH`dJ?pECJ766>Q:oD3T[c,$g?'#c_"t<ECi02JM't$fNd9UL;2tE
%1h>`<;*QCDLfn&Be.-d%feg2cV(sVhC+@j@_R4J=\&]ke2#98Jf4>)+F/-7jmuc23V@_pIL:#U@*DeGZ*kCC8Qj0Hrm/W=+HI:@H
%+[F6[$^!%%(R\B"0kkT0O*aGsANe1gf&amT1A@?-8sUr!C7KNVau]lf;lF2s0o7J$9^RPIBlF$Em/=`&!19GTkknll]U\X_dGiMF
%)[kX3D5-e+CfecNoRgnUYD=cl`Y=O&Yj4ugAQS@f_'R!c@p-i^+U+7]4o-1?O0>&>OY?-En.c`/j\a4sk#3a6bJu$q9pG7KfCAqr
%RjmN)Jh!e^j$`),ja?@$Hk;d,Pk2.q:8sP?G<FG/k>SSG45`^If.Q6MKfZF!4-1su>c!rd]pA,;5@nB]E^'/"^4SihhKn:2lEu"u
%9\VrqT2]!N'<i5F4nY05/aG<'p+mX];(>&8=pnM_[a;'RY!ca7W$fuKL8?XP[H&l>F983LWG\b%X(G<[#GdYD,]cl<=Hc]VL@J2[
%U&O6.%kEf8&s-;BWFtJ&i&$]32i!3-Ab+JK=uQ&21j5c.Q3;XJ\!u>+\Lap1rs"T'Nnh3"'^jj0QedK#>tTe%*g9[:Z*F_q\M7e&
%]$uJ2=MMoNTj>=OEgeoDk,"L$]&SIF_sWtfVO4=FQRKkBQNG)2iT@fPr/q/MlI?-KC$i2f\V//Vb3no_QRKFBYj?7eaO\"#cE$(>
%kb*oUIYkj5&MpeGUQS\0'LVM<-Bb`h2uiHG:Fkq6`U8Np)DC;uNod1G'pQtlS-L3[e\0t^95+j2HD$7/!MpV5TU3g@3's9t%lDRs
%FE.q^80TPAopZDUiuG9.!\0UJ>4lQl@PgMX9Mg+f>Z3W2dSP7)$<ufg2^VC\9=[O;W0V^iE,(,@9KeTfQqi@#?:\'r)O^>GdLnT0
%ER[q,:.1[@C(^,<[Q8R'VWEEjfe\H3HIF@k;&bm5HPQ7OjbKM(\VS@FJnXG'X*TW"F]sD5d3Rg8RJR5u301)8=MBE&k0C"O@'gbj
%furZ/ot%hhq10D%I12&QK6Rd:qVe&*\OA-p<A/45++,_u_niXVo?@/!`BLX3`DQq=@Imf'5KZDSh)\1%Q7>qBB;t,_onX<Y!%bQG
%NCG=Y<6iTaoKAHgU/e?H\#1J6&HJ%P=1fqrTMe+<?k,l5M2;H&T_,agb-a\Od]5.17L><*Tq4dT*R%;YQE.0`Vi!NAQ^q/hYh@CW
%s!UOk^9!l[7Ol>YOMhE3cA.,hCu3G+_8:,\B0mdP94giuKJ<cHQ.8LcF@C,tMu>s],*d='Y1g+ud2UDPoO`3B(qif+1kk/<fo"/r
%M6QNBRl;"o$(;MK$W<2k+aS4<OlRe7LM[.dMoFsPAVV;>*_neC_kt7ae\eL0]j\@`j.E#>cpjimk[:A6?S.*=((?)P*b(kd>Y.R\
%@oJAd:M`RoCR)o>):Ac,"#GP.)lICENgQ?[Kmt?S0Sj$E:c_.dXRkqBRZ[lr-#@?Aa&p2F.BilK_D4%2=O[Bu#Y(l5Ds_&\-Ke&`
%O,b2cV5_>]'*?QZ'Hq>E.:s=*;<OsA;p@?fBeEdnYT^VdB_\q-f#<N3Gt\,G672L8Q$LNa;&cX]A&,0M+0/\8LK``CAnBhn`^<^q
%[rUkn6=l`nm\"_n\oVqZ9m*n7DSq`b#blARQ$EaYE:l7(KZ^q0j>0`cWm$ZrRh*B@l,pX@nR;';q9n!o6<lh4"q(C(^-g^^&o;tH
%KfNR[l_[tq'YuAXP^9</GSZMg\BLh:RV@jhcFI&Z<1`?q[B<)lPpAmkl>Lcf[$cM$Ql_sb?0aOYQ*JeGSY'p&9lGnH1rpZ"`Q6_H
%)O#`^*cDelliZe:=dfLo/+3,R"X.;mRnAB`QnXG<9iE&F*6"W$1=`]M3U2t^?-I$4K:sh@d#7HM&nQ9&GD).OYB;m%<rK[@?-25l
%o8`W3Q_*'P!H#Ga3TL?:i'_IlBX:fBVA>+-,1B@gVWg9(=g^d92`>4t>?<59`JlJ&^qrtZPe(XO\"P#!kKcj:ahh@B;BuY9ei$DO
%$ThP,8/Cp)<$\Mdd'\$7g"hf-/kU\&7&OW(PB]7%A_,nTH5K=GC@=2PH*V1%o0mrIF0j8g]S"1kpF$ONW^V1?7,)f\*ie\>Al7F$
%hiNW$:/TkgP/W;IH0Q0?@%.F&?R]p=kWA`,/'5>(g/ua0i[=%N8ToKKKM0Qa+4qO\3Fb[,LSC_.ltrkdVN>Jco930tUU54lQs)P8
%'B2^`^8HRoB[LRA5j5e2FZc%"4Y*,_K9GXP$lAThHh:PMR46oR0K4e7/%ss3(2r>/SQWZ<2kRf")Tcane2t'M$]S-XJ[l"LpR%jR
%e"oUq/=Z1:Ze:<3*+$6RTCC"fE4?Umj[)r+U+hi6\7=ksq(fS7FeU>l6AitSNnTak@GG#d2;E6m*b2!Dg"j>FYodg6FM,JE+t:->
%A<`#Ni(`:B'%Al5@_\X!/q>Fbi%<o`k>8!dGOTeDq1XmH3j]"_SjJoMfq%#q#h=3J1f>gsMjR21OkI']Z/<H_=omDLXk8\N1ut;N
%nFmW'&A=*%YofZ?fQ_hJ$oNP-<"sXo;BhUN_5!k?eE\E8!pc/)c[=a)4X%iInkG1,\dU`/W4-9PE93Ed[OJ+J0-W/P._gQCZ_:@7
%Wgs?<.ST4u]]['j?:rMH>"J<K&?_#nV2trH]Quko7J0EZ:\A->O%F_>]lll3md'Q,$tE%ZDXr*:3=X*t8SahLO%Ln@9MD"&2E?HF
%<^`g_qH\=rhQ/*V'uQ\Rb@Xadd(F%GZ##_gPT?(0m0[T<'&!CI]h+\CA!-tbf3(%$6K9hu7:**ppgQ%5I<%\[g59"IYYVF%:Md%L
%Up*WI5/u=Y)_C?>X6L@7H>T[d:M&F)PD+FBU3!YpIHuU!OUM'IHkSMp?F-k3A2nO.I1e!5M8DHeW]jQoZX.(4S9I+l;;>DbT3PCR
%@Ma5uKmfK1.&uR%VtP#2YYVF%:Cskc<+2ES%("p\N>D4:Cp.`fYYT.1Ht[2GKmdu_-qq&&:gou$<M,!H[7Xl">ZV/[e(L46@3=cH
%nX>/[d]O_QDiAAp`hHe6+VaY7+PJl1I<&>9g_S`n$iB"bq@;R>&6u-;:TaefMNr;lqZMS?Dmh&pXK5a\-YHL&r(VL3g=h7/E`ION
%FIl2@p;tS-@`MtgKmc:@q5QVHhc#X]M"Nt^)u6NMp;s"M+?dPJ=(._G9I`6cJP)'+fLM1Z]DX.QSiNY/7[:BanO0D`K1('[5IHfj
%E!isinP_,%2LUK*qHX]%\+lX4cV9s28^?_'UrlE^XUU[cJ5i\\':22P*Ridg5e4Z@[GH$$Y25uXIq2Gk=p<>ag/Ng'S=ZEm9[((F
%&":Y_:U/*-nt4<m+FDHTT1EgMjkM2IYaM*+s&:99fuD<%+.XtqD<7ihe]\!>UE"&TrjPugCA7`OQV&]4rhhOoHI^4=%OB(3aP[#q
%02<m9q4CnG"YI>TfB%L'mAYF3T60s%qslu4ZgB+&CPVJ4W>kl27,P)9k'2n_gpG.Rd]ge?kNerDo*c)t40btpe#/SiW$f3HWTdWh
%Y3A2L<dM9!<URD&>0)m#7%t,aDU_k+U*MUmKM+iYU`pecOsZLD9NGk-'0HV&4f]B5_l-ZX/bq=U(92'oT^,1W!kfc=5,4rXJ_j4d
%aOP@c)(E(`6;5'oE%X+Eg<nW.^.^2M%TF%2L`IpWB^*,rEYJ1d*q4AEDRA-,0$V:AZmYWo;o]ioY%6n5`E%Z+Jep+I'Yu-,?pcY1
%Y^o>>TsH1X<X8b4G/poO&*j9u5J1C'"D\*n1"'R&jj&<?Y+bp0?)SQMkdfI\4KBZB3,@>d3&g79egn[,/YP.#^M+!t[-e+8Ya9u:
%*+Qe@Z);3m$W>ul3te_e4ZE%**=lbUW)QXX/tm7T/0J8[\!pN]P'd3S!FgJ2C?YEknR.U5j$rJ8j*!PLYQ!"W*gQ3mdpoD]EUTO<
%pKYH/Dl%$PFRS,')A`\En@4`Wp%d-f.KN<cp\l2;=!/raLp#-pZuACkhET8,*lMgN48%)PA=</h\W62)jYY?=VQ,':5F8N9=Re^=
%jSS%=U4]],nT"_#o:QoG"u<cWN\m9-H#ulhUUC$#\`d;@g0(u_T"RQh2%rl;omO^>>$?snS$ZX./p@k@4l5KSUll8CM(@%](!TG5
%6E5<%'k"%h?(.o*/(g+Do!;"He2,lgD^`e--.XLlg)/fD4#Gjd*jq;+XcTPS.;E0)N4umXHi8Xt#>E[WZI((AoHR;<V:/lfAIsb-
%jjm5hj/L/UKt"V(gBY\<T7rhj??c:>s&:T3W&j9^':3.Q0+co8h/1a'<SRRXPUgG!h(GOI.'gh?R$Q3HQsjji1/'<*"D?^<b$ZGa
%#Mpe\[<JI27W./1B"Vc#3>6C5c_[0)`X2J'N.=^C.U-P1s'4ajX@Zo^<CBM?=@>"FMl7oj.TI-K'ijDDVV?m+0X<"=RP'_NHB;+g
%*=-DTPY2(Wfiu=s#h<#G3L$NT,:7K=Aq(E'\Dk*)BBA\S@pp!LL0?DshFO<FML`I1Y2&T\.pYk^=/h=_L6X:\BPZ*a$+%6rP+kU]
%/bLr"W0+Ee?GhOkWt<rpfK#)?O/iUa,GrB*<UNS\19[YY[:kSVf8]G%^MD;n!n:=D<9bod>*D55E]N8uI"&+)24qW4Lo8f4T=X0W
%\<>4,j2<H^`t<1!Be\j?kgK4f8>HjO6)#[HBmua8!TFV5Bcb3?^ILb]Al\aZiPB,^$(?CI@CpbG.>O@_H%9k9gPL6)eP\(iVZ)DC
%#]_s>\!4ptPtdc1&0*NZ>$j_acX0bXCmO(rBSfs!V-6^GUF'5\OK,IGi-'WW*f#ieKj5[sOUR,a<I@lb>r/Sk@]]\s`#Q"lj.S60
%V)0n)@q*6h)F-H"?ts27%kb&kDFg$40Q&jj(MlW1=8k5E&<!^hg9GAK`<Dg!&b[5&lJ!"aotn4-h$\ULCS]V(q8c1FAclK+fDNJl
%=?W7Qld._YGZoP0qqnT&-6b#WSL]te:(U1PAN,N)BX=^?,KnFo7+W;&'h,]4HbeJ([ul<G$_-danUg`WZJlo+XSl)&^N9Vfn:Jk*
%J_p!]`8R'0kL.H`K,>mD&?f>O#Oo<+4f1sN,R[ITU6[qi42\?10V+qMof[%I<?)[:/ts?)TNl--G2+U*W@f*TEfg>g;5,J7$E-!>
%DlC*D]J[fK'<PN+W-n[`gXUl5RN8fme?=GS*8&*%8/Cp-HkZ.PBJ/b#Y19"B23BMcC$^B8,au^_W%Kn[6I3eB>H2.5oQYLa1apj4
%/!M<Reg$'=Vs]_dj[$u>,Do3<h'In-]@_pZBV^eZe9]'D;lI;=>o*smVck71,bij7o'8bBe]@%[]b_.#C/=Jb7+?NN'Mho/,S@F*
%;/6P8]d3-4*R6EHd`W!.9Lr%&__8O$:n+.9MT='r.m20>0Olo*'lq0gr/33YPU+0GWlk_a4R#RI<i@Nb\,'Zi#L_)ZIa)GX@^YpQ
%/h</FTMS2p;6d0ii?4Y*V=28gSYoYnHJtPo=tSWT.$p@-dY3JA.?\`Y^$^T0WlWjOO99X6Ti8(T/j.WIeS6<F*ie+@GbChgF,_p`
%Bqk1@(EU_%o8D?5KmNr<?$Ib?T?M/-#HJQ'l-G2cMEpF?n50(l_h5AcpZ*qh>VjrfHJtQD!?_b^!uE#YQO+c]_eNP'Lg9DZhM$`Z
%A[,4>,L=^e>^3b,,*^Q(Wcji&$P1d#;qA]djhaB]9IfbE6^0_8U^I^`eK8hc[FU%e3pnG%]-:VP[_i38]![eU4B1c<-DP@a$P2?F
%=\*T+9eRM'*[6Ec9jDqA?6-oen(5>D:d%H;-u<:0.pmP26qu'GL[&q*f]pkqn50(l6]&:L1WB4qeZM-`.Z`=X]d^-J2carBJ(pZG
%.A1Y=Tt4sBj@67tiLrpu/km,.J)R)I0<1ioH7h<Z^[4j7VbgaB"eg+o+Y2#"E8dMeD25cRZhB*.HHY>,<rXbam1<EtBjGtnVQ#T%
%i??W4L$N)jW.*JE\r3V/iM"PD$<Oq1:u%!$\3bnd)#Y6lap$\p*<Ln9iM!j;c%+KcKnns&*GW-pkb\-U[iHLq/p^ji_F&al9s&g%
%TqjYGZ6a[u@P.#rKnl_[ip+2G:o+uCnR:gD0)i^TKfD&YW5C!uXF9%NdOF_P?[/Lj"qqB62(h"U.q;dC@rc=$V$dga]mDA/H2S*]
%e\1jVjgjZ1LN5dM9t8\mi?>5i\`SU$BISgS?[0(k0oBj1>_#uK_Sc31b2.:i8:Xk3_F*u?h8M#7RMR$Fn+[0F[ap.fidj\]RB'OM
%Op_fNG:!eVN\j):n50(l_ZTV6U%L'$jMrNQUs&/0lTa(A/#+U9'm0\L"')lt3LMa-ln+b<ao&$K(Wtq<+"Z:m.8r_ci@:-EMi_$2
%A0MT#S12LpZ:WR"Rtk7q`ojH8Onh[XM&b(SR\Bk*%g-S/%!+U<R=3rh6'Q3fX1C"VA[:[mfuBDgrA4faWSSLdm7e'tin$+!RsS\T
%Aj/#bded%uoJt)_Y\1T^"J=OGc*=$HhJucpXG&kD%o:TW-e+/^(@F?K*XW9^'LQf,g>F=.WF&-_H4Aj`r-<'&]&pW34d>gt2JOoU
%4\-!Bmn"^7)h0c@T81q\3-'`/?)=XbTWK%klop]Xp0#`6'I'0+">dedWG1q#;8:(4cIYuGnG[_!4:YOjI>,mj``MB4c[<]fV++=#
%E>q?embk[M9s9Zp*H"#?kB2UjkD@f=k6YJ5NI1c`LR4a-8U(>Ega'Xc/?3nWHG!q2e*ZH-'UeX9@W(+HS$P'RTd+u3E@+1/L*?WV
%WJ.'uAkWrkSdi.A<R^>F,AA2t?8sm05j3W.)Kr=p/8m]3b>kg8CD+41$#u;AVEtng(E/9#T:+nnhl<L)R\*-:&O<Lf?%c_`3&I[!
%"W)[j&LU)-A>Eb>7Y5:%6DuW=kC%XR/f+hc([?"\Br'^HhbV/JC\0)Ia$P!of-#7$/4$>cRVCr:FL6>X[nI`[Fl.Z=&D5/qD1:Xj
%$EG^"?;HV70T*\#4X)QCo_I<Ke![ta0>UEap$0m+Mi(eV'He9BT_JeWcTAPN9S_bpQ-eBla3&o&gR.1\+Ad.g^.',:@5<p2jU(^.
%iaTV'"ntE9Y?;D9>/=Fa#;0MZdur%FEudScX^EZEbC5ecfAq^5DJ,P\&)pN8rkKt1E8bWZ+1R"8?DGI:JQDnbP'rreo*\kSAj0X_
%_j*UagPr>S2nj;=+2!@io*6?!&kIMoI-Ta^6F4Gf/d1,h5:7V42ZZG]5UCdrch;@^hrb0U"04.^*"Ar[2np2A%SfJn00DoA-4q>I
%Xn`#OFN]0L*(Jh:^YH0o##buH^^tV'DYD_N)>&1rb02sJ0NnDf#PFeM@DE"%Z!cpSGdVb%]h"i[)9,?)JQi1Q@[obm9sMB'<W:u5
%h1qF8[7e(0pm@&>b8]?5bK.q",+H<O*5,p1dITr@OWNCGjU_r5SfFqfVZ#aA?uOrsq&*lL(]4_YkXgLpSRLa5KknC0E59;]&brKJ
%/cZ_EZ*U'Aj/ngH":/@YYb*\3_%K^3%tU)#ELHV:1ri*bd(t&G2K:ORNr_&H!HtTMkQd:fZSKilk@kn4#rcKm\B,TGJba7g!5_Hf
%J++N=(Wp64N_M$k\gbFZ^UG%iF[dG.3A5ht8\C+d2hg:>k[UTV\9NMJ3P4W"MeHlLE,dGiaQ\m)%MA8:R_d^qL@*9Vm*C9G:Z$fK
%Dnm?6k*Zf5L(ehPQ%lj;+l,+@:>L]RkP%05*5X@;YSaN[%$q/MrBj5l4nsshgaLGLa9lFkJ=o6"NISstFS=3n4RS0'`ajg!)jB`Q
%R.8[7^GVnB_e3I/<J$(M`m^UTcBsJo'ohH7E=A=kN@B)9aE[Q)=YV6B1ou=jS*,I3YX'I6I[rU*_k58PK6*W7YihJ5T5N4)@,u"B
%[Lf0Sa_-;fYFfbA$Qci[ZGR$k&Ia.C?br?>d_j4'lRDPEn2I_J>tfr4_gUD@rR<W!:?oHAmXp6kd!V'BPI&NM._%NPQehQMHuK2'
%7"L"d7dY7\I,X-`o#/Y/R)S2-k_Bgl!,YgK.oqk]gJ[`^OR<DM2L49QKj3^h)<hL1XnN/Q@X/AjRK%>s\'okpbduH!@H\/J/[MQe
%$NEV.BH.h]@.gjXFjYI`<J/0^g4<W_17Z?eQl1?56&V+3l2lTk9"d_.0@e6j\eL":)nq@hRC=]q(%X:k+`iL1M/\aOG8[,ug26U:
%i+\ijLmu9.N@Mlk[8-GWbZ$Wl]`VWm';BAq_<WLA1c9d<JX8AU^r%i.J)1F:Wm'VS7/ld<&^9C+kskC>3FAf[rMQ9%D]4/JPt-86
%O;n$PgaWTkqOla"'\]cmh!#.IEsre`M9\3[O1fYqp'qk&*>*:+OKQp6?M(R']?'$BeWYLL(jh2f#f+AjXDN>U^1?4$lJ@4bJdRt.
%1^<e^+Qr87h\DU/(]WaIfq>dh=VG4OSL.tb9]B6\#H%P@a*GH@s1o^D;.p;SCM3=".</2e1ai-fJ^&A?%s7(bBitoT/YK.s4utXc
%So_m1aWTE\"[<Tt%^?TX4oe!V^V&!bYKgi\X!^lh=N/Q?-T[+LM%bbAmU2+RF5_3.:`[B"^=-o5@%g>6XnV<ioi&.a4VX?fOss[^
%5J@,>#aobiCV%M:8fE&]k'W`;E=OPG`&5DRb7U7g4BA7<95qp5IE:'kJR#gMP!bds$g>BT"k4^-/a#Ct&p=@bjKK/l.4hsThEY,V
%dZWR^b1,H]p[f;Cg'fW@!3o_B3;$$FkNPk]UOXW7eMI"dkqnum[9\(C2=V%/a`4UG]Y/e!9qHa1?@(%00GO=rns!OY^rD\R&dra7
%WuCR@0hnt,beQ8gc?Z-b>*lI!?.e@2(k@_^FfU$n6Pt?9i!e7T@MT/(RZ@<gTR!U>(bN[W?uqCbZ(]sY6\W;!BraiG<>!Qr3q[31
%rG)9rGTboK'o[h<%&a%*;auu":s#gI@/pK4B*EHGa-m=6Xu+UJlYCoD>L/1:ib=<n#)m`h?$W68![7k'K%[=Kj-[1?3JDr<Qn)"C
%@_^V;R/lAucIXe[f6RIM]BA+')]H2QlghcM\a64f.i7?.\R.(<J!e10j6L@Q\du5FZ(@Z9Tcddf3FHDor8N`"],\_UNLLrUcYed=
%HuoiFph)),e!EBR*.CO>N]q9inl+TXb_XLLguO'"*Z4f[b_*BK32V5Nn/Rd(XT\KN\^jIVrK]FV4[1BJH"^U][n*?NA7M,lRM;G:
%n;#:<iZ)Vj*N)ER]k5PgH_[n&PApsJlJ/J.`s($J.1qLg-IB03J4J.,!"=`VM)`tA"G[2G5+6C\XeFJ_3n3EqIg+8TXXK%EKDRTC
%(_rtfII=6%Ogi*@@E0@k_o^\ZZ`V=?+u`+Aoqh.XZlCUF2POaa;i>V*I@@)<eJJ*A[a'LZ3C]OC_n>6VeH/R.!8[3Z"0,rM.U]Dk
%k6uh4@BRqu*Rl"cl*^$eWfmd%J*Y*.fBm@Fd5T<F&9FJ_++B3`JYE-jdVFYG7A!U)HeADh7XSAsd!S;!K&k8<Du%66ps]*Ei7B#l
%W*7XBQg5TQ[Ta?N,/O>=%*h,jgmW:'%,=*Cdmb<Lq5Qp^?j0<;c?1]P'/ZjrJ.Cu/g6NJkBmNd^r^Fg^2#97;OlmSK\`OMpi&Skm
%HIgc,:]Zr+"Nu+]VG".d/2A5$%2EZh7E0E&)BoAsOn!.)g?T107biGF#8)X"&_W,`(WbKF*j3qoM=3:W^:l)X;U-s@dp-G#RX6SZ
%?dbdlgXU#I0fdBT0<NAob'tARR6%[%0'1.Z$]S-X@DuWJjrV?N69)X"Z,)79YMLL#Z*mL&#gsr'md.qUC&Jh@!IL@)3jpAmPJaSn
%bm/)Sn<nOT-G3Q*``J.tM9YF1(n]27HGZ#LJX4=)2W\ZNqT,e/IjZ=6o<0'.Z^IFJ0Q:'D?`OQ)#5U7toO[r$@[c[Q?O4bGLK:=i
%@fLOjq0_.mEuMWZ_*"%eQQ)Tah#Wm6WoeP$2f:fcOi!I/Va;%!T+ZG!n?&drZ.cL3m)b:1jGUrM[kDm=c>M.s#T">2=&j#s&S<sI
%3LlY\rQ*fp&Na!GRH:u98QJ?Kp!u#Tam'-60UnJ@FbI:*nbSHN5/V]@K53#JQI@`Ga_5kOg68Uu0MG6i1W`leCmoCE-L&cJ!aleR
%^p;p^W&^Kf/u#%h,(+GCGDO`J_p[J41qaK'mR"shj?0F)41s>"[Kp:rma:S#h81KIA/hYtK!*=9VU*?MP4.='+NAY%R[UXaT*!8T
%Gmp2LE+".4:*)mrc)_l3bs`&W++uhH,to)mi<SN.@/4Na8"K%".sD&*@<1nj4M=)1)R,8X;-;4Ro+tckIF*8GF2-\+%dpfWd0Z"l
%fkaP7CsMM;3_Ket,0jHR1r$'3EI-f`J^Nm:J-R,tG$$&WmkA4.03gDQTcT2.9[s-TMp#@=`%U,FiQW)WWY%F>&Dub`>Kk>T7XFZB
%RQd!^GZnd&>K^8u#0p_W#R^i!b;C>'d:O5KMQtY>d8(OL[@%u8ihj\6KIka_O?=+MK*!5:*b0,)>_&M8aLe)I*77#jhCs!]&5.cu
%?(Y1o4:@!"H`G;H+Lt=l`Q&/3kn#tj[b3W$i2MTI<@)=-6*jBBiO&)Bi3]CE*E)kmRTfq5qtZ`lV&,3_is(&PfONVp-&i)'PlXC1
%^s"I-6b@B<`!f[IcEST)]O-T"a'.bYj0YXH"AGfJLKk)NI7a#?%KmTAU%cB.>U!JllH<Y1DruK+`hIMp7"fBuG9F@W<Vp0adaj&l
%_Ao*?!G%:)*CPMApqY(p8.f3cbsD"dk3T(>2d(4kdO&MN<S"]TaIC?nn;9KE%j?;&1^I-Zc.Q%J#O79#KY4;2!Q7Ga%V[!mp/IWG
%<+7QD4)c034+Ot(-e_1oAOGQRL'8:f=Kn\12:ZfA89F]#\U&%?=l*99e@o<V?_NUMO8%U%g('7o<+od.#X[@c[B"6b._"+JS>O@R
%%&^(a6V\3X6:A\).j;4V1j&hp_J+0>:.$'*RZb[l\`[b2Nr],.m_b_k$?H"*?J<Gi4]`VV6ja9d1b(4"6Jb+?M^9\:5[[Af+m)lo
%8Ma*ZnNfFX[,dC91:tllO"`Wh#Qo)nbZ1p[QjO[4=2\,pnhD*""dOIkcH4X"$&Surc$?F'Q/q8"l4^qurB89hmVi>c"!_$7a;2qo
%C`]N<R:"nJ1H+[M#6?>.@3$$b.&_c-^*[[CbUg<8Y88?8qc`_@0kDiUI,8hq[jYTm$JLl<6FJ(0>hZR#+aN&]4:mac-+!$Y"&X&:
%ft2J?1`sE/"^ihZq6O-T3)D_W/:J7a/nSC@#6N8Vi!Cq=#7rW9::BfZL&RGo$sft5s6RGb[]W&]0)4<Y\;-oW<?eM9Shj_Q'IP#h
%'1G#,<Jn"_.O>`Z^tr@HqHj"RHLr&&%<Y5_:IJ`*AA6s1MM!d4miH@j1$4A70Ael]`]60Dr1"(;RNYMrrp^k>6@Yk0>*$C(T@Z5R
%p,.kVs+,[ln@OeIIeFas./]k/r<Snd1U"Rgfe9*+*^<$jf'iM=#EGOGmPcu(oO5U#r5&TjL8Vf\rGN2ki>Y#Vi9$*XHL^YuJ%0ji
%a$9Fcc_j3-BEXJWE4hV\JXPT_#N=oK?hr"1n*&9EcgJM/H@ad&J,9#n+91i>Dm_gDq")7LrV`)?HLH!33VXI6)LhS8hgN7p`r7Ua
%Zi#_lVYS[7l3K6G[@G/(da)fNdsh8N;a#UKrI[.\pU<rY0AkdkJ'G6U+5sC_r^tVZbMU#eoZt"RbI8R5bj\i_p#!LF`a<+kc%pfj
%IQ+!,hhi3>d\":WQf??kQ:D3pYtbZKr;7Ke5C5Nk]C17(rT`^pR.uWtJ+NZ=?MQpb2#j?HjtoH\$i.7jo;hC'TDg:josaRchu"BZ
%r,;Q//(f$Kr@n>=L.&8)k\%*sr`?kFIHd0noII,Xr7\?Cd\BV,Z[;W<o7c4!j4D';S_kY;nh!EDn\d+U@6'njWVOcq,YXDESPP-m
%r7cm=o%lJX;Y-<k8XSX=S87<pOd^d;0[9XXKr;ZEkl;\^7nN*!pF4%M;NcP!g`(bAi:4iPrV6=U^Am/EB:o%C\"EN>F"dO6qd4gI
%hFFbsr:oe8*rk]$^@]gJ^YV3SnC%Wg5BuV8TATY37kMLJpsDV#4as%bPi'gYnPG"DRREX-A5P&gm<Ik+`t/4Jl9DrOh033%KDWn$
%]D(43n^[*Fq[`*P0Q);/XCTZVl2<i_cgU"sci!J3T>NS\dT7O%f)d&89BfcAY4eu<s42B8rr/1DlE?t0cecgR+5\g]nA9D,IIZ"*
%r8aKbs5W.'(YYqIq=Vu_+2*qgp%$0'qNcKmX]KuCMc[XiiccL7O]YP^4=QqLj>C'ql@5Cml91f/rqY:"^A$2#Idjc6IIQcBps2TJ
%rTqATf#-cka]`M."g6$u#A^U7'rjk(S$NkL?_O+fS$NkL?_K$dhjh+,p^0lqs".?2Sc\e49u]/NOaMU)j,%&J@Q.[m"4d0bAiF7=
%If8&O1V4g&H-?4HZQ!Aaqr[j,1V4g:q/,sIYT'2pX[(3hEAaj`IHHr)I/6NZ0>I+B(]Eh%iQ!PMm,)]1Q%&8^mD$[0GkZ<oGB^f^
%?iB]-IsAV2r-,*q[rQ`Zdm)cdeK;R'`_Us8T93SRNKO7:jA`IG4PdL?ooG@#H1T?KEB-WmM!4_CHi5#k&cIB,P<"VM,Pk`l0MML?
%U&lNnlMLA>o?VZMgC#3Bp@J6doS['bDdL-99P(.mF2OtIr"":$K63Qc5'O$01U<pml;ld@+$8K&hdfd35O1N2rCGf:/`h(l^[W+'
%JhMMDfb3K]htVDmWQaGE&btmUbn0N6>PHQ1J*/&#(>O]Q.$O8YDtP"Ij;C-F6L8A0TN4:&Lmi9)q]Gh!H0iIFjE`;^oiT]7&8du/
%a7&utX$gl5s8KJk93NckqJ?_jDXO#WqiZG'"TIjs[4_mRCUYsGD&=(=FYZdJ:S*#M$24A=BA\2alf4DfYCH"P@nZd_nXI&A;SVq5
%(V]X]DG0rl>FRA@PHV[jau:)?Q[AY<r7olDRr?%?iooG$D_;@)Lu66rb;jhC?bcOnro:Kf`=l2Hd^.RPaW&>UE9MC!DZp!m:Yl<;
%qq"V)_0Z"-h$<S1W<^s1n5!OdC-:$_A)@aEHj>#OD`9IahpQ.$I'O41W6qc90n8f]LL8&Ka,6rOVrE*D/Af/L*8g.A^o$5-#e+`c
%#Cj"m%Q=obF[0Q-s2(*!Xfn3_ptkDQIq3D`F?QNf]6j1!/t;Q7>LR4d$9n2%Cq5mKg*:n'2pF\+$I'UL#cn9rM1%L7WK5BPJMF5j
%rN.a*a6;HLX4O)XW;i2C6aMl(_*J@MTp_+Z`'eL7I(sY(rl^-\pLOTg5+A%W'Dq9kT`b/8PPTOtl-F\%Y?^X2j]qIIqdP!O%>`98
%cX,krZgPo@k$6;HY4f+oAFJR@1[N3Tr*V"Y4+BBiAWPEKDX640NkbL>IJD-mRbJ#!]geV']oV^po:CC$[3,DCG%p^+[q<7UIi,s!
%]!ctI5-4.Cq.qGG8b78r1D:mPde5jGI`X,3S2hnfR4i[VTDO#67,FEH&,0W_Z4imNdQY]>_WN#ZIaXgGs7NdH21>5,gLm=CO'ftJ
%koa4V5dG'qFYUb>?Z6S=OUbalBSDqVa's=iT<oj%Z`lPnh:L_M%Qb-rX9=?5EtVWjrs>Ts[:8k<DnQ+m0>@2Y>;(J"U+#YJYEkfn
%HMbu0s7tR)VfJft7*]:j\+R6/of#=pQt#."^O,rAWm(;'it#,sIIkbq_qVB/pM<V/.J!1N5PYt*'YRphKg`b\M=&)mH%CJ?-a!iq
%E]3r=b1TNf6*a1R^]..0q:e[d99*</:r&i-N"<]#r_.6GLUr>f#''O"OlQ/U2TP3k^[rbkXU<BMN@_Yjr9bX2cC#b;r;)KR1_Si+
%f%'fimV=%umn[a$?P:A5U?a0rq$/B7@^T^N\uRN6i^C?PC:T71bP`-QB3o)u<P8;<Y75=EO+4rl#Uf"oD/OH%IS+Y"lT]emLeW>a
%,f>-33^J5Zq+$n'p%<fkcb9&D5D(`hiYc5<Q(5+o\XSK3htPIL*2kY>lf.m:N6TL+l:RSPZ5tjF%r\XpH)\QV^@I72GIdLE5Q/pq
%B1MjX/)UB)a1ll`8+1m#X$,q>RssQHK2os@nFf(?e^/6k8LB@u;2W-c;b<IZL8fBHq4)3chgNuLGOL"Q2#[)#??K-6r[tj&r$]p@
%^&(RkJ%_2Y"'2Dlrr2^&md_NfI\;2)q4.H^ci<#$?b`(6Q?U52IIHTXSjiCeBFqrUC4'6K"onS0J,dNYc(FIJ(J%mqs0Ll@rq+I)
%n^U-W?MH=Krm(<]qX;>Mpl=fm]f5Q_511t\l+a(DE:TpAHKA@,^[UXeX+t&/m?QSDp5MH1Qi?%"T2bR25C=eF`sKq[C>pMtmV<pD
%>s%hrY]fLL=@](UL#)@fQTolDg,o]>%0HM+nY^m8$TH1Gs5<DhhuE36Sc<s4nP`fb&*/5#reLO)j+.a.6-,JnOTE.BpSk?Do0<9$
%s89Y3oDeX4s6G5cqS=0Tf=.B!n`*DPHN2Bjmsjug4!4LCKBF-Gk%f1Ur6\.JSprGCn2C7'gCM"i,BIeP0*qG3)dV@@Gi*u8/+163
%ps5H0j/K6['n?,qs)C(>r9qmS!5["`rSO+EJUdVSrUk(3q]??]HgoaAJ,-3nnD7)sI,h304DZ1ZS"o'<+GCZN7XVtd_gpVVh#!?9
%.n!PPQbG`S5O])qKj!1N3?OC'HZOG`EhtuuN8^Ee]dZ,\:Xcjo+m*b%%t>;Fk`=Y:9@:u9l&9=-^9sG,6[fSFX#J9.SeT"N]V/2u
%$,>6R[G97G#GU?"f4Y:_5br?tCMT]GEg(lr!^-=K7e8ZbF:AgdVM3+OdpmE"&S?3nd,4\rX>DeS\_Yb)Z\Z`NDkft:1(t7\G2j3p
%>G3A>#,o:n[<A4HV4$f08fs>,a2R'q0Hb-#(#@@Yg?^^/rl14n/g/S:cCrC9969[c(2cI^(hBC/Q"jjnO`+]2TT<VH>e+RJQ*n.5
%FKABZnf@-FqL#A@g8#[3d&iU*)+6Z%H?9F8[9^J&0%MBnI(P63L,6[m3Xe+un)=eY-jE97E5!$S'A\DiWe&<_kX=2G/YoL/SX!A6
%:7(QoP%,,<]YSam>&Sd<H#-Hia`?P!EC2**4A_se4D]M2;`lr\Y45@`(BRqkD[tE"6pGt[dn+bZUkWY%BjC0VrH(e&U2(UY%%*^4
%3Qs.3Rj6?.0soejS.7=V*HK4[M:Zhk>"D&JN^J,22&\Gmh[*&u3QR>=FMdZRGWM@W)T>\>aAaPQkM-N;_doFQOmZlf*Q](_k3em`
%n#MD0#3Bm^T]%$Q=Cal*^0WeaS8M9p-PBi!.9*%Nm5Q>(l"_c?5>7E))po!41`S0HND=ESHTn*K39cBTU[HB@\U4rd8I(DrUd2g,
%*F\qT`Y7:N2FVEli/)>uo+)NP?,d5u,=::e)jJpM`Zpp9"L1n"EKI=I`mNP%-f%?&-t-eK-s]!sX]uF\a`<A)ip1SFEYacU*MH7'
%Cfa[MFD!t7kOFM(Ks"_l'%)9ql9Zh&4/cl4&RD@C+m;<9>@Y;mhCCE_-<C=%65pbfKWK9YB>dl5=4WlmoTO]8.\(D?I8;U4iW\,"
%"A/nn#?ZhCV.-*D>DPlmc#:i;f*If^8jp;&`_a7&^,1:nkZ#bFk@n0pBB)_.5"Ss&al0UO#"k@MXA-HK'=$q"TSN(dnO\Q0"IQ?p
%,)G@%[$'U3m`4d<7%49-"%B$OFa0aT'9#Yd29?W\,tXr@j`tr"d0&D&\'u""6D"[+CJ5tKV6@`n0MPZB.Gtn<GM:/,&4$ao%pHe*
%SFT8Y)dPhbAq)"pN?6Wf1UX[9a2AX2"1b34QWE,YYEsb.P0PN3coEY/pUQ$m>SBCS"S&;C):A;DJfZ$]=M.lq#04qiL[$RM^:$qV
%ef5Z\O',f*,K@#TBco5a4'+i^0r4+c,GB<1'-i('6XM2FXcF_Ir7Z@nG*6PLjk-'K3>1QY_tDsYOuupnR+&IDGVb2U295H?+:bSn
%,>fo(P/NU5TrPagFMgZsfV"?Z9r(LqeNQ$GkjV:`=2Vi>6*EdOdL@51%(7W$)G7&X+=b&SKdgi63RPgK\f@"1o&^;Q&IXf03K9=B
%+bE1WCOji/UMOCpC+$s0qSLIeD,0i2($7o$f0l*!&AZi<37BMPC!o^".08Lf(hB8!eE9tK7L'bL@Quo'`nr%ZLS;YRZmO.O-^mQR
%Tm`M#^R6HSRaXla/5&N=*\i?foRM`4`XiT2rkc9p2\<MRLTr"9GmeJE'cC\-h+^Z,BikVsTfV\o=f/#Uh'-H>RDi/Y_Eq=%@h;%C
%16+RP@A1pQ)ssTr[f`2W8PQ&!)KXa`;l,BfRlf\e+,:mrg*h@LWa+o)K#B\kYo(F85S,m>:Ck6pX*(nu/Z_)i!R)b8aAXHj(/F&D
%$PAmjAJcnK*dAsTmFU;0q.D^HRC*7`6-g0sA0E*^hV">@AC`SgrGKtok>^'QFCFEG7,b>Jn$GA^_IjGP!kU!:74"WPeg+dWcAD#-
%@)6A?qsMkthgF4Je+nsUYG)X_7q-oRg_K4,2]&-54u";t*P*53TfnNIU(TPPp,orrqH3LXmNP@OC.XUaR'](qke]76=<Qanqkb&O
%+4LK2k^YYWGSG6lDj'TX*@f60kQi8-hCm>?'-kZ*O'SPJ)s@+)cBhaI6@uF*%n'3H?^<K@HUYt%1uZA.a^5SNP9gJ^2S$8J?">[7
%A+Icn2m25L3H910l@"f2*;N]f\G,D>KBc0!MIV"X!h,$P83T5QfC&ASdrupoC\%Z5TW![2NtaKc.*HE8Ju"OoHuFIE(2mmE6)[mW
%,f_nd?JkP4CF<R;"[q7)(!'fULA(dFN#LSl\fRQ`^)nVEn`*=3QZ%1ZM!9sEZ7Ame!7!a7\2D=k8Nt7s?(/DK(hn/@:DOQ84MWI[
%T5Kugbe:*`PsMK^1.*roq92t\`6+"-Y-&sLfubM9GYmU_V&D8NMSre8H^:ch1g;tYXm,W-fb5sePcfi5da^>"8\1Y.7B]q&O(Fq7
%Ys^q>N-(<q@ZTetOc&I@j*pGZ8Um`9XZ;52d_up&$@)"fnsL5p$;k_Nc8OX]cpL8Hh7e1>\d2@AZ#(#VEiJio8Vm$FR'*S9<oN>\
%q)\ma);IU?)bmXIeR^n=\O<9C"*(dpLiS(hS8c1m)q58G`H;Q/+RmB?et!Y+&@#:q<E)[1MQ*B>6cP=6FPW8gj^9L-]-CH>a&$_<
%m`b@N)'Qkbe(1$q\cani3g'fGlcmkW*nZ%r1f,'1OW<n,#cOV8WTB'mF>jkk'-,2N;qFF$9!eS,f1b^l,sJh3CRUl7[s0GpK^]$h
%%^nfkN9Cbk5,T"ujeLMV'n*=SE<HeNgBOL.BuaTc-=WVI3*fStp2mE,1Gq:6b_rU)!t[)Cc?Z]*,eeJ#@!D]g[r4Ts(=n&u7_0F@
%F'@m12tdS_eB6`GX97=Qb_L.I*FL6$HtFtrJ5=2K2k#tECRc'e_a;5=46lbm>B?/eR$fh5_ZXkYK0^@*_(;7i%>f85e9&DeX?@;d
%ei&RWf@,2%%<Q/%/7PmpJ9GOMYRUXka*2lA*A3k<Q$$ILN"D,*FTC4)I&sCOXpqYTA`X(.8X:XB=:RW05S@mhDW<RX90TVXa06$j
%WSZ]iFZ9p$1@)a22VW_9/9AQN5SfO<=$Ym/L"1^=YRDgM*16t7X9K/\R[VFq.01VRQ5UDH?Rl5@T_O<Z&1"dJ,7+[Qs5Rt8M]"n;
%$ir?-,Wm0H!u>)P/)f'LUgI!u&2a8b"A40mD%p[QK:O\%H@ZF.*'-L[F(?AO[*$`DiZpb(F?#FK8T]d!)Q4/9!2C^5GrB;TMk?L"
%`a+8f/+=<E!.uAo*qfA>mla@+$8#,XDPb$+:/DqNS4k;^fI6#I(fq=0.*XP<s8R?5c)2Yrq.mEEqZeeRL!B(nflVOJS'KuC9F]Y%
%BGk4,VKF/-%"EM/M27cUoFIX="%Ppq1),&5Jfj,i*0]^op]COa^a9]BT`?*Xpusl61d"*6]UR:5Td/kI\j\kK%ANF0No6to`+7Rd
%#d)6hYkH?NDEo:\P8T/e"9GV-?:*D-UP5EO-FUsDdR*g:[J,OAF8B93QmFHD*/erGD,G:Zn^?%jhgFVckF[7anY8n;q='Fe4F[.C
%F$K]sj7be9irb%n^&Pi1rqW2Cq9.g]T7?O)&)[9Bn]*k>kPh_IELaTi6p^$u5'ZLTa7"EF@.!abkANT]pqt,o^[]Trn,N'EkFZtP
%#tY.CBjLVXit"A&r:-91eC-jeFI]NkIeE7.J,Icng=BPDoV,%Mg!;b8TYL<b:HnXMrgaS.ANKeV(]T%4lT]-Lj9=PnT01BUoM<-p
%mO'*)nCLJ1]eDZqj.jA<p`:U>1\$D&d!_$J\M(15nI,97J'hEl<<jI5*.,Bi[9p]KhPYkg9clLlUCTRP2>PXTmsk354!4CeYOB-u
%nN.hAqF+GcceLa0mKXh^FCEH:I.ZXKs5X&R*e2SjqCaV(rhFD(DY`VeI/M:g-WeZqo2bU0lL2_][k6pa"I1CWKLG'&S??!9oU&a2
%((B2?7mL2`I:i49$0"AE"9]%kCo+o$5CO>U5/-i4*18()"PQTE3-JR;_eWt2!'EiW7BQ=inLgXK:)Pf($gG"C)eetrTqB3D?u$5V
%-n;Ud6_"Q-bCb'f-k6&e_g;Q%T"rf%p7g^.G6A<!_/C-S4Pcj0_3>Zg+fB3M3l26%ZjD.;VHJ_C=IXZ3Brq$hZ*6=>$Dk/!)Xmnr
%)c3'7]Z_+D1-[&SYTScP`b9m``bZVJTl"%CJ`@1JV:u\#-j4<-H63>W$sX:UFb?!F8"I7R#!ic_S]nh*?9&OS-mF+G1+UF-i,8!2
%!c0BJQ&W_n*=:!k1b[jq>_me?fDmb%I640JR]Oc-G0<1<+]n=m_+93>AgFk;L3QQ6J[d>iQksC]f[88_3MEZb)UBhkEpEl3$#Vb8
%3MkQ2X$G.*WueDh__)Lc;OYD8H2]/T?tSGfA/!N%A>#%MrTn#:+><I"2R2cT=K@TGqS6>)Le3+B(66@<&?H;N4!E+_O=k.)]!_2Z
%i^?4o@3R&Q5]pm"mfj<)XZ<Lai['2i,r\!]1tgOR68]U@N@UJ,,!u.j[#s/^)hT<-klE4YGX+d(hPgQ*I(>P(5hLW.P9nsG6f63;
%Z4CN!7e)c0b;U!>2$"]fh$F\O,2<!W'>n9'"/73Nk)m<iG#l)18c+\jdotIP[\rD!LAiDRM)/,)W)9/T3?(^pW6b$9hn4dGP9*>'
%i!?&F:qEbt*DqY,Ektsnn&3Z]3l9I<N_tP"QQI-t0/q.QAYrWfP)rp.T2-lKI2^D73dD>G6P?Y:KiZ9A\(B3r$AD"SIa(Prkb2[=
%GW?ZFe0Fhb!*Y8M:*q(jCk5#1BSB>&Y+>&C0)TO-`8*\CETUAm2\EXZ42Q39!hVQYj6S2G7.n*^ka:IhS1Xg><oBa`2,Br`@Am?6
%(s50.6g8KL)`eSiTS5DGUsMot+U6JE.o_5WA%H;>CkBBN6Mh%Xgm#3,:#7gSiTNNnUT%(u=R[&BXUTL,jM`R)&L!'20pYjs"[/lR
%jSp5mX@an[m%#>$T$&+4X,)4hcHI+>.(M`kkZD&5ImUqU,d[VfI!<YGA&Fi=UQX='[)!n5$[GrP)n^^Zl,%kH0GuE(!-$dS,H(^j
%cOBa0oCO'R_f&9\?+^:N[*rITE:Z[`_a@4l^9;X=^"58=kk<G#`4"<kYp=c_#sm>$@_)Omdp:d";-!5Re2^4^glGVI:hPG/(V?n.
%L?"k82F"uI1WX""Q1[HME>Dr*^E#tm3dX=)f7#]A_(Cl.A@@)+:j<4?l8B7/jQ@u'MWj6klqtqg>Oq[E>S-jM$4s4>HT2mhnB8&+
%9nL8(Rdtnc),V#2LX^O.4lV&*WTA4&6'"R!D[;-65WY@9Xb>'K-IT3A@C'U1&9Khb&bkF4-pq=dVB\9ZhOCUQpMc>H3>M3]Sd6>[
%nRF:24[0h8I"i9u8usP<EL5bIRp[$-SA8G7.bm*]oQ14a3g`r''G%.45Vm<AT&HnsRO59RTr,1ScetBndAKAI[g#H[c%DS6O\E]6
%V?g$ec2@bJ-nR(-)$*rW+&<Op*%tA#ih^h6gQ+n=JNau&F4==ck/7TrVpBLcV0$C;+:==\gTa*u#/,`HB*_=`39?)L6BF+(I:b$>
%Rt"E?r"BXOcot`%R"[i]NGn\f.t"RK4"j9+Xo6t$?5JF#l<8M<gb(ZS9GTbJk!atQ?P$O\Z[f=t[g3Yc?L:QMU].L,>nPfm9M0=?
%ELf9*q(8=o?s@(+AlXI+)60X/*R<M*o@4c=(B'&D+8B9NZ5MJ(0BTC50fpmTjld)7rXFbZ&F<<`@j6_>#ieNR2iarLK64('=7&H-
%:0@LtIVWhu5%KmN$aTV.@of^("%R:')_hs=d@"no'U8L=^q]sqptV3pD2&_XLO+'2CR[[M!&%XGg'ceST`La'3Lfhf"P=M:7R<T9
%7$LAdo:-?A5d_7b$m*r;c->U?+1o04Q^t,gTqE*EOUN#DO:2u[Hre'`70<j;d+r%N7&^*4o]HIA2.iglK8'NE#S-Pf,Fl91=jb#*
%36/-AgHe0-S!\i:F6D$fDJL:>2U.*`%+UiTL^"X"L^&fGj.@%qGVEHWqT8([ZmHk'Zk&9)T4c]MD=5q5_9)rj4\@i^6lSY(*3)q8
%fmod1VZ(%]Cp61,Cg[ho)4O.V.cQn5i7^KPMF^??;9SGWR]!-`jd7(=X%^KpCJ]YpHrAH,!cI3!a=b`r_qS3\/OA?(dWS&2SG?aL
%2ao=s^_<meoHdI*/UrocS?1k<,EQ$0[OGs:RN@dkV>9)?CnF_W>3M]Z>nBA#CKJk&m`)o>'o)T`_&f5XS($TSNRb5$g')4K[0r_p
%A/L\%YaCk_L?<HF1pn,0`9K12h,BU"U8\l\aSAb5bPT,BeZ)p^HALb]VQ$Dq,Ke3kXZ>0p@U1k!1/_1KRbCD%]PPLCm.l8F,P%/q
%+N0u&pcTW.lurjMIh5[bS@<M%it"qH,@(f3EZQ9a(h@7A,#KD$8%mg<Of13qZ$`5/SPbBfFa3@FiRf6^JR!o8dRjVmD*QY1T]@6h
%GPaA'^t4%.TPN`:%e)O%oBL/!l%l"i\F1#g97g=*IY6)uB4k$B_Ln-P:I4YUPm8F'NWHsX"8I\!JC"_I\hoHD8l<&`8V%&n,-Z>a
%HC41i@lk7V74l=M_i'g%2#n#FJTrO[6O-3o7*Q):k\]'71\?Pn\[W'6iM*LsrMqXYNO[m(T`.I@c2sMnM42l:&(r73-3Q@ITF;E@
%Pk&D7fYN@Ehb\FLQY?M`8"h_1$X@lnh%J6S?n)g\@gL$TFfS-l.arW;NC2RlZ<pdj90=![IYXkiW1B8rIGa#C[tso/r#@;Rdn!B@
%E3(<bT_+>M"If=?iTrThiHG@$Qcf%tR-as:#3c_`GJkuc$=FL/Af`nq\N/%dnE&Z^)<i"O(#2)NE8%LG\-DTCL(f+[7+$V8O0X?<
%5]!dUiUO,QN#K"8bn1GaddoLip0m!QbsE#(-1PP<$-:+4!]i?.g2f#jR04eNEAR+R2E7:[1]8OaMbXoZZbk[3./dB4Qe.=Eo*F$$
%f*Xd&)!"W@)ZcTR/`ErQF5J!&)Ct`gmojWoDI>_7'8P?#F5oYGNPRV+a3KH.iTj`@l">6nX73j,<?Xq8:?DaFh1_C,#K43='[8EV
%f*20'W%G;<%gENIdmKndNke81mcQ'I)&gP]jjQ"qi9Sl;VNT6F_8(uUMLD#Hi.rJGa2G's20dc?n,e74n:36Rh6;1#3G%_]-+K9M
%"q68,6a5'.B?8C%F/f4Pid;Obdn6lI[(J;WcoO$I.K`cW&B;/[*C/JE%T6>aM1AGiCAC_YbNoFT!n87q*!BmIE&?\X7L\khCJ9k/
%`@*pdg-Zm??,&4`)>aT[*L.uobFiY"J[u9^j`^F$EU.BuDn2VXR6[WF\'i0E05&Vtgbj?6;9LfNrpW$Z<Fj-a:cZ\kUNK58>1etY
%Y6>rF,Gi-9`&&84e@@n\>2Z]>2!Z\_[EissPM=[#_c*K4ka(=T^)T!bGChP;)++YslYRTMEL;Zo.kL!O^o49F9?VCuDG&>BeZ]`=
%1\4;GN%f!cK\<m3!"uP+/udqfJ/MRB1'P+d,@kh/loQo#3ro@*KX+*&DGD*t$JUNt/Bq7oO295=$u6D]SW\$MJ6k->HPl6S1dZ^W
%-Q+#G_gm;pNCb2ce0!$@*0*dUSTb^h^bf@>*0Sc-_?F,H6]VMtTlJ-rhCCcK@q:b4k<RlC]Pdf0p2RRUC9erd#&2aDL^X_9[5*a7
%iijImqs_IXA(dQJiK$"X0A2@$q=cRC@0F/[EPQ9,HI^uf,4h?.`4%o1!jZbk","-Z%Rc*0D=D\`o*AZTpS58s!:q4jJ<6PlRmn\5
%pg'Lo+0WOm[Di4b'C.>Wfm/r33;'0Pl'kjS%_EBuGYg>Q2&pW33L%`>'a'd_p]9`ZGton*\IYTlSJ+*@l#p%%#j@f)&FqB"#^Hk[
%#WBmF\ZI#n&K>.Z+g2oBT8[Z%9F!;.;;V_+#.Oqa#!R]&mP]uJ4Tm\^6d]SI7ED5)K9eU62P*hd;Vn6mYYlNj[eA$N.F5j9O%I,8
%+WX$kj"]-Iie(7RUG!]%5e&YR:a%X432AYEZr5`^n+;sY9`c;dRuALO$e2kIIBQ?)3OL$l?!<"V;BCG2]0=$E'l=dD-^."!Thu&,
%q$-M10H7;lCjdcOrl+05V/aqZ3n.ro-]ijE4ETXUR"k_DEZFM"r>-WY_$o<Q"66([ecLe?Z3rcO-0a3%XaK<*I0P<U@fVF(8@S5A
%&?dPd\\]--A)O"YScpYN8Zim)D4*ft8e4H>+H'hM,IB1Io'#_ubcN!1!l(*j>hYpajiA5k+j;p4I"1V^L\iLi1HDZ.hl9uI8:B]X
%oAZn;5b1#3\]1a+]VARN(">7Z_J&c24RWR\B%^9>JR6d(Y3=eqGQ^'.b;/U,F'.?]Z-__cdrN&+>tVZ@]Jc+U.if-lr3PT0/K?&\
%]7+.=LTrV=98e%1#Xgp;f`ID+_6eE$N9=E`;G^Z]'c*I&6)HR!<fh+$/JXWUYJUs\h"`!!pW#7d?l2L/lO*c$7FD%70*iVAQ'u>q
%%e8p"lj%)'iGX$U&@@.p@m9A)-?hCZb$npFhb_$EpB!i/QCtMiS"1Kl+jgN8BU)"V3jo0$hZWMOO91GJUhjOeYA$6NbB#2&)@Nq@
%U4j,7cuqLC3b\Ol6(IiK0#H<S8uuggM@Bs)-mCG912%10L!fHlQD+$6JM]Ji(?QfJU'`+gkqN$Kgt<PdRq1)RGb50Z=7G`^)q2.2
%!G-Z?KmBsh/!O0rBSjCDkdF*mcq4[k`YeP!.o=h&M-sgu)pbM."-%HM?1%jpp<)ncSM6i^aK:l,dM#)<gb&$-*GuC/K+sg@l,$X!
%dLSFuG,FjTh"'$>SCc\rT-n;Y>(r6Nn;(II)g;Vn7!@tT^*)"A$ZLdhEo*R6`W^OcEWM2;0'+pr!];Rm@+sO/d(Dt\S9J&S^V#q%
%;)Ip88R^n`S;@:Z8`ejKFhG-V7o,RE)$Ile#S<MQm_IZl%so)fM;dfM5N1>&qMTAANjT3&j<Rt)RV4cBc7dA(EOnA/!_Vr1JP:,7
%G?:Ydn`;8tZZ<d[Q2`??B(=iar#^@$_^8#XL`nDtpmqF8n>I"(CDsP92(5"sQC`P"=#6e<D*Irh'1mN<+qk"KTdda\?l+>cFejd!
%7qs\[a\ocRqaEe"<2Ujfd!I+u8N9/l[fnt&T0-_h4\&KmdH?s#;5]Mg!(3'YW+2=dd&@]`XQpP2Y7(qDdYi^KF\a3sUS]QZXlqoU
%fh7,/]88XJD$<NB,`oBSj#4tkTl\I0Y;mp;DgLC;X>c-QTFY.3Ccu+b-15_X=%!Db>j^[PCCtJp^EaHu6V>t30(@Ym+fn9@Njl$m
%\Z)4)q62$qeHVAHT1dO4Yk57dB%K&jgFKUr<EW/t&/J%X,k[5DQOG,/AH50/k6n2HN<7.So.+(kl+qXpE1d\(VZrMW!d`?,[DLmt
%fGi;mP(CU!ALMWa47G(HL#61(ojqlkE#od5(F@*):E;rV1Kc>I@6+d,6;HXIEi:;WjG^Ne:Ap_)3XuO&GW>ku3Y"pU-84n"cO((<
%15:LL/+C-m26;eXbbg9X]EjFMUOXE/7i)ViJPQ_FJOI1TVKn<VeT;Hr$Kh_!-'A>?R8\VSrIt>*q@*fSqMg(D"h,DIGmJ;l4B'!l
%^nAb4RDs;W;nm<\'e\c1$5A.G=:='c#%&W;$QkNPdXFbc4M*F&9CTp7N::lA)^Da.-i:34SHW3=cG17i#W^3thMmp-]Z>4/4LsAY
%p&oh@b<8,Q?FN"Gd%l:R(+jAdglt/BW(!^B^dY7Zn<M6[n&`jrB7q9M89*\#Es)5?i-.81=W9%77l^mA(;BE>HXaspn:^s%j1GTr
%06qG0Nrg7->nje=J]Ec`idOfNrZ=8(,V.#.R)7]Y%5']5<A.165dec#KJZ9&$<O+o%iC<O,0I)!#;C>G0N\eZS#sJJe&)GEJ3V]&
%87[?H[.[uEr"'kDmDq?Xd5mC"r]n9;Es@*(B-38-!A9UG^Li%/^h<-A4*]!&Hu,t2H%d@=J!C-?Br6s;Plp+J8'.1M5#W@6jMK0n
%g4'#P.%bq#?Rc?hM%&e6+D0R3=%Q4Pqr5T@s-#+,!l_LHG.`!!rgj2Q9;XtZF9bbObk"T_4+*sm*PRWsJ>sn$%C/7o%L8V$UqOZi
%g<K^[Trk[b6D9GsJp(rN\C(![hJ)lR_[tu+2%-cY^&[&iqjb.kgg$QE.fZ'Ns3F0jTb0ahJ\P.X^Jjn,hbeS3'KV7XG3V9L)g*6A
%9:-;$;DX3\/AOkJVMj"Ai&c(:MOEc8=R(q=P!6%e?""[h=6NE57gFbscS&#N3nt,4%sI`8oDG%[Sb!3gS[/8k7bKSlPh^79CZ""u
%qqik"s'h5Kl?8!)\V/t-clP+/i^BW,>!YkNPf&)6&1X6($o"d1O_dg`KmGM^pD]j#5!m[;?ASJd8,QDnd)Lj(F&lPJ#F$G<3CBq$
%f9bV_S*eYsKJ%*8Jq1]"d)r#Vl\![=eRKWAJ4_21i3p1a^$5C1RXBR!rpg:9]`4<o^)Sa!k#,lBf<3&4\jtNRCbGp:[!Lc-:Z'!4
%/QqdD')OQ:lhH%E\5-pcrA>Ed?@W"FcTcj@j%o'_066#m;@B<RE.%2L>TU]WFBop'b9+H2^]-7:-i2r*-u8Yi:-oWQpm9psfCSM8
%8Y3s@B9(l];ag"&kF?nL=9jm^.8Y"TE^NR3"9s]M#WbrRN'k[*93ZI*ND&ma]J5<[<(2ZL0aON9:l$?e*6cK,I$'md;tgDeS7*DG
%W7mF`:+-0=8fY=l+JP<>,RY>'e)5T,b94]JgTfiJSmht9mfPkm2Qs\#T/<aB7sZL:MtgTqcbi]Y37O*KCS5Y[.S8rU^td9M/><3A
%=pOT>0M9R/bRRbrWfcP$jsma_H#KSGISV80p^n0d89gp'd@(ij&jNq*R@(9\_LUUCVgk(H"EC;pc+Y3r8t?%IMcs:Qe&jN;_=HDW
%W7bZ+K$X$+QL"s\88*69:554TQm:H**f5NX,tJ;+P'[sfJTf+nl,Q,%p<i6B^=ZP7(Uhm#CoH\:LbK5R7Nkqmal";=37;=]AJCIk
%`Vqnml,`C]Cm%8B5tq>;J/mp?`W7-"e;.S[<WJ7Td&D@lN-ZOb9>kBf8UecFLb-(Ric'b)6f#[4!DY(0'7M-R+mStp\De]S[NAk[
%KbHK$OOkJ8=IHrJ,6bW__RRukV-lRc[cDltAolf[c5sl/F8?*s>4kZ@75@@)ZNjQd/2dtJ/E&sK^`.G+Jr)i&$!\TX\#3b#.7l*#
%C(mH);GU#>0]-CQSDf06m.h'$\FN1]5M0PR44IK)M^%@mOX8&)j6B1Xk4g9Jg!hRl*uGp8i%LZb3R1BIG<(Skp-%Z#l[JGEfBET0
%$ksG7lF=,5!CmEt*l;2ujL.RThD#QN^MK&nU\=cs]=<]l)PL-'PW?#[([(5-@nCdG&_2?+d0\e@`BOO_\6?h%XlutlnnfmPPEI6:
%Ou/ld8OdAX'-Q&"?3I5n%s$#R_\?@V%OU&*-R"F[`<#^-kp@2SHmkDo;WZQ?d(PuNW4Jet:'Q=4V$2[;(ei`C3U`ipF[8D]o+K;S
%,u\0C99o]j&^L)!CCVV7P%ijO3I^/?qIiI>_>\^SN4Nu9$>CLCg>AN_d'#u?7Qtlsh$-ARWml(IJN;#S$co0`%k_7h-P9qOU:S9%
%Vhsmi&@j12=Khf:77t\qIZL.A$:KMo+3(!m.G0nW!`4.jo^f%>dc!t<%XmfU*0;dC#h;6`NSE7k&5;\O5[n^h6TU$rG<SY(5T'e>
%;tZn*-+/X>>?:pK!"[2V:rJc=Kl63b&@?bS(8,<"iP`!aE]ZApM;7=?5J<8,1SXQ!I$^Go9Bn&\4+9@9Q^gVm[ufa>TRDV>%Dq>e
%d_iEZLq=[Yn4saq'1>2*kh>'VUFRQ,%d2PXU=nf[7c$_Fk7!B3ZjX)!Eqr[FXkCNN%?Bh=TGkA*YdTmO&Q/,QDp?*q(?rAE,uhD(
%p\5g`c`6\99956(4igm93O3-RF\-dGlX7cl!NM[;XnL_]5a#uD-S^t$A%8=71"3>di:=S%5&>QDe90?f&Cu6L,4)`\9R7HW6fGIP
%oo6"L$\O'S--8pA`Q;:F_9EY%5&!P86fD`X2(4dHQPbT*]L>ain6=d35p!V9*4aZfEe$X)9G6;jjQZq;7]kB#C/)3jC[K1LPr3aJ
%3]q/erY^9+$!e3`6fRimWmk2h)g*]!dr7-'g@fYXH@1Pt$^q>Ae['Rf#E2W'(S\@HDkS$3ggI,-[l2QbTpTak/%mu+7it_qQF3AB
%U2)MLAmG#-*F&XdlcR=_q,FrN-DG<rNs:s2.M\qf+T,b"[!AR3+N-h5%EbNm;`/2o&aM>39uVN$Ngpq_WgjWjJR.^NMG^?5[RbN@
%Kc\,$_jf5REI6Vlc\3B"7.,l"R#:T!b$K<dWDf"4S>o]]nae6@.X;ioT'&D!KK$8"LAWN<JTd3R>)'/))F<D:QOLM:ROYnC?8jji
%%7XTZd"`\/Ws#n&^iXD0Xt]Jb522>q5Wfs,g\[S^@_@DYR_u84BG0#*Ks_fqE4Ze`AKT/QEXcnmOY%.ckETSLAUT.=U@V9/38ge!
%\mV<p"+jRfKM5Mp+Td0sZB31$PK/U:&E+ek"F+[=*[QK`Wt8i5,r3DqAmhC8%f'J_`g%UX>"Y]c<R+[B@o/2[#nU99nk;QdBeh)u
%O=Cl'Wl@[@G\4a#3Ar:qe!Wq[,3#^&NLmZp*D>7f#-['[9h`DOLZ95:]4$p:+'NX6;%G_i^:7XKjhS,BNGG;-$p0bNKi?_Gkm9`^
%Kq'bQ).[AJ6fF+,43jCr>5O@NU;cH'k:%0H%<)BkonX`7@*b3"_;Ha::"GL1(MJi9]Sb@oSI;@eDW/PR='HM[g8L3#,Gr_!V&BJ(
%MjF1X*M:BZoseiQM+j*X$CYO-aL16(#TC&s40,@kiM8'Tfnt^m@G#SK2<$JM$`t9Q-Ok/B6/NZl#<O/qrQHP#"t$Hfd\6WV+R\=s
%Hh5n-C429IP^9llVLENJn>RM[f!u&?jN9jK!*;b1^mW+:GotC5;RVB0=$jOe>59YI7<Be)E?b)AS;c<NfuhYh;apbOg%P"d\]g/e
%R?VWdL6XpNX$<.OK32fjl00*kmS!j%.>PE<Y_oI(U5UpqZ"AKs[ZtO!(CFemH-MfIHD(W:,)B]L-Qj/C<0!EVk2:/m++o`R=pKhe
%;6l'9jMt$jl7p^Z(a<[e.nuQ?97i;V+n8)S\YbLB(;bp:,F,l)1$0d46;*&G?O\Eu90Gp(=?n>$]JdeXF')eQMMEjBTX6h)fL75O
%Cu7_K\-e\e))]I0^Ugo+:?G.T.hjf,a<sS^_%W_]&\J[KVn=h;#Kt$=L%VTK`&f":`PfRu,%B4uCnU*bT*S(6d'`"80]W?SnPf-o
%lGLGdD5C7"@Er:+K=i>k81-/pB`X,_0t-nVZYM"+`@cDm#;QU+jjN"nY4NZufn`5T<%eHe4q/8^?P:hqH$.>%ejmjkgq7>`8IbMM
%]7)ph<sTtM.Rc5'&jdlAbjdY+_MNfI$5KB]&EPFi[N,,m$#6L[qH:B]Z&+3,_G>GC:l,2(=!rhCg<SpljiVTS@E$bJ%*S;pS?(`'
%'R5Rm;V>r)hN";uo9,r6Tl`bnkYiV]q*'tY-0]/?D!)=G%TTS]2f^df[R$%A%AfA/[?H/D?3cEc6eJTY3B=sTChs[0O)sN:5W'_i
%eT?ETncHLcfGC35_^jElKr"5i='"?7)%,as<P_l`IK642Ta'&"[Ab7cWqW_Iio]=_F$+IKqX=\5RLaKr<@m@\^<9^KCMTM3Ia9^)
%YU`Vu9SSl]iMZ:5^$ddOF`PQ4?"24'a!=PD%W0SNh'B;SUN)a5Ng7PYW<pM5nYeH<="#9STP_I"YJeQcbfb,<IT9])82-]^OHtf]
%cseY;fm5AMC,ZAu\>#Q^*nf]aoWpkp[pPf(JNToY=&g`nmgORm@N%AF\JuG:^YgLC0(\Mb2"$s"6i[UO"-"K5#@0Xp_ZfRRESr4O
%K',3kI3h%$m4!3.a\jIR:)*?k1i0;RH*GUg1l/aaO\l:of2V<GL_%Ps.NCGi9,[\e040@$&$JEs4PkA763Q@PJ<K#C7tBjf[@jkW
%j.T6lS>]%WC/d<+hIf+(dACG'g9rnpnql%l!37HY[kH)0/P2Ea56FcF1Ig\EQ7Q$2#`>."!ec^H'h/F)]>.(TFMTl,1ZWf=G!*:I
%+H&774q-1WdW$I`G[I_4a@2BO"G@$jb)9hiXtNo-S<a8W"(f4Ce=72K`83;u$*V^mBdJt2D+DBnde_7/D%)jbb.4rE%^</>f!d5'
%os:KsR<Oi'EL0beiX8NpBiD9Yr;;"6YYpY;3e=U8"3H]nY>63:rQ+S-.&&Q3eP;jC+qnrT&<\XR]sGt/,$;<t7Ke-r6d:e[!`77B
%j^^)"96Jb_\:q"eP*a0[3=l0ngeaq3W.9WNTBl^n,hpo+5TEc^/P&o=r?ON]6(pf2oa9N$3hUnSLFU6.k*S1KP`b"[q-O(A`RZ`b
%@Zims$B".lTY&8o?kgb@k(kS-WpEu`;(ffR6kLs:R]#-`]H<n)9nQ3_bDBb9Io]M1mA*sN`<OW7+>m$k`j+>9:raA")lPA/lADgc
%A8MgcDP>[,kQL$)"Wa8b9*X5bC8;@//9#H*>^!8K"l*M;[%&g*69rN21_f'SL:0kV3`H??A/[#^/^6Wo/MNAnVD'M7i`UBpGRO_l
%<ja?M=[7&0M:$;lS?;j(cfr,:>DL:=Ar)S33bdhj"&(X@c<0"$44V\^ZV=YY/.M[^4m\Kl?9S[>.k,[.PQ0SEF1J.EM#^0b=;g(.
%qC[Y&Ni?KGqHc-mqBiRf7+*?+963)Q^d3mFJ-,mqS3D^A#','-KQe6S.r&j@_@#^t9do`tU8h?gTu;fl+g7E2:8&t9,-!#VfEW1b
%GO"JOXMpKCF<1[H!ka4,cL@Db(8!aY*(.bLfYatc($'?H_QY"2<%3hbDf*2M6O1`1Kp74DP'`^F*u(:]9fej!p&5&e_rH'[dSH+e
%V[RF2r<%]7i\_.HRQ2JI9KcmRk6eY\=WE?"Hc=d=id`%mnPUQLT-CtkioaqnZ`r)^5"i.^\fFUp(.+4F@NlTaM)rUb4hM,W:<(T]
%T+cd%#ebO?o'D)R$Pc07?t:UeLOhW-9-SEJg:V1?Ir'a`<Uaa)ct:"=/D&d>c#IRi"p/8c",6"JLCMArOBLf<Af8NJIB_:m$2Z3B
%doa&+7[Rbd7;K1[o0h_@cD\$%9*8[PCotqs6.Q/B(9+HgWJ@7.@\!tnBDBPVp(EQ7:q":5m$[n1TZH1.CaY*Bk<:?820^K+V^L+/
%iupUt!G5KuKR5<)/:OfO^!KAqF+i-p^VTCB<*=i(e?V%qT\Y)1^:Qq:\MRs5N>LJqD4iqOl%I_%8-u-=$f(>Bepop9pL:+*NH7Fu
%)s/-MD*B=c\iqd(E6:5:,4o6/qL43<KU4`04i14o\n.f=cT;@".!aX+H90jM#VaDpW6]XNK(DYMI8dmljI$ciAU?^j&mP<K^dt>#
%99PWnF*:<3jCgRtBJ*&/OX6ngTYqA[lo'=1l,1+G=SA(n;ILIW0QbSM^-(3ZF[A/+deaje./2/`c'9_`"CATZMfj3,O3OV?F0<O7
%)+9Nu6Pi-t/bnne=k4Wp3T#N^7bmA:.,[@Bme/6GMWfh'jd8`.`A*9mIi?3ZrK5?d[D7J_*F#a8:EnC<JdOBC$Bs2nq];1#;)*6&
%\<2>+B,1VOrZ$s@>]\=O[i7L7BF?C?/i_ZG%0C_G2LM/DS*Rp3\1Hq+$(ZFt>hteSUqN$pX?(@I="%.(k&ojoUiUJ-4.&Tbf#aCU
%:eH1gZ7Y!V5'5+'ZB4FESR`;=r9Vk`@mX#PgT)Tp(-)Ku83mrbWGnA=S?k_fM@D2)/-a#"H0S09`0.'19b"I#8Yt:c6m/3h]ebe;
%SA"bR5Ms/8OkNSjC:[,WCb9<RB;];5:@/W&`5f0=%[NN=<S=)Bcoi9tV2-%D&UGkq$s9$RW)Tq3Z?*9KIeQt?6*A]f+TNXJ-2*e?
%Ngb.R[_an/h/gBEk+$W&.2Af7bQ@u`K_:O<0:YWT*a_q`e7aBBhQN_t[uEE96f^HrCet=n-oX*spHBpu%Q2#cH(8P3*TBm1fRnNQ
%!\kE;a+)0\>TB4S\O/9FX2qA=<PN5a"s.Y-\qBjUmb%/JUguYF'%45reN=RIJZd7%<iM9-2T0?h3%:hO#N?2ZbM-gAl_J?PA\f[h
%;XCl:^V^XZTOg[I]q4=Y=L;O/*NH,$IHgFrn=!sa`kiTI>eJ&'G6.B-#hFj(&Z>sJoXi#M*EF[Nkjp*AY^8t8]_17D]%fL"]f@u2
%a^AN3(*fQ)E\[,IlJ,.Q_GkLC?1PU^:o\Jd,F,m(+`%5C36/k7:4;&QH&_mS$)&JlY`kq=D!l?*1;ZqY3j@eM(uQ=tZc$_'j6^TU
%4]/0=1?V.aL(j3@`+$%d7;R#eLZfYh+1h'S,kd?NBQ)#sMjVWjJZ>kp-l9fPSinf0hU&OZU"C'fOeM!AS0"_"?oYn9-[8\4#GYS_
%ckdM87[Ls*AnsQVD+"qon8G`i&_bSh_Q$r#1;Mn-^T&(eOhLBqeI.D4Ao\7e8&1sVF6u"#<A/<JjV48Cqbt0nLgG^CWY_JJEnVC7
%:1&FfI?*eM/S2>[Yii%]?Q&NgKeDWoMce&WA@lfm/8=($HGLe[*6hfl:*/XK)+t.se?'HaNcp1gJ3<PfD()ah%,-6CZ5(n69_AH3
%+r?b*l32pBM/K=0(8t4d=N!gC4gHiPe$9hcU0b'[\L`oUf^6k6QrW)jel@:aPO$Amfm;M;Y$R2Vkm(S?7DHWo+rpF.0/0c=;/`HN
%/C8,J%"+WAU`A"Ef9?XQ)<Y#odU:'C4a>X&&<c,Fn0']Gq1:A$e2?l]\L^sFfE^pQ=^P!Y:l%40G-p6(_M3$\o:q,X6rYi5^^\\d
%HNQd[L_Bpn$rh>@0-Z/a`+G]hM4p:H5&SV\GE+UsILGO(F6s*&/Cg4bOV_;IZ9.<gLdKdN$$;GY->2A/1qLhckQHk`fn0CK?M/_X
%UBUu5`8-I;)h$F9K<Tg9o9\8kFal`n2lZG3E<1ALk"Z"4+R>hrR`/1LE0Ie`=lTe.NC[>Y-LT\_\%'9;/%"c;ef3G62p!>](D6=&
%GA*(g6ZWM9!D^M4CHNpj\n4A/*23%f<8S-d$pF!ND/RX4P%(`_RNVU.c1:7C"c48Y=ubhWU\7U=?l2aI]3)Q/ZCFOjLI<h5/diFL
%>o)(j>Cn\uRtA`Hj5dK'>0In6^9m#>4M=e\Y[E!>^Oh#4G6RE$,A*9hK)./KgDTm'9B'C7G"uq$.pQ898*`T/%679:=D%d>+2/'b
%McpD2b30\<'\(r,qM&B]N`0)LU[2brftD0)-?/KSYjh(Z_#EX^&M&0:&7&dYjjY'p0M0R0F3_[#iPIodp-``"Fm\nr\A26@FR:#%
%RY^WFQp"`-YJeUHEUY<@aGoSG)h^63[?`G/R8[>K3`q,rGTLl<>/_A#D131Zc<LkT"KmN-_Ta7-Ll7FoEunSF,.QIM775@(N5`5r
%ZSRC7_IBU%*:jc+aa2#UHld;rb(s-.4gc-&"Is:`][eDlq:ZfNnoi"XCd$bk4AIjtQ8cRME/Yp>Mip6^'bP,uY:&+!Gb4Er.U;MO
%jh_saTbgKEMjU(q%->,%d<OY)ZuS%V9q$]UFB"m"7@F<F8qsGX2s_!WlGXc@#K[pV3!:Oj[kSkf2'DRfk_G53KP)lrS]5I_7iZ\f
%<\<=jLpJ5*,7aGm*qdMb8)<`?GL$lI)BN8maT22<8Y@W4`jKmDdg_)!M:8cs63g!oLdTP]_dR4[F:LO*"`"!T/7Kc'k"K$4?h;1o
%=Huju5+>$8>bML$?._t%=2]ch@s`W=d"%)(`=/(S/%Dr]f>=[e[a7I:C_9U>>Z'!MFBM),N0+h)79Y[+-Bi64%YHq6!tK$O%*);A
%CnZbVfcZ5C\KZoVo-:#MUg\4Ec8s3=PmaoMEr:SbTj3`KVWk3<qW-qrYk0UFAFr3/UE[95RD"ACg8Gk$erK)m<%QPX'O_n%_hDRb
%P7;Wa-X4O=-_$^*5.P^FPG5^cd3iERC;Vb5jbcH$l;TYVap,F*PV%82PUhnDE@dO.&ECtSfic#YS;TGug#e)`'P")h-kcpR^3Y],
%q82ec?U:$caO4gY(PEW9VmW%#hlAjte$;`qiDmK,in;FZ]W.=\E'reZlD87u[>+G[0s'KlFfNiXgiXl2(mi2Q^C8mUT<l"4T@TeW
%id!4A>BRp`%c:SMqQQ$S4UJA+cI3TT55,:%jnV2YM>d,9GPM"d`/&MBeuOTL*9,eRX(r")T^,FJ=9Od9#cU3G9,4eM<-ojUjkrtW
%<C^A!ee1;B@q]+/kJc"fKlU-9^CW",.1n@N>\Y/"(Js>*:Glk)%W57p=2"+;n(4kPV?(ho[4I(h3gee##TDW0Dl$F3'7&:d6diTf
%?"3t8_%AM_-$KS&]6XZb&`l&c3>)/^*+B_0&n4!*VQ4J<Aq"5Mn$F.No*Jtp`"%@A2(>WQd_.1;L?igs?F"UC&K4(pBH%&i`jF8H
%6=N"tm%Op*:n/q9Cg4E8EO<(F!jGKY`q<(2U,rE11h]o?]I]Sf:8\`"lArH,fBns"_Q*eSh<j]!$D/bD20*s0K5_&$G:>li`m?n5
%f=admF!u[`TuNEdX]C/KlX$!((85Wd8f\i<T[o5H9G>%7O/oKsm0C`;b::]#gllET]E\e.V;^1c)lM+%<[5g+..gJINc-+^2TZ%Q
%4GoS2Tg:Lj;g$:F_OOW@hd/=GX0rSoU%'Y(L$Rp4BYc.@/o[Mpd+tQV'oW0*kR`*4fEDji's=U\`Wn]#5u/75l'quPIui#pX_pkL
%nj`;:a\am\Qpu8H=MX[+$!#lVd<TfYTKSH[F+H5PZeK7gFBL\\qJfq'3#c(q5o<fLTU[B@Yn[>/R^Ya[*<u.!(Q=i;'5_l!LhRJ)
%]\E$YGgOZ)el7Gj1jYcpI_17qX@pa)&'.ia[gPMb[,afcVSWE/mb1Y425W\_Ur;h9.P*!gjgs/J/VO@b-pu?#gb"4.8#@3JeP_21
%BJDnd(Xu?=>&^Q[?:Kng+%f+j.3]5#O6a49,&B&!7P0;u\loFM@c;rsM^((F$@K5q)T4IhTo*,IIPZ!Z:/BNMKuPHo,uM-+gDii8
%g)\/EV%B]00&*G'&.$RPZWIR>A"3X=YnUC*,.&<-3dp)R87uM.JZkA+K.tIM$'mB(/b=WEcBi]\Q>lCkhX8H='c&EQmF=mF9SKuj
%P*XF_$3A\-/Rp<<d)B+#&F8[1mC3A8C+U^bfe$c.4:i_siN3Ck+s<,\Ab."f[7S*4c/$a?Yb!+f>+5ag+qRI6&4,.1FDX:)bE-e!
%Vd0@UOI`&6(2#lDIo@AV%$uj7I?J#Oj(U5B'=-;\,=R`5b0G3(Tn+fs5o*mF??68ZH%=dXN[M"4Spf6nKZlFpj>?O[TET!1Jen-/
%Mui>&5pIM.U$A5^6j-dV%4a)nO_I4bHV7%o+@::hn(CaH)=]];-m/;CPGA3mg,C7#gYC5iG$iB0'I9_0E@4CUd%qmlIZ*GVm!S1E
%8/h:"N98VN>B1aha;q^iCPYuP["p.<jdc/t2J'drHQp.'ON\7l`8Y5EF1-k8$'Kh=hqKVO!\sT`N#[\gSP"6-Nm(n5A4,`1b-=1.
%gRY*"C*_$O]P<uR.nF9N^On`WOr4]'d"cd1'%!N2YZX*k>m*`OfX;#K_Ps+18W-]3JEc>;@ML07a6u]l;0\OnXT^=OmlS"Gi<q#6
%8%?b<^;k5HAO<(C]!ooJ-,fsR,R9lfKQCqmmND!'eq#"%UT`t"R%7oK1(&$%C&qL`"bmUZ70L>!^?.QKe*I_<KuC"jN#iR-3]f`U
%9)+r'm&h^M?;:t#d><<t4(KacmPbk)/bcL3-^Kip+KTfa=_\`d@5o?N//ca8JKuJ0Q^VV&Wh$Ykn6p2%,l,TWHcCq^.Xu%Oq/G,L
%'e.thcfgt,o:=Pi\n?D23.a$Fp@0T=Y7ne$]\f1T?E;cSpb1!.6sC6o&/q<%a4>HsXntk$,c1._$-(MI2crBJQKD#>#B`d>CImUC
%Mck*dYk-6/[52qhG6jILrfkpK,)l1S_)G`@CNLs2b1i0,Y"._q_J63tO#!H1Vtnt1=8T6g(]uP)?5t/2*3ln7VZVo>M>-PgGYZWL
%*%n>5C-\Y;1K6Mq"kb#q#s!R3$;:'s*N.U_=%cPn<K+k3Eu7i.mld]`fg&UpZ:,0h1,b-qNR^ZDj2f+WEggAK$9X84jkeW`Hs2[d
%/B;=#El+]2Wc/^H%DiDJ$pC%?k]UAV:eoQT$i?l\gZd)UiW.@hal%r#7"a]pA/h7VmMUD?EtL,@lLDOXUa`^6?XYs5GSK`2glQ!k
%%r:9T"'moGK373%"Rl85p)>mYSo3_M5VfXH6Us=tTOJu`'NoRS<faL'W6QeeY@61uN#4`+G!C_5[.gp8@2P[<0@"@o;A.[o?kjJ!
%8:='Rha$FoDSs>/&F8]G+h@lm.eP+_OXd95fUfW3?qMcV%Y+SKf4+2$6a>eDlkGUj2GS+-mZ6=U2JpbU]%ET+@bRF$[F/MoH_tSZ
%HM,8LS05;=BU*U#_pJ(4`q4)@Ms8n;N9Qa@nud*lV]@X&dY4_&2m0O`ng"`WA)*$h$-Enf&6l9_B^T.h"bIA]Bd!N#!@7H]8YR1l
%bsLVp^m4Pc>"Un7L)3V@U6uF3[6@g5Zp'tNVtCqFn8dJglSC1cbVkiQTh4=(`VODDMtPc?L\2O#`)`.W(W>6*>,KD%@WR/u6e`Sh
%eOaIOQVMK\HBaOL5$tg,k;rt2>j-X;7e6[Lp2O$E,Ykujf$l0%*i8b6Xf@]nZ^aM,g?-(FNE*Y[]R<:4j^KB$m7P)mog4hPeiL&U
%3kh$A#k-;t_[sfWC0P;'L8m/T/2O1u:2;<p$XGVC#%9>AAd.@WMb"i%-R4ebX(?6.77%#H,rQJk(2+F9(-[d2TK`61'+70[ZWhm*
%m4>>b(MoVU?)uh9&Q'R.]%R<,_>+NV4UMstq]@G*QfNa/'O7):9U]J6W*OX^CJS_V*q'I]]W?:5T\O"Q=N/!V;")4BgS$seLUbHG
%&ZTEIR')2o<[?JCRjN`1Vd'+sfOo`8fOkabm#-tHe8'QVE=p_N`62[+q][$$,URPGm^jsl;#L[omj"gV^kdDPhEsmOW__&h-^BGO
%A#[>LMf_hA%WRX/,6$h]]"^1Z2+1!%Oo-bPOo,X)8:D0MH@o_kU0NB:?^s;\ac?ZZ=\Y4ETuYt_?3I/rK2>Xkn%u=jOkc=U-J-7a
%A4g33KF22"d(*fjPp[]]X1N0)3+\9r2Q$ef\L`I.mPfehd5mZomh?A0eAl]V'M$ff;b,FNd+ZAcGX`t3@>6[O?p-$W1_X%[9b,P%
%!I^c7+LD<hgtFl*![;!,!s&p<;MKKUWuN@n)am-?D;gn05=TfPG\m!I!J9VKl!QX'B*@TZYR!ciNQ'-PHo,HW,)pGtN%N7$H?MW:
%KI!-2:nA!GN]O%n\q-s6`t[4ET:qW3f[XR+$l&8B*!uEf@bVsV"53/?$&J6WR'*S7!q\c4<:2h2:>bl#6D-fZnAlt.a4sH=nsT!Z
%k%c"uFg,g_lbqC/e(VXGQ5ted<7_\'NGUgOF!?7"b)Hp".jJaS1]"bib_k^)+r6Rs\RC8\)qXmOUTU)6oKkkA9ukh#]CiDJb%@fs
%UirfDD%%?rlOtt8Z1AWd"$NZT=9JjC2!nhT+0r3JR6At=I<QR/S\SH]WQERNCO4cl]k$0i#1\Y^]p"9QK3rt@0H<4?U1YO`9F:XR
%f_+!7a'mq&Gjh"OMn"eK]Y,BmnPmG'3<M7ef;WHG\bq_)ci_*H/?l<'I!;9W>$?P[i<W2me1p.#^<C#FESOk>i'm@XHXr(!Qm(6u
%o0DXY%5i_s&+:/ClX_t[>siGXfcU]O8`5t\@kG6N:#,Aaif$j[53BP$pAnNT1C[Wi4n$=7P_RqLF$t#S]$Y,Sp,k6RMp)U"Iq-*3
%.;5;_gDIoa9&3#oC.PWFHDf#eB\;60Ro@j6hf\<5FJ[4qZ#'uP+WLXS"N5Td9NP:,4)I0R^,'V\.c9hU(+Gc"^Vc8FN[^(Uk!e&L
%k/e=;";h1M9$Z__&[p",,6MpE&E9V,Zn[VhYfJ(!eo_3&:"&48oU@0^p/r)DZGg/E(s33Zru"YhcB,C__V/84_ROA5HtB!Gol<*g
%M:hMEJ4TME&*H>;0.NS-U8iKsTi&_tQYV:[?^t2+^P-W*@Ln!sGu0n2cRM"IlJd]KelVM_\K.`rhNE82ksQW,H'4XsO'[1`6C["[
%LY7I"\+u)+F:I*Qh<AUa6PU@ugAlmTmO[,N+>\``=$FE>ig=bVfEPjhoFOR%k"\&M/DD9R11N>L%1_o$lqkI%%7inNE\/frJ8__m
%@>N?*$+NkeG9iIL/-QuLDATHa68u&U+q3(2QHuc9NgX-bGmPK^eT)XFF'ACVH;_pD=QmUZ=N',9!0kp@Q>^.Z#L.(4_hI]dndX56
%Y!p%/%=mb#A(V";H;5j2#[eMq9@Lm>\3ktl[J?L.gC)oS,A#PR@iWc=]Z`;WGG`<J5\B#CS,44WP+H"':?2!]g3+a(NYGZWj\G(h
%TION`C;#g]Mpin3B<u>Ccn&>7Hp[I1X%7a_X!Vh/>4QSl0F4.D/tC6(KO=G0?CMaj=nROse7WIGMJ%IF4\;P^&4$XRh2U87D@;'V
%^(f:qm'<L@dih>lTE3RdQ<r*NBo]\c:.g6*!^Tb76MjRl1Qk1_p?bu"a>H^qi"_e96Ub2dW9[Rm%9,,Ic;#(Y^8U1!>Xe:KF=+Ag
%=+;2S^)r/7I=HIVm+`$Q(V`*Xndn]iW&PXJZoWeeH]](C'"2XQ[:;ZZL95`ACACs;[Xf4aS'k%YJmDqET3ikDlBpiqACuo'^*G!r
%"<'dBp_?Z]bhd"ELSu[;g9R4^9u?^&&tQ=0c%Pe97^\Mbc*J,9'$ej83>,3fs)8(n#usJ$ru-&d_@8>L,gG<qZbNh2Zm`V:1?;.2
%7*a>^%^9"J4tAhc2q]EYXBZeeb6l4Hk2lps!]bV.)b8@"U*t:%.XiGsaOj)JTk)>_0%:PqH/\+-O$ZB@Ss)$%W$Tt)pS%CLm#shq
%Y=q?RancIRC;`^$_24g*KHI3HZ@r+"%V+)!&N69,D_SCKEYW5b[5AAem"14gff*+_,;,&p#^\b-%Vi+D-[2+C34kt(NYa)kjM/C:
%<0t#\8A$>(&sA9O\CLP4@&A,0=>K@h:'d)jo:)joW2Sb.X`hbD77Q'G*$`DjSH\^$K0^K[DpO##*a)VI0/8%ee_$X^mPs*2OGurE
%VDXg/js,kaA^LpnZT?g^aP2TM"VD=:9c3ZScD!=sob5o'aodtsb,.0p;X-8n2"X%-,h!Kr$u:BVZ[HtK.e!]&DF9B-hD`t/N1J(4
%fq5qS'4Q\^0f8L\L6HK\YsZ.+V+QF0mFXe*.;bGV?4+-Yo/&GDQ_B2q>aj$RLDl=bS'0*Cc7fH(G@2,?.WZ(&;7g1ijJiYdY<)u0
%kr?6_VU3d%0$WQ67I6S@4YSBQpQs-hAd`/NlQN5S\&HpO]c.YPp\>Nq/\==N+<HB/^=,U@INV&M&ib`<jsbrs&f5En..%D6Jt]F>
%1^hjqJAOoY)R_ZNWoUO24eXp"hT8/VWc%3,W[4=\k0\81p4A8+g:N`i[a"!j9uj.8H.53PnPP,[>o>2O=BKS2mI8ss$*b)Yo/BDk
%WrkpD6uCbK6pof!#Vc$W59<XXU1!Z/`iU7d6etlcLn5XHP!_;`N1&@3Vp%/6K]rc??;WccDE;7PZ(rlp9IR<.b[hJ-\$Ss*%b7D=
%93Z0GNq7N>[g&e$JG(\4*"&]+,SOof[$BqJ+HCc<GZd,jV)d.3'eWXa)R1.8gnhU2gTaAi`G?*03s*]POMgM[mC\>?#@Je0ZV)JX
%>R^0%1l,Wg,W9-r7b'Ud@o^3`6'c)Q805'-c(fq=EkdL,LZ.PZq.jK8oW#B?-pbuCN,/$qfsORI3MB^_31Z$5(IUuW$q4okW_'D.
%NKKH7JUM0(=4Jn)BcU/8k=R)4*`C>l:Dh8nF(^=Y;.4GYM)TcXDD[=*!g2YaVEd<5fG08Q5#[t'2i8&t30ICL8hulJ`j$dKU,jC:
%[;?VIKXm?"lFo)F[7YVIZX"O69!Jh7&lsgF&n#?d0SHICM;'qOD8pF]S&s!JcRUbB2InU@SS]X!+uUpk)<TXE2f''FaZb479X9fI
%ACtY,i1c6a,U.XB+?b!547JeZWCn+''4lM@a"p[2$Q1^IfpfSpdD[Z<f=Ppn)IKG6(rRTZD&M%Pm;O[Lo^I8S@L2GVn4-tHP5&IA
%*]j+_qb7?OptAj6+n[9*NO;XejQTFpI4lSG]EA-Yg<SB-:[ZXNH#N?^6T-in@d:*%LSi&@43<>3]->A2CT)&QS?eVZ*F-,N[d\/'
%#>!jLLCkkH<[P2WeIVeKk.To6kCg[?$/.Y8<.*o#$j=H>T\Nb`[KMF^M8&bX4i\u5/_P[-6oIGHc5iF==G+<Nn5a4h>^IP+!T(.1
%",;*+/uiqU4KVcLN&d6B#JW,[1hhcNp<aKB6SqmCeEsYjG.NTkPKC'0MJ'P]Ci0]&1t+%Om3`762DR@qf$knMc(Q/`J4j+lboG5;
%5rA`[MH'B_?@!CiJWaMu6kM@90:#V#9#FJNGXAeOlkpUZ>ak7OT%E#[l4E4eaPil&@l_&pgNNEteW![+5JEMs?(5,B[dbfR:D.i:
%\@#rARHU7)F)IZW72\5sE1OO/>!#;f3XdJ9\&iDJkhMGcUH'Z'A(PBC9l@%Z.98TOHgNqdcQ#i>3"Eo7?Ypq8]A#HM%:4&6\7V>k
%"tR8EI'9_sK:f3SnCm#\,E\ej[VGtN?>YT;D_(Q5_8#+M7M]:Wlu'#8*OflL-U2rAYK1sr)k8up[^r72*O.fRaP`Q+3Thl$IC1_U
%j1K/4F28[a7,@;;k[@*1I+58Kqd<3?WHP4>0AcmaV!gJEaUs'^')0ZMAhXKbKLGR)&3Zs%E`Oh>O-Isr/=TFC91dsQ[hl@s\rt``
%@N!V5(@S#?c(V-fFKpd-`4"I+=80Fh!)8/GlksfI5P%7a'Wa2GI;]r.DsJ)GZqgu7&kh&L6cel!K4gNa>sbN:b6A_`K@qR@f0OA$
%4[rIbA[mi4/,8-5AR3aN6P8)6k;g,2kU5hH3aGRSSpl.V#@)k/Y[stoX#cp0:(#OJa<Llr_^>lC\"aU*+J28`h9FRppp05"TZF0i
%mi4!*aO,4.>O@?s&`";LqTo#LX=>DZ;0IdZU#G"^S\:LGh#c*"g'O\IB@b`o7j:;q?G1H?;K@Us*0TZmM`T+E1mK-%c,EV(RN^IB
%Nd=/e8=!tu`P='2$^b@M,,l!LNXnS#U@`;kF)!s[.7b*DZ9k8,G(/N!2[K(Z\/U7T(*CW0\[EZ]3aTLHBJ;_^Mh[;D2KjfJ[>gWQ
%E+pA>5U:]PZs5O<1og)5l)k6m<74@F!*2"teTO@`ak][#UIqnLT!Nr#c,&4WDLFF03>$,4,a)2S(l@E"8mTAdR#C/p(EY1;52E>@
%_8<5pP$W8DQq!B\K2<NJ\lk>V\CQ'c\l&3FCn[)/A3].Tl--i,J[-bF/=]dQRT52cU2VP&ZS[H.9pP<l%n%eZ5iLC_JiO$@'jW,o
%9CIG-2DO&G16P!7LI1l/JhdL&F&WZi_DMek-=2iHP'Z'J0Im$/"XQ_oUsmuY[HXaZ`49]:qPA#FH.OZ!=Xpbfc8r/a%ts#I0Kr."
%Z'p;R(1gP.lpA`qpJhh#-C;n6LM&pCX3VDEK,2:,I?k/t[Fk*9Zc%-DUF9E-'SC<21Hu&,b"7K]m^'iqN+-*ONPRu_iH#jS/9LDb
%Z3Xsk1!=3IF6231nLVWMjSe4>6;T&Wo%%GfJQe\B"Ylh-b+YPDoiVp+HML^9V+]u[V$GX8oo$+>9*4j)oi^;!TI[eR/FbL&[(%IU
%r@"+/G\qnOVnqW(`)'%;Z>jL>&RIKoS8s\^"Kk5QMM*mN(M5NI:;k/jbc\)m2O!0a$9Roa@]REMKU+VU@SK9+$:tJ>7%al''Rs/)
%<q)Ef!DD_]3sHKA[65Jm+u!0<&8Sf=kh@Qf@2on"ZO'<KfXCUG]BT-u+@BPR:nfX,X2&6WlN;nQLC6SC$/`2Xr.Xa.6#e7uQkhW+
%K@mpCNM[("L1(YEYBoHu)Id]M?P(-*>;LA&lOj.n&q.)j_rdXcLtkS`dN#M(WBRP8ndLe(*35\o:Pq<a2a;Te`R.+OoonR7g"EL]
%0I.W>NbYEC!?%T[7^3PP/fo:-FXDsZgW<<a&D6erWYkq'j:T@@<mO%5UV'$3gCp.QBfud-*Waa?'u]AcJ*Hm%cR<j3Z#fWCQcsj-
%')M"+ck'"%[2pTGJ9NAla+11&9D=+faV3,Oq,LP)%e36uL2ducNUn?40XOA&6iLOm"Y^R4\#SKK+5L6Bph=cik^:mUb_!)T+:%Nq
%8p61pBhefI`GA@iIDck;[5&G,d1]Q.Bc_S&Pd)uGk[J,-LhUEcf:@ng<X+LNdarDL##'g6g;V94fV7NY%+i`4(:okN%)SAL$J^Ku
%->jOm199I%_OqV(Prhn"Rlda&@aqI_)0NknD7)-lFZ3ASHI`/+86B2nB.]Y1ZmrGP%15k)3&.O9#-=NZAm(S3T&@Oj)(]m71)P\L
%1755(PlYYX*Ft.pTeMrS(,i75C6\9sYq\r1C18mdBjiE["a5-_$K]1H==L_Aahg(4h+B#6C"2%VO@c66QWf37L#Klh45WF#"e6eY
%(sZD=dK@o4V]IA:V1A]ue^8#FKEl%(T(,L\H'E%m<d#l>Wtg\?OrXn"C7A<N(>5CWTW'?Am!qltHE=sc1.9TB4'=g@mV,L6@jkD<
%Dh&QD%!34*%)N8\B(bM%itR$%8C862"Jk2'ef=L=`.cD@%i2_^%i-lqD*50>Z5"D\PldqSn8LQ#X6`XocR&\IX7-+B3Yi[n!P=K"
%&$%O;Ct!?q57%ikaF0@30W(OMm'6^(<-Z&UG.96CbJFA0#]&/e<HsmeeYCX2Vai1'K0GXXTsW1QHfSX=;]VEi>*<LX=b2[1`gbj6
%&<j(r&4F0O:p9!K:l5t;P(h=Fs3SY4P]QR66>k`!n#_GMG.Gfdis&3@i_R]&p#.b<:?YhTo_(g3T,009!8mC8/Bs<X:u0[";\h,L
%X3A=>PSWCnjXr.qV%^,UK,5$6G2R#"X$`jTR(W9GM@.imPQIkgj6BI`3PY7D)ra/R]qc(Dl7c`o0;>dV[:`&./ErhZk,:Sp".*#5
%AqAO,e09W7.01riRN?Ls/WL['<;kY^P\(;?F)t$Q6`F4NeY1JDTQ)BfM`i(Q/^ubE?J)R,'Hfcf+PBFh$8<&B"gIJf!>qgE1._J=
%-"^p\]%'Oc9u4E'!$Gb&SstY03JWY'B*<Y.792eq$BUZ?*Jjji:*[gP+_Ki$![)-\`['4!W"K_)3U.m*5Z\T6LncK&3se1(W`GTj
%RZhThk%LFg(q1ETQKGnCZ5F""FOM5BZ;U`u[]Nl+$O)oRN<3?E"=jX0?*4mW+smHnPZcUl!arh#pE1SG!A^R$no:K+a8oROf_"?p
%1\#QUK:r8_8Kg_c23-g(OJaVbPQFtF63.L(;?1g?DD('D@iSAOH_URQ$^^#IQqdur<b/$,AcW>EY_tXnJ;"mKE+-qm:]QaO$h^U2
%iuHS!Di-X%=<2SB"XLRCFIK8iNmgBhb3GgG<E88:o7S`R4,Xs@2+^&]Cl1<56h>W,ME<n9gO.<&oR'i(Tt&9:O;.7gEG#i`p&fTJ
%drG)3R.-(:T"f6-=%Ik=EM^!OHUc`$gkC_*+NOhPA\oWf[^\4?2Z\f+GTsLuJf'EqnikGs,`_$P1J;ebG_k4[P)k=Na?b`OOb<;N
%?>S(Y%e=_kbA<"Tg^l8^E']H(6(WL`4mZ9<!U6(FF*XmMK9C,a$r=q#4Q/&=9pl+onre6W!k+5DSB>'\WA\^WF)sE_aI@a5r5BS`
%:d?(0aCb]4,?Np193`@nUaZF&PSLb4%U-d`34L)#i#kB5mG7@(K@t.#O6u>BUUrZH8BX$Q")$O7:YI\(k<h["X?B/RRdHu=(H'Pc
%E,\+%^d1_]Y/[:U$:rP!,<;+35sh6O<S<iHQmdQl/fHakZg!XbN?#=gECLGlaj8&E%6>^=0<Nb>)UF[T]I"RQN_p!h*2=A)H=2)D
%N65B?jrE#K#iF/k)iaI'Md33`!KGSsoXmdH!qd=]cfTO-ZtM5jj]oEj7>A9eOH.mJCRF5j]Mk+A,1A=t+`^pF7aO\R*S&GckXJ<9
%gaOG))CaA?KEMf=V^1<l,PAEIit(fVf"Rj#QtDR2`t1hO`StN#9ojKh(Zl!!a<PM&?1ON[]Dt+RmJnF[#NT>7`IP-F&A%:uU2,R^
%eV[-.@Y0do3hP%6\SrI0E[*9]m`;TY7q5DVkj$_=Mk@Ue\pN%<&"ImqdB=O)^YFjoOkdurd>6J@hHU/BWeb:<ct3\?n87l@W['%k
%FTgL@>\du*=Vg)3%jO5BT4`>\bknh".#oEqYh/%/Sp6*IiG6uEl!jA>e;6F_+BLD>P661H=uBYVOZ9?S'\@$lU%"%OR5EtSigNf9
%a$CH\*<[u[&UM4.I?7O.!ujns5''=4"fd3E=+?rKm=GfV(KDQ5]7H%`lJ22T1kTapM)RDK0:j?Zh%V\u)r=:D8GL#!H8+;mV"'`Q
%oq:,=%r5m>UnG$^*jV@!qjC8nICp$+Ys2&+WOqZ4E"\;6#`f+r`J$+"_bm]j0j^6iT&*;Tod!!_qdYEHUgQb*VJU#W]bgQWi+_EN
%OcZ_u$VYftkuo*ql#8^PQ@c(g9-+g5V)4FW'p(Q)$PZ1YE]'Bn@UFY7P-2XAaZCTi#_`:pl<k2,!PdM'%^/1lEZe2KOXjVn;edi#
%_J8GgJEkjR?70r2%R4`p5*4hP2s46j7`(D'G;9_996*1[9R3AL[RUeG($,L8-PNKQS)9^]anm2`%PBEVUG[rPVZfaT;V"%eD[;+L
%c99c$ZL0MIi=;?q0SfhnK_D)PZc&gZQf_,WkFc+e2/@bP,a5#VLaItS*_PG&aQ6[>:NO618F#18e36^%Te^Cn>FWa`4\Eib:gK5S
%Qh)!4d.=_ae8QT_3K1e9V+qM1kh2LbEYqu(Y275C!p-pqoM5+9='$ulN[Re*HDQCe'8.Y4H]0q<81Wk%#:Bl#^h'"QPqn&Q*"Lmr
%%6JsPg-/**jm._n(f#`1L)>Pf2d5J^SCV3-M';'LWB9JU7BFEX0n`k9P4!2*&CHX"#AT*(5i*g\@Bd\s5Z_DS&GlNfK6.iJSK&j@
%)P:`XAt2Ndre,g]<HBo]Yi.Qbi_RMVX&'+[(aG+s,;GQ2jkYZGoPK.0Z_@+)CGZ<Re2SVGnd1s%*-LmM;SJ!pAEb\c`q?T[nr.Bo
%ilAcpBBM-,X^cgep_A\$=9m2KkWl59cG?JFR,b4QVeY95J\RZ&Ch$RdNZrX0if'd]BU$qqlD-o']<upqnVQ-u4Gla&Y_jTg,2:@9
%j6]rmWK9\%9;cB6fb:h]GA([,!_$/&jC[\IM:`SO*2]cmEW"*P'HF&]ceaq=)MFfW-;E*fTU`el]I-_eapHjV(#MK8'&DQliIdL7
%3[469qAg.[(S`(<Y^T^6UgD,/&WnnESX!7XlL6X<>drk:].Y<dL4YS1V3TplO@^i#=5PrjlhEFdT1)g@_.dp)<2A)(02!'NL?>)_
%R=e_mloTBm+I:2dNZFM_`UmY1*=m33lm*hH`!W\cRR:j.jm^'-UK;_-STWU?Ln1okeF1L:"<NG&o,6u(f',OnqGiSOpKQ?MUikmr
%YqB$Is3dDS3L(qGVOWuXF"G0-hKK\9Dic="`qpAE%M;Ji3Ws(.(`@"LHsX,m61!&ji>!1YXs<]jDU"dcG%%&(Qe1$:1tV0C\1J+%
%Q:Qh1D/QM6(Yb#-/9O>@0^^h7Ag[H9E/cXD")8$)N\/Wp_*Enq$tgr>f]PK?aAp.lhTt,,5(JVP9nXff0JZ;FZ6;sdSEZ3?h,:]/
%-2`t%DDpe?Q%q=DPUfqYOrrP-p'N">7l1e3NHOK_Sh@)`DI8\ZTd6?lI&p;hFk8EBPU)f!aMec<!c#"S99]]c2%B@JP6d1=I;m55
%Etps0ca@B/QoU-D]4Pn9j:#9k&nu%iDT$Zh550F5'C+.Z"Tu$$,YcV9)3To6KdKst]Qs]D<4XoQ8[<R9A?VBGktk[cem(!E>GB(5
%i$Fr46Bi<!7GBt^&jnOp@1oC?C5J*>lrVCWYqTNTlpPP3/5^Ga40MgC"+Oe-<GthC;3&'NXli,-7*-5t:UH<2hb3Pm,RJIRo#+^p
%A=tGE)Mih8K6UWi>U;t3f?32D>3q*$b0@a=#TPCIFmfMs_GJK^?B<*kPZ:R``?%GQW"_pLLP?0%(*hiklAJA)mlf(CBr?ECG_blL
%]3jBF\1)ElE9]<R^#ON<hSkXF:+;u!0/`r"NZ*gKS:)Q?>^LF+ACi6]e8J[F5hY7r!<W`n1rdp_CtgZXU7mG^/.%in\nT_?p*jFA
%"?%`(8V2h>b[CRo_7DZTKG8F=-,_(kjE-(H(\#!'fs5A%Q%@3J-7TFWb:2tk\NF:B+UKaEGX<$NRt%&l(P/YYRU:e-%GJa?j4iEL
%'iq]e1UKNk:a$1fH+P&/ld\rn$P]CC#I;.58^O&7M^!37,*"bqcF,p4bJ$q(fp]d'Qd9=CHlnGQP^OV(-e]d,'@"n,IHsZc!R"l)
%loRoIYeKAo:,AVcgK)_=#Us8m,>]2]VF:MQ^s^+Bm(7pSIA6VrSh],u/GRp=J]D44T.dU+/h.]jfO$/#@QC\i#-mH$/7RmP32):p
%,lCT?6Ba`hL=ca4%Yg0?WHi2lIe6#X;[4PhXI+_q.N!nAnKjeW(l!2chGD$>:of1&Ljf9_,[EiDVq6n3DOqn)e\\f`INh0I:J6n'
%B".i],e7CJ'KFK=e()=QO=X?IO-9XM9A.`UofPX>CCA[ToM-a-80pUi3f-HI4t9_I&L5\9ZpPr"FQUAOF$'9Pon>7@r]1mT<*UE$
%ID6r6]@cn8.Ha>b&c9;5^N!]>]VHG&a+;/iio^Y(`i1p3.S<X7:g9S2^i;Fs;&q0%^Xb0'5IBi(FWI_X!0$,(p4bhLOK?mOTh-`&
%lS`lQ65g4+%2JMuDW]<GZ:f7foV7G#]g`]>\/6rbk3UjW46[$k:,n\3JlCs9au[i?,?Z9mh&b_k)N*S&RZei(+HK<TRR;X9P=jFj
%*lIfJZ,7gXkoFb&&0fY@#N`fG=FFQ#Y+W3cr+YUQ+?7e^fdlP\>U`XGP0sNf3R5ds#Fnak!nYDR5.VG.R5B&@jHXLaBkotVjl"Y0
%)8_^%:mm0"CDpRhP\iiFLSI9\)0t++,hNQ7&aurXLDk.93-S29l_\YpP(S;,I*kWS=HFt]YdO%FXK)'c9EolIl694.2eWudH$aDO
%0"^%\=s;4Q9#$6H2plT0g@"/m5QVHd1^L)GGsXb>/kcUEa7iOn^;hRf(EL&01aa^R=3GQ$65h'"3gZAD3];$PBP'5NFck$LN"t)A
%:JQP7Qf\R1<fY(VA3s/AW6Vag"0l4/8FPRbfm+d/[r='o&]@oG-QUls])$V+$^b[jZuR[8JL*t"D6:?<Yo(\J-WsEA(2A@J#[2I7
%pGCC4Lk9fJSS2gtTToWh@\<TY@TO08Li"dZ"FQ'L67s";BY5DmWJne3&ZqKQ.9b4$cD>S"#X`Sa"tD-)%kVF+>Lu6CNB,95-c,\a
%Gq7]Jg&4ruLg!)m8-X9qaQbkf"P`G<K@tIL^[Kp/,.YFo?4;6=k,;;pgRKM"UQYVF_[6NDA%c"5@j$()a^t.2MZ?5)'3oJML?C48
%e4oNA-Rdk4j*l:`e7jkOmpmVS$u+hE;;l8b6sk&7,ZO'`IXCHEXH++):Q&n0Ol1[4,g:j=)efR=<(R_ncIjg-2%9a<0eaWJX2uf5
%I,:=0Tof(KGK=c#TTfZ<A<RBG]M+eFf7cBADV/2*P7M0%'CUujfOUpkM-1:WS3>qH(\iPbONC?f=DPZ^KNNCm#\:Si@52S=+qjEi
%[-UKJqIV1IR%MN0jE]d7.]5N>Gqj+Rk\AbWLm:];@',0Qdq-I,fJEkDfTalAZ1B98dg,[!MY:I5Ce@G@fdP=<MdDa[fJRpd-->7`
%fApKZhl:DAA0@pFXBF";=0nbmCssIrkpk\m=d)dmBHj6Pm#t[,AJ=qj@XVD>AEC>D0,8EY.eZG[QajNM2bm?99@"9_8:;7.75O@7
%/>bmqX%;G%$J8ADZf<sgc/_UNk9V!D?d6]SF!GNr`4cNt^7?nskCM8=n+dn=[`tkn4;TQ$DI]Ph&Q^q3f63sPrC6^1N,oYFG`ac&
%X"P/13qop:7oc7Y'T432=.hU#C)7P4%(72THKEGC'MDsbc(K'>KRS@H0]6_C]:]p^G=#*-Bt.ga<=O`W0bOF=HgeCRacTj6^5n]]
%TjGa?.8uobgr"'W;_sm_d4@_#RR;mUC4ifH,]'ad)&e#6O7S5"8)nBe]feL;S<K5+Q09P`ZIuVE5*6m-IbiV`E8#6="QLW-ShEHA
%4UFUIFEbSLG0IUpZj7_9d^@bs![`bXQ*Vs[D?#@M(`"X-X!SOE.X*hZ^M*DM5XR7IR6;"<>r;#h+`!$XBp!q`j(5#Z![fgjZZMnt
%l"phh<6/MfF)SU)AcrpXN`_jKRk5021CZ0O<Y<1kS6OQq^U[!-igr*7rt&/)C]gO)k#n#p:(^uJ-e/Tg9FL@b33$ChBK\G@YtS=W
%?O;8kmr%O!bIu!>gia9WSU["h]9KaE#ej3(o6c5Gq_=N#17<n^=T&'S9EDHGmS,nC&/7s.!jG=KZ6LKGH!rA)S+ZuRGou[hgX^Pl
%_cnna1mPC@[TA3oSimg7pKg0-h!_mG?usMO9"A0^))3,SnCo1l\N0!E0`mhI-o(-UM^i7^>\Z68oaJ9fPV+2bR:p`daVko0a^uPb
%"06$)QP5I=s):$Q!EW4c(%ZJGi>@-:jAQ0sJ2JC_ha=C]lWGsj@g!PLdl5/n!fLK'(;eiOYScpL4Bl`]^g_mH`\Bni+UnK@Qm/c@
%oFQT0IlQ>2#dgj5lK/Vt#jhK,1bujJ=tG/Fs&@o,[3`hNOTEsqJ\fWm:KqC`@(EUCkBRKQnd!&HT.FnON<!_a!R9&Fl+R+9*e86d
%h#-->;dU(jmnQI:6Th3400*00nNhBFabkbtWd`74<U9JN@U,IFMYSM\VO5[olm_)1BiK#RV]D/k/Jf?aXWncnHJC`4:GBO'N/&Vn
%"n_,b?DNo`5>:>'?k;YVNadbWoLir=/U(*l!:=:fH['qCb,!_&\P&"JjbFpIH?khehR)P47o-_)d4R80N"C8<\'sBdf8ok#CL_BB
%^KaSZKpUN@#J'jg+q+,]5O8S.V/&`ETES1F7`+M&!-]I6$4"o?Bin=eW.c&mBJk5EAmq<\=A@&6Po?.NX<]=[3@o4SrPFgo&[NY6
%*hM6>;0"@\4hG\.9WX3_=i8p%(/.)'bK0cAk>`SWNEZhf;eY>W'NTu4f`NfCOCC46fGD^2.ggoaaFC]as)<'1?WdM%a3O=DnAiE<
%pi,="02\TG0tbKrcqJ2.6.c<[lL69Mi8>s":`(ho<$k,h$KT!oKKb#`G'A0Lo4ij<VI8FUW^NFm'du9%aoj8LC1_NJXN@,NK(B*R
%l$3>kO7-l6Z<Ie@16Pb:)9h[9%,Cc+W0b4!Q4#-dF9X;mPps?5kt5(J\p8pBD'.%f**(XEHFD6S:$28,8:'\#MjCNhiEdZYbiK?8
%#?N?!nnj2D2*5m[ck2UlOk8H>LrOCRHp!k<"4Bn3f`^r'B!t*)B&?`9h-0@L07u=[UN*TMnHT\o;;1F';GSq-K]$3>/mZ]rTI+H&
%IN6Z"c'rl<-c*>PM@>mB@ZB;%MHa?aOA[)HO903W`rV]`5hCph>'p0dRNFM&/ID*9r3ua(L2Qqi_Wj%\Rk(Q.65]hOMW"j]?![5V
%b/_=A"^i'DZ7"fMY[a]-K1B!E.V9Nf*m`,>F_H)f*dh8b&%b2d9qPZlkQahaZ_qU,pAF^bm;p/],;MAek__f6Nh3EPL\'R,-E4C'
%)h%X'\tuUCj)W^kE!W)2FZo[W=kAa=:h1Ep.F2_JPBEEoFY:^5O4-?X4_@4CLEP**o+0NjX/<P/PSAU.>f17ppn,T2)`T.UYs097
%:5K]fm,msd4bb<W+3oKJ\efCThu)Gt2DtFeV+i7TXK70[.=UNU;r\kO,]8X`F:XFFa7#JFV?"ZCM>Q8!2h`?T6@?qFK![ut8as*d
%8U/=F)Y3LOO(EG)LYMM;nL8RKiq)11YJT9I\fURlTti>:j#[b9eM/>qkB\O$!HWS"lObX5cfpRtR)Ub4/jaXfCLmHRZLZCbN*\Wt
%U=\R0\P77H2+%7'eFV`!,?Nbcmf14e7&@"/C^CHa].kX5Mgb5I-@dn0Q$2_J-7Y4[>p_*04*ArH5$4<G^s.p-bq%$?L7Sl196[H!
%n,nl->8SbI6=lR-1%[jbmjHYFZQ.c5hB*!@NN3ZZQcGIa3??\lh2R,2Z1bWWP_4%kcM3#Y&bDOqIn@2\T4!&f,Cd;M&GT7Zmc!^&
%[AAYUGNnWYRsp`B*Mi335A\'-i42_;mrY6t*T%s2^OC+tb*_N3g6+"TmsLgg+3q=q']eXR?u>r&HtHWtj)X"<?6"7T*_kbpLQe]"
%s0/!8O=J@q2O,FSl/m]!]G57o/'4L[U%5?J=iC*/j`kK,Dh'oU7]!+*#?rXDH#ai\i`[s/jc'W%Ef)CM)TRms1R)0e16X.&P3$4$
%DZD.F)T;(J,%G;p`sW\h:?VHuIU7k;N+cho#-_sHXJ;2B+,m5bBI6M>*6mOp$fG\F:OdXHPE.r<REVgJ^JAGsUm<'B1m@HTL-)VD
%aVY=CX`h=#6TfkIE$!6aXcc*<r3Tu,:.Fe"S8I=1SkWb&lH'A0ab`d"Hu[BuF*DkR>+3'W]T:%R6JdK8ZB46HhC[ekHE`L7bgpnE
%Glu-YAJcD-6098dr=,`HY,5G8898U6Y-8@TX`c!@*'\Bbc7'k1J[q595JSjTN^`AARS3rJm+AZ^'$kiU-Y*^@oA`(_aW>-e>``6;
%ap"2^31doi!k[EVJqrTG@kPk%_jh+?--o5VXnrQTM'ZFg"#'pG4$#QcIrE@OGE*kUU<^k'pd#hgS.1)'n;uh)%C/W&fc\`SVZ@Wm
%l/iMcZU$Lb^8]'JBP^C-9Z@jE!\E*./I79MG`LA+##F"e/mq$@_m5S$CMSRbAT=3g%spY3DJa7;UuNnGf/:Cj8j;=Lfj(]'8._73
%LYd*T;;$Xn>AM=+>7P)<OW\f>LQe\pr@jXC)tM>?E\b$\e,kBddaZ/.(E7nhENnd]nRQBCB\.X.6j5eCbJr1//P+>'N[Q%Ul+u$+
%IlItS=@Y<"\8?(OJnV"Smd+DQIQ4L3M"'ZW/pGG8_sEPT>IlFO\JXKOL5.=sk[U==Hq_KDG\a3U,m$\'XR5r\B$c4;M\4ASgl@b,
%N;-gGs!Jm5>.<O(nhEUY':1Ie9i,"@`HJOUnO9iGSABFiY/90N"ns`@39ff%4STa<&o*aMO$6$(S"a]I!"R\u_`6_tg"?@Q\#^C+
%iE:W"rk4jAntUR%b0&I?BE-l_mT4o.mN;G_n_^kQ56F_T^Om:GY]^b0_1.P;!gq@=]Z7EUaFY&K[4eP0po:BGbIdfPn(tO>(+D4o
%E0Ti[BXMW)]-\W@!as+%h%W[J4Fk&H#`fnj7l8%L99mFnRY`n5US;D#AJ1dr^a9gUSsY8dHP&F-+/n!H1:S8r;-9/((fh)jFtIn:
%6t@I=-t0NXRL$-t^?O,Ipt93i",Du*T^Nh_V]l+9,OtQ6]&,HV`DkWKE$$7pfg8B5\8]$lGD;Vl/Kf;nk@k#V>/XT_.r3JBRY,r*
%=_.GGi.<?b']Q:VoG(Y/3j5J?'hQuie:p^1q[hm9okUq]O3D'$luWRj\\9"\Me/3NDO55M-)G`/+C9OtgmC#OIm\qPQs'.uOIiuQ
%ft8R4EF]Xo$^LO`"W#HfgQm9_X!l[;n4d>(]rui]W$W`G6;jP^\:uRbT*oqmWa]K@!U^Xq8O+-+iZifNRpdn'Zk_[N]WVW];q(dP
%?r,55]Ak_SY#=YG?S-\"qgX+-oF9IQ>PipMWqWjlAJVN"Q=]qfhc$p9`kPhHDFc9a]CEW7[et:*5X4lf6=87$Y:>R/*<3>;YA.9F
%>OBbu][adbs8?g&MC'D5qs#8PX%fKdp28uAYbSQ4=#-EPjQ@9Jn203lQ9b..'Al_.iPHbCTS^8hap%:sM.BC,IhiZa0H2st/>qCG
%%['E/di4FAq/*.`7W.#2ZQW;kIHS%0?.7nM)/Hi=`.UCNCDN/hI1_G@#f=MYZHF#a[-t<[TdXH$i]?',8YrHl%PQU-oHZrX*A\D-
%YA)(,OC)PumThdVad1G<qk2dfjjOY)YM5u?EjG/D,ldVrs8"\3s7"c]*e*nH]5PI\ro\Kt6h[STE%J)i`P6ZllbE>Uqes4Ia*5;p
%bJ3u"_o%NWIeVY/?fBtYGkW<Lk^UPNJXue0s7+7<>n_!600+i+l@[*_:QMFk>lL[CEYYq:/r(".9O`e]+omXp=U:CFeOYq-aWF<!
%'[RMgIXW:kAoZ'8qW>YMe$ljb;2Yq"W?PF]N?Gj_QjNN=9u98iYK.e]o)6J(fBkqIAXq![3<-qH/0i3)5L\`W.<,)ko\^`#]'OS`
%3#!sdkc4PC"it.a0$aAU(mY:_R/?$_o+\_449^'Ve*-2&RtQP\?]gtY@/o`\Fo)_U).u[[=\I1l\idFuea(&HD>'5Q\d94"fOj#E
%KA+nk2c&us"?S-?<ju(*g9V3VD(8SV1s8JQYhChCb6,pdi$k,O(?g[qrB5:?#h^u7HBjs0\QW=!MlRq#?$/\mED3nsl#94l]^Up)
%9Z5QgJ@<7u$K4;e*BqPGl\-9?pkZL&?9!r/8`&oS;1%\;;c39=.dHuE-fGmf]Q'87T\^dP@fiO:m5&m%]'mj!qYCjAN!u$G":]IR
%^4_*gnX9#HUE0hY`2!rq0a7P>W`rU$#9h6G=$I:0GuN)cnKb<gnmppM2,mOp@IDr,fu*%n9`.F9bSMUON#)922I5bJRjK#P2Aaga
%-S[eoak#_gNt7i>A-6m5Xq+=`ZG4,`G/*n9o?Vp\otq;IIJ](d?Va`VjS.R0o_%,?doZS0ld%fq:LAPILW?U5s4a_@Hu6@^78kT]
%mY\uq?iTQ[Y9)RA)ufd,]C3K6p?V0spXLA"q=0N<J%f#0IJj>G,2`0rYJ:%plgOkiSq[i1OQ,qGs3oTWr8U$?@#lp!*r:j[o080D
%G8oL$*=hd%^\Z^R^Am]Qj(Y/=rp9[])2%($<!f8NorTUVnk4JODuTVU^O,nKL\#=UJ+1)=If/mMr<L"_^@i)(f6l('O5;[j42,1B
%f@PJ:O*X&k9fM6Q]^<I^o7nFeaVWO??iSB[5?p>A2rB)U_`(pcrguE(onW"NqY#]rN7RdpGJF.#n%QF)c&^aFr'15QRm2B#g94dh
%djtHns*1fps6EbDJ+_c]2h!sUhu.FsK8RA>%@!(hp-G$]2P/A@fC?It9'25ibtG9n#lCBNF;,q9]c,JQ6,"eqlgZ5*FUfm*%^1Mq
%9ouHeD_?DsI>c;%12V?'PjaT2i!Ck5@B[jE@5*p%*Uf3I^?+l1h`lL7h*+5.`qdr,aS.4b-&4V]3Qt%nZQ8V_4/P43OG@$ioaCPE
%[6sq]diDfc2kPK=6_f:ko\[sh?f[/1R>CnB.5MPAS%7:?oPYp*$SG*DPln`+#?[oa!`>.O.0<r6U?YW%1PuPIJ;2;Ig84A+"$N"e
%n*tD-T/SkA\q/Xs_L`nJ)OY0#Hr9PaKh9+9!2+pW3FP/Y?9s,X9'Ig?)bkiX*I.j2n2%Yq:.I>1@%b[f:FU$PdlL(&&Q01JoAdo8
%>PN:T%Ga=;UTc&XM'5CU7"n=Y_*E0@!*fRMlKgu@bdpH*8pB_TKTR+2k]0YH.<Pq`U-_bH/Fj'\5TH*<Z8d^I3<3Fqp;'BO;R/T_
%$/D@ONqfBV!Q2HA6Rm@e(<%pUD.7fXG*N[TXWOp"GH!G$bhfImSo2QK:9!i(Z#H;Kq$PV\pdT[*O`)5A,7Ja7<?o;a6qN_>pc&CN
%iVFD>LTq.8&e9q_,DI2dZ$V\=m0^`^8%^u7M37mBIQ0^S$9)8DEHe!gLS80r25!FDJk*Y$j!MXlrJ/:',5f@&X.tpOHijgjqI*UI
%8U5,uX3/:>p;Ed<A+e1fF*tW.UPEf'HC#\"1Aq2;F&`_(ZnSD=]J:fEEs*(Fg->Mohu.Khim@QUf3Mmo(1fYJ(%m'DM@YjT#K?c$
%-[PY2NZoj37KPXX1V7UK8l$7$D60]rLrT'@-sMr<N$:Y:m`\"jE]*mo+U-\ui^\Nbas*Ggi;''f.J5L&'S?i<Ff65"=dqcih^,>4
%E0aHr@pj=@KZU5pL/9J[W3G:%rF)A8jPk].!'3(Ho4JN>Htm)Q2hS,<ZUrO=]u)$,mD=<YM`1tT^MHp.>ok"'/7`0,9#uO!"Hgii
%()L/2)DE?t4fsd_%^$!(09/"%:*GoG7T\9k#@X7h'\@aY:!P:Dm/@?N]I68@%:E%E[6B8/M81aNOT_!\F%YSM*W6O95sf[%1LP;O
%5.,)INF?h5qE,%Y>Z2?>.*n6LYQtlsKb(oG%6JZXQt?4F*W%]#Ml&fm9_,&S<]&RDcn]lQbdC_f`u7Ih87_RJhm2^[K&s8V8NqVG
%1**TX:Vn;@5Pr/L(j,c!nN*+mmp$[MhM!,"n9&2I1-H#>!KeL!XUa<h$^2QBi5/(.46YGuAJ_-2d:;OB;_4%^[9/1Y^nn,/EJuZr
%jnFr,a,%h\bRSZPKSXXa&i7Mt?RL-g][?V_4=gCo^FgXKPbn=WhhH+2"6^kp*sS)C9=F"q-_^3!I2d3gToko?r\R4pq4\71QZjT.
%^r9.XM`+oJD)Bo.8\P_keEfB?=(^aCK/kTUo`?+$emIL>r)-8cL<("4-X7-i;pmmaKL*XD/Ln^-_P4/L;h3(lk.6-,][/f.Te[gs
%GZ1gNP'BF3<Jn(Sc2c3X/DecEFR,-hOTo-J(s'S&(n5Be<)&KD"(<Jn4^Rb`,m$>f:$#Vp3Gk&lMDu-WPgsgDKW^EXNS@\JDHL;u
%L'2=:jAsf)?)n)7[p8_uA?"%!'Dd^79GJ%,*k2n-R?L60EU"\0KY/LD5r=!uj5"(DcbKN*1(b_uK<VlfLHrg:@I[UV$5`i55nle[
%Yo.gVAWWc:DmpXR9-4Pj;7$Seki-I0B9hT)-B>Bf\-+R=AIr_hV*-Jto>5hH)TA)FbZbG%1,;(-?D=\5@B;rB]:s2X74%OnimUGW
%E$2Ka")`Bh]8nn>J%XIb>8_%Vcl60m)*6AXKLSs(*`bS+OMW84Or$@jE%N2u7$$I]ge_+79iIG@_=B7V<]ASB17r@N_%<VtY!`X1
%@=Hkp[LTG-_IFC:I.$H:G5eej;7N*10]kQB/ISLc)Pkl)GRe_[_;N;,7A=Y%jWHU-cc*te6rM[L\]%Y[>P$3'(TN&Mp`K+F>sD>3
%mG.%>T";/LpYLp2ViSFark%>r/&1bRpUXHYG'2\DXA[b?#HFgJ!L$<5<@70$PV7q^"28p->L(*\8MJ6gdVYtDn'/#ZC=(cjqCmS;
%!N7(A8"Lc.qaj5^Lq22EGjN>0cQ+(OcC]8?%eKNZoF]BAXnaqnT%E=LBedcB?%E!]1/'e:O+#gF$e,/+epFaM&(`-[B()K&eH-B1
%<9?5)*7A6Fg7-oPa$/k\WPbLaq9pt:iM?qTW]r3BQ%+B,9SpRU@"=&WX^*I0Ipb;hi/?P-6TSc769[t^e6V1h\)R_Cqld#KR[Q_*
%-LfoR4`RI5CANpKml`kK<2K1-S)1!>T'S\c*T*?X5OrhgmLEfDF&s0Go0-igU+lHTPW!hH6S$.rFV(-*3onC0r7Go%pQIVjVJ`on
%g;&Q#PiC``l_\^XA(/'^e<0]b\_DJ[o+t^CaO?'rdTiAIRrk+_\3O*b#0Zk\=hY/P$RT,nqiDR+2c(YGR@%[_Y\AjY_$sNJ!R8qk
%i;&u`h.>.<1Lj]!XSa!o*L`d1bnG/J^!"V&*F55-h*5XmoPsq<*g?N&a2`,t`udN#,!!VbXM%h8SO7p>4F7Ra^^pg-nC;d5'2dom
%,CGNF?%%)15Ol")rOLZKc1/l)rT<F\qr+UEJ!f+uY^sY0\#Y!uN&S0[[#&q9hLT/>p1=j7lJ"PIn,K3)dOXp4_:^1OGZ]\T=iS9'
%L*7AXgC#ucfg7s_b_mI_n1YJIBLpC1**8oj4?O*<>%K&>h"35,ITRQ$S6QL1AaBld(u%qPou!WW`np+Qq##j&n<LhogtE+d0KP\4
%,!ECsF='!_dZ'(kW*(<b-n6ai>)t*B6`<*RTTTqHI=JbX6B=s];mWgWqd>g-6f)r<H%i/.;qL;6__h$p#aJ7A3]oX>J(eT0g,Sj=
%A_+c)A<nY'b@[(%,[U]%#D^6rM1ut%Pr]W[Xg(2W)FDn+\$I's<1b]#-VVe16L08<?:0aogr9GGC)1I[(/K?tTtCk^L\HS%:YVAP
%1(G4sX4L[bng<(AXGd'sP'?"K2*'1FGsS\BXe2_lCr$HU":_&14CF%5[D;\o>[SG0Uq,/ak^B\)F3(gZZ)L*s>@[?PTaN3rhs]CW
%+5O\IC@cHW7SZ$-\9'rO3Jdn6_at=C<+,E76/`DA@8P=`+TD*VYSjJ*+#9[D_eg9#4ZlqG]o#s_>FgH("gc@,*-$VRPl8;GC7'j!
%%pYtQm(Js]h7m`DoPt@V6%.>Bh-PB:DdD=M#PVXW4QUY!F(9PeI!GG`;2Nhai;/I!Of61;$H-[ah?@S/5Q<g2?3/<JX4LcIOX&Xe
%?Cf[eJ2;ZSiGh7SV'D!B/5XPR)1ZB$aHr+;MQK!9I.>,7l%d2>Y57SU`l'=qg]6g$O?OZ!BZTG;MEnVeL7VT5_B:Q*rI'mrd-GK<
%a0XPbI<sR18Ctjbo=?<'^hnnF#Y%LIR-4V;1[o!pI9JZ,>H&QkKE^7MSUFr`T@c@!=]e.Pn^/KV0]YX/+*-N.-Wj_i1I*q^170'D
%6+$J:RLJq*-Wshs@Dj>"4M\jNr1#lD9^F^cZ2#p+]RQCpVdKJAJ%ks[^\R9/cen]dVt]0EiV.ilXt*Jdq3uO&I;cXqinCE3^OQ!s
%s7(H9=igS&W`hWu8^mR+MW$t=C?$nI@I9L/plF::`1P$J>tAYhjB)keBPE=Ee-o>"(ND6Gc\CH&5Z5BtebEDQCgIK&-4s>=\RbN&
%.gT&/P3)l[0FOKDr\%6rp)\$NAf"9bR]-Vd8MQN4AGD>CSh4KI<3TU==@JY(nk+g@TsZ>?o#`*QZSu0UB:1@PYC;&e;SdU>l:5\-
%f"3L37"7SaV=rRf1$lqtQb&mU[BA+Glq_?-r/(Rr;LNGB,#H1-da/NCIb4;DLOUiU-R)G1qLN+2hH/D5aXQ!@i33jiKB/Lf(9G;J
%,`#(q4DPRY@0WSC2eO#@HT@*Qo.KHD=^p2L!W`9TQI%=/6&S)mm4PK4ATEnUE`\Gno[n+UUeF.aN@ML>VeWl)8<Mrif0O=T(@`Hu
%md>r:2_s)%fF!=LBbkA-#ftONG\V=!$3jDsI!P.=i)&Y[/fYH7jo?,mBAf3uos<t6XYu`$6"r4k.PfcYho5'kOG&7n592uhUfYDA
%maTG^8-ku<gBkiJC&intJm@\U;+,Dq=oeMd:nWAI:*=p*K#W&)!:R__>1D7F76<htmf)15*<\QhMVNt"&uH$#/]J3BD&D,OTSH-9
%"-anekCGpP=B<N5U]-If'k#$\W!s?-!?S*N\G<i]r_XR_;RQA8aIe/a/PUmP#$S%mauJun<H@oA04E1m6(00kXLr\#Rko..]>==2
%$f>r>A(h+eSX@@9*L@uq%i]8V@1;Ws;2/mP,cP@icAZ$\"lV^Oqi%/>)K@%>pJq"TK'4;+#o1&QHX1ds((W]T5Iat6=@4^75Y!6X
%=CIeRe#?8JPHX[VXCrSXK03HQ[_h+.PeCNA66AoP+gMlhP@l!U(JmL2`m8C[QDu(c"KqHX=$C.LH358pg4C>2bi%#;?onJIcrPoq
%p#"m8HLO:SF;R,[f1`O][VA+uTX7kp5QIPn/n5HEF+"*FJuQQ`"O]1VHZ1FaKfX)`cel2o^3?)$9W0k'<=AR]4/]'J!qW`"IP"r;
%!Q@!)@"?<Fb:aMrL`?0+j\atuQV3^R]8L1U;-5]_AQ,++S$2p/TpVu3(b+i=&SXTIjWTTgNE<Q!mIASSd0"L$;Z@Y#Y3k4#:"Zg6
%MJ/9];Ec[TW3s\rPEble3^uM)%&%E4EUOeJ&3Mb?FN7%CKLdV4p4Ti8*8qKXg@G%95-^T*e//29R8scI=J5Nf(C,a#fq,h\M>_5d
%qgF+UMDr-P"5m6C1Nh=t'ij5@hNE#&6'C.c">0EW_qLilL8oT"Y@m"/K[j_8H3f])Wglc,CpW*XKR.lJ(8j%^gm.h2/aH(q6=Mt;
%./Y<\RfJpZXr"%Q2('Y#.C*6bf(,05Bu'SQ#%d36KEK)m"9qhtD[=O8Tk@F/bR?1pJs6N$+q`oo!#s3YaL#,O,?cJtb(k'Z8;?Mm
%<>?H\BWGMb-mZM!5mS[oQ<hhkjbp+4>-R"ZU0l_gCqljP@FCN_O>[[\ECC5d<jV1r/b>'?fi!qO;!@#qm2!2e022oAm55+*HZ/2X
%ki'cHJ%:#Mf.90sdS;?NN_CfM':?R*+RkU(Z=:Y%"6k:[eku_/McR?;`LZA^5.-(o,4+=6L-7MjWD7_4K<e`leFqM[Tqk+gDHF<Z
%@EC-"FT@#i)rYgo\K__pn,/ibb#B>oNET/UU#5P1^*T'6QrOMI/Z>9FM_\I%bdM+F.-sK`?7$ek4nGW?6DE#`E[^iAINTYj>%E@W
%9LE-QIW4^%"MGhX>,M;1)"MCfbGJ]8!#__;g+.Sr#nor#5!!p_pL&d[&6k-NT0-*h?EX>jCL5lTLeoaZ=2I@EMNd"D1!s2C'A#_J
%DRdPI?/n(0__@&!9aHQ@2g:!&TVW"e1uR6FA6W1$YQ.$mOX#)%k/7@DIQY+Zba'MR.B,AtlS'rF4F"`"8B?4=\cFQ*O1u2L4Ul8s
%_586MCt>Uh,==R"_aE0o5ko39PR$$Ll&':cAjfa;j],_\/&T-'A\Y"'PDu`UfHR0?c9,<?kF,5+_[s9TNbtMRk:1W/Zrjho_Q%^Z
%`%id5$Wt_t8c()V/Esrq?_p[$D+kBAnS:\Ha-.mdb!>guHR1I7b_.Wlf00Rcl'C2N:,4ARd`*+VY$-Q6DKHG)lUh[rR-^.il0^,t
%O;k_oSl,#b506<r/\[$FOEC/"Eqa-PSKcP:*#H!jK;]u>.&l?d:R9]c;eZWWH+8i3(%*!W,2r)LRL.aTXm$rL?4S`N%UH+c@QI+@
%M$rJhQ_As'PC-(eIILVj\fPT5@]FnSp:HosP,;d4g394*:tG9iN#M0=0Ka'\j6?_<f1QOo\$Or=>I3PiOI)'bQ&k6maQ\d"BO/Jk
%)=eW`lJG6`!"+@bSFVs\GTk@E(A-g:=9N&ii%VL3)p-c2[M#R9%26*Q9WVFV_GMaZ'5(N*0W0&Y1H`Qk&G":"Nc(>oTE5O-W66Y"
%/\5.p>7;9Q:C9oJK$M^&iK.:"&]t?#;F$X+dLTm(o)ODqRpH?a"j%&7fO)6egK<Wpi+QYiO[A8ArSlq,44F`5S%!l^2IN$5-h5o+
%rqE,^WESSs"HjKF;SK6D"CR,l$&8`hXkGsub?hk2NCQCP>omL[.GIb+SOsprl<8N)r.8++$g1I6Y:%c4gW>7rRBm^o?2[\hn"C#J
%c)J)Vo!7-d_9I7=BT!qgU(V.=o-B8Mkahm<+oS-&EZAJBHcqn7q&mm2A-eiQBSa:Um1q%K-UA"MD&4huP5Sgg=<p4$&Ls/&(-A7@
%3(`a7n<q(>H7(#O@J8=Y)@1P9h%Q;8J.dPHhqo91a/:7"<WE$ri<=++R&7B?q$-QkKA1+A#uAA-Y-rg=h:!A3"k_Q*Iahpon_e?k
%,6.C5/LpMQVhT!p=!cr>#EZ)r.C>%#Z!li`=l*PqC%d>T2K6>fL4#]AAtAmnRjh3e*>]_)-n!n#KX0#77Co1OL>X>AoATQc6h.%+
%rC],,2H8(sW4JC4?(2#T<EMf,,umK&LfeV.I<3o3rfc("3YuV)OMRmBUf+$7JGbLK;R/E_JLu_s4<1".r5(bm'n_<nYd1+%j(@h:
%J+dis!j;"-gW-tUh3(4,C]W6B@!lO!OX5Qie%kHVFbCDI*8cL>%VQG57cMhdIuu3N7OpmM)FamB:kE%sTj:UlO$N-M"_U$-V4U5X
%d-^\QWpg-BhS.-0(dJ;N7ADO?@djD_`XJ:5,dZ0ED$"T.Z9;^@=RKAnGpZ*cV:G&P7qnkfHb'HTMPJ0@J-3me=0"5Hj5HVYHYD0l
%\h/eSiL^R42ustP&X4sHOqh.Vb1g*!#R&O`Us]D\S<D7_k8T'D\7[kp-/:AoKE[i'bg3RB.:U(Id.kZS]ET/BP-kg\/ek@%S7=@g
%'G[/C#"s89qI:<5W39u@aDb4<+:4Z5P(G^C_&r[)4TTXu`5QX1Clup]_S$b3G).AVoR\-DU-8nn""r15c?)%@\iPq<,G<LK)V[[3
%rYC+;6+.'3-m1e`"mpUNZs_Zj!L^kWFI,"U;TTP,&RMfqDo+]38TLP,gL;>U2G0sZn@nPD/JD^+@I6M>BLPlL]u*9[X+n5G'jNg0
%C^fn!lr+&!Tq-m$@S\HpY=eH^Vt]G!U.>$(U;u0K9OX<O8Ud:M^;?=!6)WnupHC-YDHBi..=Gj(5+MFfM>nuP5U'*OUYB_Vpho3Y
%;80:ZT=cN??OkR>YQfpnD'>=S>Z5XHp(h^h?!G!GIG7l;M_l%jGU5a@#g!K?ii#9TZ>t]j(=6GhpE>)0Cb6)(\=(SB@IP9;'O80N
%_&(-QUV<H6!AoiP=k'*^X"XP\6s[;>?;5pXG6*OSgrDt(JjRcJ"qk*I'N!hr<&MJ40mg@FH<@Zb(E"Du8+NRU&m=p.nF6=Wh_ZEX
%#L?OJBIJ:F6%(l(o])uOB_lrMR0PTdP>TVj'QEFA8K_F/c0:3S>8!<#)'Y]nHT9.E[['*XAG4o[j\:;Nb0:\LeoBj<:uDim"\oM*
%M\&bp>Wt_upLR@i;L_tmAHU4c)Il`)P='1oq2Qi/a:M)uEVi_=b\K[q!VB!%k7K)>7?@s47NC+-KjaT&LbG]&-;r9+`1\loANPos
%[jQ19?As+;!ZX4Z3!q&[S44LFcKfbg0>HLV=aLP??^J5>n2FF/"/4^;>s.-=corj`\#!GPJUsp:28[RARJ@[caO^C1_^GRoKn)W%
%"na_l=FOq`d"&d?56Z$O+YkUbnpJ0ad?@)DrI)$%d!gRnXH:/0.gb\8Oin?<(FC]\Gh(&m(Qf67(e#?!6135f0F'<DZ\2-a=Wr"2
%!l\TS=<!nZN'RFD=/oku0H0=$o*U!<LIJo^mjlR0.I2`!eY\eg).4F'$+pEl*n3Fe9Xn1I@oEb\prGDg;F0MV!7JpM%;a$d:'Xt1
%#(fc/7E`u.0I\KIOAE6HM[&*2X%1Fbj6dL-=V_A4G:`!A\e*DhWs*q+cjd8J%#,`pUC`DK''Y;1s'hWrGgcOnGu`F`FWigH9j3oL
%!EmgG1*m11n1V28ZN?dfTHTL:VK*9*%A++!C&Klc>nj43jMX,E6>Im.%gJrSK6Lng4m@0=O""3-^AB])c4RE4<<RtH8qtUqjRI!G
%Q:3M1D0Hg-,c(L#bb31iFZNo[dGF/(@J++l+p]TC.7>a&1;;2!&Y^?c-h(9&I)15r2V"`3-lfL[PpScN4;@pa//)28AD.+1VFC$@
%0!)&_\s$1AjIGR$,&c-,6U\0U21aK^dGE#\I"^89s$<0PX1d<^`3V]m"m$VZik=DQ=<`<Y.j4s:-&Dg(Hs_i_'%)dP#(<b;[!@kb
%`b+`,HFt*F!g[2D[olEU-4g-[\K'Od7P`(%5'U*j!,!(3l$L1:=l[CqbSd7q%>Pq43aYE'_k1kk^qE1%J^#Si-c2oMg",hg%#_!$
%I\^6=5$jUga(ek4U>Y\@8Im3-NV-5l$5'A'MmBah;-0?%36?I&oueh@Y4g$X*V"JglbCgNdRl,u<L>m(OV?_$IDPYL%G+<r.Mq(F
%6cdo4XXf:S(6NX&ccg#+0nKRV3Z;b#VR&a%jJgCU!I>g7:V&M8"*Ei=?u52L.EU+eJ%[Y1md3"V&bq"_>>$Y6acD7cg)Au@hNjlf
%Q]9OLkV1.K7@mcE[D.$DoKc.+WO@pF&J[_TTO@^l)>5ph[",T@[,?eY(p9_i!W_'kgd$Zj+N[/:-Bt:0r=utXb!fP?A99Nf/''<9
%KYdae7[u`GI=Rh&VFP_keJo#+o5p?mLHO`PdlKs@U6;Vt1(P43!R$bl?KpZ`4s@:lhJcD-!stVAI*RT7a6JDn'0/,$/.\W41h@p^
%:q0\SCWi:uJto-lFVC2Ubshu>Z"H?q$S*5]kkP:hLYcT"D[jBb7(hUUR']>a$F[N-T/*od5T1sJd0I-c4GtR(rYlC%7'3,C-E2nH
%$Q`h+(6'^-i34!J&98\S<"jeHQC7tD/UFkb/6Y.tRt8B\\(!<IS0Da<Lko=R4jJ`=)CZN,/b=`"XTeWk1j`]H_5N!,prU%R:j&U5
%A*#rO$/6<f`7=2)&X8#8i(ded-a0[=DNKnE+hp7`;+k\0TSI].aes=]ml-3V?CZ_JT4OiNc<4bblAJJ*K56Jg8D^At6R^H,S"@Ch
%>HA_.r&TO[O=t;;]T`9Q^%^rGIESArp53UA@'>5l3$C<hNOgXrIGH)kq;*,"bJlmiKNCci_3'NDM_=="\%9H]k88VG`/\8dd/EW=
%cF9ioJ'FMb[P7C';eMc4RK%?n%.gY&E-gdY.TMi.U,SG-]Y@:chI'u8Rkm2CQ7*KJYqm*)!f[N."7L[-=Bd+NCipcW8io4_,T7HQ
%/$O*a`ubdMBE3\Cg>X5(\iq<>g:;]K',Hpm'(,fM",BbaaL2_(;.S3kckSF4m]eO`$)s\S][o$:[5f<SYM%"'QW1aGJ7@q"lYK*h
%0@H=('o\h;7OPJc`9A%uc[n5V3>kbjCNd).@h3P*D^c^<$Xi(6KL_<i#sIe3+Pco.H^n(l!b4Ou_r`i0O>E5Vo#07"?Cl;7h3YFa
%G7nL<@*#(5[Hk<eIUuYK>Q%^$4JMYKb86G#X]bnSFF.V7V@jhY)![m?</8Lqd:=4OMf9;U#Khjh+T^E!@?W#)8SFM.!4&sl/68<.
%`J.g=#=!`S;Lah+(,s_4]OiVV`mKng!gCh6n)t(iY^NO"EH/WN=RMK&Q::otKd#,;n9_6je_hELQCrU/N/aJO+`*X$QW*_.!erX>
%=jb$U2#M:ngQ@,>TWWkT18GOSBS:5i_hBucKF05Ln:F$O1$M2"S61,r2@NbkWApeQTI/QU#R_IIc%Gb-Ogg"?0iERQ)9P#I$,`6P
%?%LXe;+;>QN.a*NnleV-16u&L/WY4]fb&;7HFrG<YniGI7"5LW<G@&#=I]X9raA`fiNXUZ)j[BPVl9Ghp)I%874t8U/$UOKonMt<
%UJ4*qVISJ:K[JBU:XY83:FGHm6U4`9n[Zj.OP0CQ:\mUU7LgNe)/S\6EauW,?+#K%I1)YrCP;MAb[r`[KAUj4hRl(`)2[V5j<V,,
%>6DLMH%Ph@C0FUB20ZiI%t:]c?`.P7YM*3o*!/oCB/,Ya_N(BIanJTQAhhWhSBJ=f_;T\]*TUlHp1%u\&fsMTP4.;5[lSs-keM1[
%p:ehumU%iZH8,O5Dl`6BY"YS1i-6rN:r<\UeZ(aF@Z1^XIY\i<gc`it?nPs6k(Zp2+J#Y\:POgOp)!/V>*P^&aR[5]HS<L`N.hq>
%2%Uc-)\Jb0,YbLq[jIp4/EVJ`+7WlEja1N8VY'e"c>0aMAebHA$KR`7RS%Qaq"M"?V!FmXpXu=2<t&Ji^.AH",<:X])^EACkAdi6
%N"PG5(AW48]oTnFO9U=C6W\>]'OfIJZ5a9$p_VfU]t6H7,0B!m]W1k0ELu/!ctp^[(%U:7%ds8+I-KZCXJ(%Re<@".B)o?Y\?NKb
%,-.30k9>2%:;rjd*a%M?Tmag`Y[LoZ]m9?2hYC\o*;RI`2>@#*`1(,Aq-?PsTE6[g*gY$[a7N6-p)qcq;LOo7FmmI7CZgGYn5UQa
%gm-5$Y5EljkA2\uC'[22?)k=Z(><LO;rA5iq@MH+NB#Lp@?E0o>1_+4BnPDfs.lD-B,VU+#e.@%o6u6JX[^+q6dOYTIb`a]Y*VoE
%UdP`UB7urrDI.#\hcr&;"Y)9K]qItGM,A_O.OotL*Qd0b$k89uOBB?/Feb0h$<M;)@^Co;!2[`Z3]RYEbRS<2VFG%LZ`jQ4!m7?l
%QC0P0:B@%F&>GjpQ:*kM51^]H[nlS/U=$*'#Y:on[A!CT+CSP^eodcJ9:lpK6<</=]7U"_$FaGgH.7IU-:sZW/^nQjMl"sJfB2&V
%L`JI@qQ$6:2nZ+MJ_7"1Sm_l+K4_Z4Am4E(]RiIW34<@][\Ol;]g*X.QQm-TpV@B,7:cs"H)rH_em;@pL*SsWo:XC*M$jMfaqd"d
%1pc$Ad2$f?Y>Nu+KENGZYeC/BmCC;:]Re2ndI.V.`j0&1.c:c6Z-gScLKR1APIm*H^hKuT.@O=nkN@Ktp?gWkE!QbOJk.#(gV$TU
%j]>+`O7ikaK)d\qokSNa<3+kXja.ljC,4XBfr=O8_u#S(nF<`_,Qi%hKQ:?5Ss@&1A[Q"(5UDVaIL'!:.'kmJA0>,)\,Z_J*dj6p
%s%"Y<e[R,D6tEL=6rYSoEYtD'4;ck&@m0]EI+pD$q#%f20<#fPK?I3TVn$&!.81FFYt5&-]k+6R-2tcK26Z!@A@/dK98Xlk'r>-P
%k1=?KOMmC^`'c^S-RhfnjtR4<f`4INW[-8tS-3-^B1U\o^^4>l6EnCAbcmB2D*X\,eV(U#9^!<Y=CnpfTP:>m%W99T:^5:qP`rp+
%PsInkWa3%KU2DNN/p>?UnRaRuXAg'C?og3"Xa-iM$Sp9!?DZ^)CrAfEr0$<nXR]TQYa#f;>27[/?<PbqdOa0Lom\g1)ArclLO6pB
%#buu-.CV^^OtP>+Be`='JZJU)'ALDPQjU6pX@##Y<^<prVr,pgbKNL:OXTZEG<K@8G^J:P^+C7sXqUna/K2/il\G-_N9o,;dgs"?
%a3lV5ij'"RZRu"m!J+ZO']h[9K_gE!8a!Lrkl:TsHmr?25\2lLKEb?)"[t`U!o]!_$F>`hOq0&WbimFZn4<2pmHVKQm.p0"-cCJ_
%^nPA*]*KFsj_E[=/_E6?m[jr@G%CZJ-t7[UU\/uSi^F2XbGN7*nTOqj7BhkiM5eL0#q7[S4JIhBenlL2?Di**6DaG.S"F2BQO@4Z
%NWLKHdt,i(iaM%j@[V8Q[#OFj9]pP>A!sH9s6e&Fqr,X3qpH4(F[o]TY22c$i.)D^Vt\NQ#f],EV6$QLCKPCsFC?Lt)IuN"Ul<=g
%SIZl<G01Q<Q]R(AKk^2q&ts(`Uga:r(A^?`hNCdlM6eD"eob?Y6*+$8bCCuj48E;Y,2FgY/5%O($njp^lrMbl\0<((0drjjTl2%i
%!D+\kGY'2k<WoP4NHRW)G,97)?89,a#/*:4+rSHoAY<B\Kb5R;W<,GSPS5Sk18aJe=UAPT6,e_+61D*L'Gn2X3B?#Y"T'0;FuU'E
%^7^i4e`G%I_Vf)>>g!b\Q-Z*q];mKjWC2F01:;WNWQYC'_%>u^AC1CtJZ3^*+`#\a,5pT=GI''fYc[.rVp'16i4l2-KDf8E$\eL`
%%0LPhU8C):W7?n6J2\TR2i%O?TeAfO^mZE%K670J2dS,Q!s^("pJGA+&E[CV;,U2pk)bCFkC7DYeMTq%e\etn!WF\DKu;_CVAI3i
%*deNoZ%_ds8/akH0<3R=,ft<_N)]p<Y6fnM&$JT#?CEYb6C8R@R0$fPBg>oEJu\qO3'03&,K&.b%oEZCG=`p7,(rZ9D:napCiggQ
%^?i`CMk"<\k_&)&.3oTd^UOhmj4^d/;%pA+k]M;FA^SEaj%!i@m,1s=(cFK/,b8jEDR;R!Ui8Y68V15Ma6<ZsF45StWcQ]ui$&QO
%ii@eO;rN'pb-m&6Qc`QMBuKs/;l/"GnWBbLoGq.h:g\gNL+VlpPErO0:s+KLq*nu$Q3?-J$GQV^:=X?1iD(;KJl8GT.$0bf3,V!4
%ZGSueq4lQ]m:l;5W^sR'?W*,;[HN"i4("TOLdIk:;)A'3.ur9n/gn;ljN@5SlH&&q5UrP.!?ooZ,t*@JSQ]-[*5B\]GM=*974gHE
%+iGG=m#5P@/R=ZRQj0&m":J/GaE(d+S=\X!?<bM8Ee'N[od40\)O")+_G?k6h30/5Tf4Bt6OIj[,YZ::5@P+g1h<U`/)jmf)pj9=
%\T/V=.M&ga4?N#a!\L:_"fZoHn&U-]O'm;3Jd?%mhCmjG5e-Za76+)P/oO5Lg4^;=,4,B(e@H2G(M8MS;k64([=EQp(p0#mTf5;O
%C0=j`:(b?RnCd,\(C)r4K-Vg1@i#?eZ_B.a9GEAZ!NR>[ng3[Di<'cIe2j]\k,@Ec9n$:%:RCjl)[gT5b>-TiDhX5e^EK-h$Nf$h
%X'MdVmd,R)2HV[_04"H;DbgcENEMaGA3MCeFt5*L3RT,/W@".srL@HRSe-eM([H`O3"9j:ndkq/TS2mJG<,?(J@gui.?gM:h)8aT
%0K5S/<YkOd-G8404%M'G*3LcHQtWd,,ff9*S/+C.0URQu]cb?NN=tH6+Zj3o1U>X87/C`!%#+.h)PHqbg(o3YXT_*#)'[#o=OdAn
%#_04Mj)n"j]N(Zep>!gHB=GB7\&D.[D#t;;6s`[)S]d1>h)0IV0S=D2?UMhcPqm(4'[j.XOC"_EDh,t8jfCm++b57l'NuW4Ft&QB
%h*]=(\[b9AQ;+o`N%-h^j.`?J%Aic$Ku%j:fq1d6_3?_`5XIs0..ji.>?3QIC*k[lGme`"d=PsjY9)g]"V.ZT3&g8BFfS5NBTTR5
%3$O/i3V*-9<N(tqW3l:N=bp?MPbb5g#ft@'\A0>f;8i1e3<P5MVGeEQD<1rK[GB@>IhC*D3BJ_igkEF%?kjdWlYcn"@SB[o]8c::
%YU.UWUmj(&lH)6UXa$H;#++8J&b"cADJd%'X*Q[L2;8<?-@FkgZERP"VTMb,Fl:PLTQUpgX$isp$42PWIQnp.ePKY`Anq$XJH&&^
%%\a_2HJ98Cc`3HILE_LHE$#W,2dH,oXur,7o;cUc5-0A*C1TF;-H!R].o)HfeqGA?e^172D8g+HbUjO+\uH9p4E6PO)_)^f+INU?
%FJrhd7^4;RW:Z*c7b7h%,?scY\G@Th"6.bk,CV"o$nuC^"j&Y;%pB&PB6Kr(qHYiXo4\W5cA@H8jeI"JM\-hG7W.m/VA&JQM7VR@
%K"K;17L=p9#YE`J1K/m9)>hu5L2)6X.j/91M>B]KU9io*ariMQ_us(SVkgdQkRufB_cb!N0]R4PWd'sDTL1:5"-B*)Gk"d`!k8^m
%&Y4?,5bfam-8`-EDt1]oKPWo>aeLcH&sgoHZN7Tj/1EGn2OOSp:VsH<KoBt,X,F;"UbGCY5N$:M`UL2a-tT*$JHCkV;c'WU^))F8
%3I!t^05E7Rcb;@YbRU5?66-7,8\o&T2,^@8OWWLTqt[&3,,/2K!=Ko]oONT:1Apeh-Y\*(R_XKk^/;^T>8O,:^[HeT59m"2Ir\ED
%35u-,W3i!k'a7]FLiH)&(//K'>Id-^@1-/t*-pK;d$mD[3AG0L%ae5N=QeN6<m&jV?N>0,+llEO*aJ8JZq^c`a#_!GCG`Pj+kI!O
%M[@pO],VKpBXMrY[($i.#rC#q4K%_,r:)$;gfG8Ehu5[@I'"UBg&'pKLXW`BS1Q83$nHI8"Kk^9#0a9?KSM`uO[#GuqhItNgP>"8
%3'VQ^:M]"jqgX);56b4F,1F-i=m6sBG=Vo-_[ZF:j?RshAWf]W@tZ-.$DumXN3U;<loNOHXFPL>Ql[*;Bf0*tp*.St4u-!UX6a*P
%X@@ff0l4I(\cl%\H8N2QjkW%PTfNcQB("C7G<@u&l*Ts8.i_="-6VfrBdBn'<L6EjKielA%B*V\4nCLnG`q8ra0FD*((!.k30mB'
%R,*',b6[`'RL$s=N/2*_U;$#))-@geSS7HIjek5?P<<%qGoE:F=_n#iQJNL_pJpX>Z=\YZm[/_NDTM4PZ7,#kmm?SSF'b2,#OOg3
%83ljL[TsBM]sq4X])f@#&8sMGUQrlpG^j.P2KJ09j[Zu.1`rVHI-d4%.3l(#&)I,%6a#k[rY/(Xq/`hB.a285bDsJ&jJVN9.4b)=
%>Op6.n+-FJ\2`\ORQG`h-,7N'Ir'JED\_bN#6-N@obI:tjJr8[k0H>m-B7Q[]-l9?XEXJ[9InI=@<gT>+%LVnmk4f]1?+CNSm?fb
%0/Clr6QLN7".<_?VfBEblhaM1Sm"+&$o(*"j&b]Tj"M#>EBKptPNV&)r&E&eI(Zcd[VDf7d(.=1q'?5krMX6&[5r4JZ8EQ-8VJ2i
%,QGYYSnXJ$SM86^kNc1(eQg+5\#aZp<rh'n;7d5'F;M"&/iN)WM6:<*,GS]b*pE[DQ8NUd+iu@:@qT/k+&?pgfa/!B^!9]tgbkE]
%S3HbY94LqY^b3+FU>+[(;<G;an1F-rW>Ccfn0sRV#NPe3+-ZABOr"frBp4Kne2mB+p-'#G_sprc>V1TRURg,kQd#*1bB<H8Ck[pq
%E1@uWJHE%e_7"OK*%V',C!p78Iq&KHO6t_ccgAB,H1Z;f5Q(#9W%:/aHh9Rf3L]mDo=OJ*s7YdIJ+qJ8^A7;[T7=R7"Xf1i2n3mG
%r7-@O'5=ZgBQMcI4tq_39(S#iB?&6[FZ;?ZkML[adoVUfr8BJ%(OlZ$ebu[$gc17?4nY4M55QA8qsMLCs3Q8B>N.15DL'bk/MA$O
%pnF\<=+87.B-]CTHK/9eok^-HEi2F1PN9GoJ>Q-!WHIB::ZT)?rRg9DdbHAQX&fta^@$[PR+KTJKi].E(#DR&"A\7!OIt$V8\V55
%\9nUQ2<tXp5^(KM!fg>]R[t2tQl$0-:Q:Uo'ZHITL.QX"AZs/s:\+IaSmF?)%"$ll)T2R)-[cYp#!t1;N<,Gr_G6L;7n/t5m\Xkq
%_S`iVnq4rdbE!RZ,iA([]c5F;^\@Q&0jM7+ead1W4U76\?T++jE4M9`&XD<bhW&7[?.SWL[gP>P^\u)QHXVLFWZGr[dMB@rU*Wra
%q4L&-dEpYKLP`K\kqh!*iTl),Z(sZ5Jbg40PQ>[!i^JSLi"G@b-B`!<VABS$Wkj6%:EUj5-Je.]1s;S00;?8HI7(,2<o5MnjR1+i
%?U7jpHj89I1SE6kRhd`jp=0Cdi9#e1I=na_@7Fl]eZp'DBHK"IZG?cJJh+kr7HZpEk[bq04d)b+7O;CJcs3k">RKC%B*E8oYsF`e
%q1\[,</=";,>/QGS&816V)cN2Q*5FY&;b=(T>>LG4?WIs+m6=Q>:it`Y\<6`6sA(q7m^<pL5DK:/*;tp'[6o8;@EtNoXHCM7EQ(1
%_H:TUGTNFnTdjHea2:S$rDH,>L&?CdVchl1aJ02<2C8kGZPdN&L<HorI*d9SD<VEQ0cP(+c3i>cS@0ip+frlumZ4<:"&LO0[NKr+
%7Y6/HST'XPM9[@S`pp$Pj%+&u/*hs_'&nqBe4*LZO:6!&@;oij?\OnMoV&#bLg+rV&ZjlB_\HV5_F+jOPS_?Al[VEB%T%e?aXk]m
%++/%J>#QOU-jY,5"%-g``gUFe6>;^=.RCHC?>rqa<E*S]TH$>0$jF1\J['/J822Qi^pj\=r<JGG*]QU6OOfeSaKUu'WXtX#iU+MG
%fB$IhE%!54d=&@de4R@pk2$]tejGC][;nr@!U9l(Feh`CT\\m4fU>/s<"(uVQc-Xi\lHkgT#tG\79L2kjW8?QouScJ2[XCa9=BVP
%;I<::@4].pji>m"RK6XsO#''+J5LiqO'S-oT]%p`=NPM.IW.<8h*M9qVg'A/s*$oaS@'&pO1HO*)*D9:!-3[%1_gd%/]H!Z`<%b;
%9ISMkY:Gf>:fa.#g7JWK7_k'BH&>'[=[_>^?@e![S)VTgghGW<3b^d;4\#u#E`s)"3MR_f-hfU,VANsPj1\c$=$$6jU0X09!^'NB
%X[>5bN'I"eoD;6A4ujaDlHV7nV=ai7E`!Qh7J]/&#rof&T[gmJ66K*>):aXoG]GKdVU+'BTFnT)"KqkT%:N.9";_n'/SPrfr13`L
%=HF5ip+Uap'8O4Qm-t.E5to<8Ra@l.ElFq$1Y=G*I"Z63(<ZWA7J/QRlAMk%j/n.A.V?$('].o+7pVC[d;RmC`"33`cSPurGaMoC
%-%,q%5a@!(:U]9_Q2JSD.b>FLeoXXHe3PDJ/iVB6MD((BL1hKF=Wo>.c5#7qi:?k=NJ)`eQDF<^b-D/\(L:^E%"\lEqF"*aH?4I5
%d!--F,iE!;n5s<n-qZT2>toD>74aMBAP'P[V3hpD6+5f;4?>N"'gs>9j02g7iM59eGc_^!oiG8@p#qDABF:a@)8PC)"u0Ru0kEXa
%'AAp7!;m'4gJUlp6(-7=?riMsKF?:)$d`cGeB["KY#g0PO1>LOV`$hiJ6\%emfC@Q\0'TG3A]8!I;t:'#D,2fq2n/uW88TNbUbga
%i#Z[NZX[<cKc;#c22ZsL0$Y_`)S<5'P*4XaLkGjYc'UI>Jh9m:5p66=h^4BW7-6XSFpTp5NL[P9.C6M2KKCbQ#M"K\B*Cjd0*Ms)
%l=e<k^K$NQ8r*:C-]u)Wbe^)A1+_c8@V8r:i@gh#IdOR7Hp3e@-N[SI<e-hV+d%u8&Wi-mW!lQ:.lStnmQ,AgU24616#KF&M<%U4
%E+=,k(qKUlcUaIWM94GN++aKr"'?q=-"Cb'+MJ;L"4g7!dK$[U>UBUJRNRZr+6IOaT_]??!4HKk-0eqo)DqNH(N1lX0\e,N\gik4
%/k-a5.`.:iS[$Xt/scirK`mXQ)On<E#<eIM^DU8mCJ_"L`mQdudG/Oe?E?.ik]d67bT$p(DdJos0.uOchc<1b.MWJ!TgnIJ+tS1F
%2(1KM4kXB.,=rM62;$*,hZ0?*TaOJ!j&#!8<R@J/[#Yc^jh^/Y*.2!@"9k*(K@W]rh_L7DOXGatb<A6S=`2]^(moSPWT[ohOtpSd
%%$<[BbR%0H%nq<#Q'I#uFA?<1"G9tnd65%SQKIF"`CUPJ&cs5cbF<;[*>kcD[KpVDZd-@!807rT7?(mk3S;F)loeRS._6"OW+G`5
%d2DM4WDZ9LD1`<Fj"/IG5R,cGio/g;Prupa-bg3nNS;dC7N+fOKFUa2YtcId.W5b5r(XPOQV6<%/8_ITr6M#!^a`0n.jkFAfR(=Z
%61?o&4B(TOJdW!I'hScUDrO3'RRE=&4Eso-;iUkm8c1Pn-qYGBZ(9#Rm*>15D5_5P3M\WX>"a6&\g&@gB4T^](k`Pt9/B\l,?NhN
%lQ!k*:6i3mfh\eEmW.W[W^5'DT$fKQDTe=GBZXtdF1DpI5];:0]0Z,Xf<-m?'fL9ih_o.!Deu8edgDMfi*-p9jH]Q9igK9Z5OL_b
%[pbc0Uel[7%>T0H_;M]!/@N`[:9idM3S?tNn(VPdWrBRi,p4`j<kmu*hbQ2Tm/-*sGq*e2.q8'n/+ZPPI=KCApHsqqk"H]^p6ScU
%d%F_0RR&Ndb!EVemc=]WVNkd"WI%;=Cd_J#/5Z+W'lF$rL=*'>+\NYh1,;>0dbmT8/<aq^FPq4LBi45$c/De[+bmrJNP,iCK-%97
%#"A3r>'U%FrNKD\r(%Q&O[0\G<oJ+B(nNoDM=6j)H9T6r90e@bl*[sqlDFt`aF)oK<BR@)=p1CV@3R+l;+0sLYL&P730'H+<l_;C
%VVIp-<K'N=JjeuWAFq2dm`T>jegS_9#MWDfQ@R/)3mkU7&)r3gk>4#Z.[a<^oq[ml/Q@!#fWl*=6!,"]66F?"pVZ)PHu*!_n8@@@
%C,ZWU,)/;4K]Jg_<CUY&/)KQX"?QpC'+Hg6BF0IAKr`!_<;X(KnO<ZcU6XRl+bE!^9a,+iAMR\8k:A%o4Nh@L\IYSl#ac2e+:JKF
%KM!8<8TqV07:&Il`TX\619?ET-f@TiL/j\B*P+!5D`c;jZi;UE&]jTToTXf6!q^q\GuSd0KhAc:n3R/"8eTRcXOmu^Bd@eEOTpYm
%\Qk-;>-j4eB&uC!L,GS7o3k_J%9`kN\Q3F/YWa47iC[(+f4%B&BPt?uBZH&9@cGgS_$^=0pU$=78.$iI`cI6'IP>PG'E=?YJp>0<
%=1Wl`Cl(hn-(cJuRoh$qQ4XCY>.9_0qnO85Wq+sK%Kg-9rf1TbGej^Ij@#ZRpcQn6+m8j9Uj#mQo'Xgp0Mk=?_h(]13YV\5V-L_<
%aB?P6U&8=1RQn6**J,IK:90)LN^1.fl4u+&9;j8Yjus\?YV","Aa*88f;bRO-q6*:1i04on5N?7"p&sLQ[sn1rd(b=*-OH-5KO=!
%VX^[J'85rROFB<<_(]&s$96Q4>&#<&oa<8TO\cZIVb7cN#DL)B+34CB8gn3%09E2paIi9nYf`]g(h1`QGc6;.?rk[Gh3/p;>Z!\o
%X4-k!<TT\"VrM8r+T2p$@jQ,6m*[:+;:gN4$-3-09T'ETdZ"?.cuD&smQO-3Z)48JC/h9$+Yn`?e,Z&E'G@NWKK)L[&!@k`@!.c:
%4\Iqj%Si*=XZXcl_mm'&drl,LU3Aq"L9+p82AVX)PV;?$++.ItiYCC]2N,pH$>UIjFOg&o(cMl<?s3*.OQ^h[4P:mk\4_@Wetm5Y
%Kk?%g%%<3q/-]gI/d]:o?d'n<eBkEulmL@lL#:'=(knK5@%(F;KVAWNmdi=Gc1f[q)1:e"NOZ0!J;=&Z=M3"HEDWpl,n&;Xm&hgG
%71QYr)9HAOQrHD!^:/nG:O=?QmC*(Wj+Vj^llE3m!phuY>Ui3f;uuluZK@+hBacad;%`2c`'p`JM/@.3$Hl=V&TG0s#ac+0!,V2@
%BKK*uMS:6dih]g=E"YF]Pu7>/9SM-ll^)BRDf`Ji6<Zu*C@0q@s57oA:5IrE8>XB+c2:tnaD0rO7_M,s)Q=8b#V%Hq@>gK7kYP0!
%VaP<Nei<CTc*R^7+UOm=9daa(9KTN1CraqcfG/b,c18uibahd;NRg@,PQ<NS&RsI0f'\3,:1%36o4Ttb$0S+c?7^oAd<WWmpni*C
%nU\oL=4R\)(YrX(&`n`J^icEV.Lmo(;W2DZA\sR<d_g]5K\86]cP6A/b^_86X,Upqd$8B/PW[X'=^DL:Zm:fc6E"i8k"N:$liCOZ
%.:c`HR"nD*1-!E>HW>33&+8O0C[()RV3`)$f=Vr\h0VFT5tbkP@SKHN)'o;g+UD_]VHQ;`&%B31kVk>6XkuQ,R_p[$5R6DO.%ZNK
%6m*5QC;:AqiIoEPG+kK&35g(19Fp1G$ecJFZbT(ios,+/TroL6]8.U%n6oj$k#/NOYeS4A81Ql87;*i4c2rT</QpK:nJb/8UL:g)
%_o%"MU+:P-p0o'a/ts2$C=JB-4R&_J_f1#(,t8@n^_80XLa3A.(;fYs\&17GCJdF`#b>7=iDsEN)P@uW']UD=3B:S>\D&nD/M+6B
%;&0C.KP>@b(>+TsO^CA^=#O?%kARl"&bA60@Y#YuAHa4N%,p+T2rk>2pV%<dJn^=4]9*+'6.5-!/Va8WKum"O.*#g`B)8'tC*S'9
%*cj3OA0]ra>EmY*&7WV[`"hU=.oOV[BZr#fYR&>>_8EW-q4m"B%NW"%3^ACF<S,^N_#fE?=2o*=g-Qnpobl!7QM[*"HhBC:dN(;<
%jrqs%.SRud@4q6'dJR+*"@Qhkq+e\#=3;*&>XW4a1G1^3<sG6H[@`lr&Sb",jp$#*[LgDnH8mP*K+u^"P_n*,do@,Cc%m_:KieZN
%Hi8>e,EG<.P]>%OYbqGR.!ZZ^/.N9s=1hAL0Fq\Gm/9CeN-aCR+E3Q7^^^p"N7^t>$:uJ0f9^3eXAScg7OK7<WIW(>k]UV=WhL^U
%kH4XYq@?t_&D3.%jmhl>_jj;a!>k[#p3<i%%Xd7-gUqHH*^a3@a=ek>8Jc!f@W8KsB>`a8\WNo1Q:G*f+:PU'5Cfe%EL^q+\8r.W
%)"+am5:Oi@Q6QYb)/CTg+Q(pSC]ipdd>R+T1a\LiOjY)H%h:s]VkA:`RcO+1<Xn^p=uEGr,-8%X\<*M0_6$iGhhdJp(B.t2#e6q<
%O8IDK"d\M@QL.H^8i`"?I);KBh\la,*+FE:-o(Q/J;e@mB*KDIV@"H1dnB#[`f#e]!Qi)Ug[8n:%0W\[q_;sHhL5_s(ZhnqGJ!gh
%B'J/"9f00,]9MgJ>jm)b1AupTBPXQ/Q-\ron3^,(#P43@^Q>=k+9JAb>VW3Df`FmXR5U$H2TmJc%g3<<FF^84m#"Ug?^Sq4`.[73
%=K*3DF"&:VM&.e9L3cSu4sV@tJs309Q5:Z&)6gD9qMI19>lpZh]b5TU;XC,1E!fZlZilB![IGuU0Wc/l)m$"J^^]kcj_[F&mF;sA
%oMku8IFg$"M)=)_K&><eV#$Z?]XTD)].Z?%+XL')-?0U23+SNP8IR%p6<N%4:LL\fA3PFu(X\UA@fVt3!fdkDEAA=7B!B_oh>e@Q
%S;LUn#(WDV,0fcLE&4]Ngh^0FIP?:?in+EFS1$EYof&R!ikS>s2@F@9m]I)G]d6Nf`9hLfD6_["q7q21Y_%cX)?4nL-"&S&i>3>G
%AP?BYs8=VLrU:M6;Ot]1Q0eDF9nIMr0INCA"pi=;Eq#j"jHk\8L_r:f4iC/9U,7dWg@hQX8G,OI,gJB88ea03KjDY=#^f3=1!7&#
%TrBXK0*mPLBacR@j@1<31+!2m4@4^sYQ/_r-;XgoSOcSk]`FiY$J#a/f[-o#aCHkurI(Uo.I8EXoAC[/R)mu&qZh=N=kT7U&.nbT
%g&)e4GnSCB-S[XidhD:'7(gR(*&#Q1.?;d?Jc(G_Z((hK9mrI\m_=km3'0D<r@+u1J6+2[AY1p274e6_o=5j[*rl5[kEo9JM#Jqk
%H\mkFT$7sL%Nm<Z>qR:9@OT0`1*O!(-k(`<BgYKFXOAfJjqlbf.,``>YtpW>6/t6t5@V%J2B@9#mdLL&%ABXh6LJ=M7A)aq'#IF4
%-7(p:;/t(D[foo%&_Ul;8\WZ1Qq8?fE"`G-8k.T4n8NPZ;nPCJ+<1eW+sIConPP74C8[.<Bu0dcJKFkgc\]$RmMFPY++Y(NmBk=]
%=QbKchD_H>mgs(_o7Tb#H"te4%XTIn8*"b1iZ-f%Jkc;N_Ri9G16*"n5r#gIDeK>C+.8iL"Q?NRp^Ub87AE,['Jq<?M-H,JQaXlu
%0d@7`/22]0,@EG8h5mW*S^W)nd&?MoeGr>Y3&;deh\>,T)Ec?O#ZOshIfL5/69&6DRg36h<s6!hJE'F&:pQS^`,5::]VkkkQ\c#L
%asb-`=A=BC6X!_r,e<E;2J&sdicf#F_A3Q>^UKAK#&,7mB8.#>)(nbs7jA@s!'t27=WJ_9/Jf([9_H5S"qbP/Q;Y#"b<`#0/@7@P
%:8$A_Al,Yupr!<dbjE\jP#[igeJa<Z:lLM1J3JsAY*=cbN,[4lrZ[[%-I8RiqQNMqe#XN*.*+)(\LVmTl&>gcgo[r%p'*K7f]nc'
%L.N%K$-n7g-S-C$]2Crb2L7W54?l22dThAh&C.[9A:9Zf,r5+ST$8kjSZQ,$N$$F$o]Zsu5df[:4pl8MHb^D2L<Q`ZJ5+1?<L?$D
%&gn==Du3(E-7[Mg**AT"rMJ75^]BP^KL1R?K+N:H)i"hgSl/aR0lV:QI9?fq6;lW.Q`j<.Z1b3F;.2JI70^WZp-_N=*+1-]UCA5p
%ZYLh4gM/0Pr!#3&FPIQUYXbM'_hI"R6e0j%OU0i=<?@4?b,uqP^#^]#K7+K0cqWKY#Ac+h!%>\kD;rq0-O(+;@T6!"U_'Vb\=q)r
%Lk[BJ]W@Jk)k$=RX&A2a2igV*#IN+B7_bN",9lK&GckO%c8DYqGdpbVBA>9%V1k"(S#_D=))_gnh@-PmR6<Ygl*ie3IMZ(^].e`X
%#m%LM>]K^(/F4L(:/nlfd3Ah*ZSDD/b=oN]nPR:46`hd]4Z4*PHbnB(4MlomgDZ7r4EO0S=S9<EX=7`o7Y4SMn5LH7e11RG^1Ot(
%Z.:,^N_&G4Hlbg.jO$EgmWC480O$AFa[6el3mo'o$PCQf8DK-PX[?;;;hA9uX&V=SA.j4b;H6d4Tlh7/qNX@r+TM>R^M]UQs7j'A
%BoODhJY[H14mIscQf5\&IWW8ig!W4r9sgl,W@t]/.]f_qT7k8kN6>%%GBlLuZ.6h]nqbI_p[8#=XCE4Bd4ptN*'_?[VOId,`k?p/
%hCXmafp`I,oud)AAi[TB=`l+frlO2+qp8RXm_br)1TP0@!cJ,&c/;d5b,AUkDM$]Rk_O>k=DL?d""d1FVHLE?7E)*m?cjHdnpWrC
%$6W*Ib;;VXjjX(g_M?UL\=>.S8;8DIinR'YX)NC>/j&_#;Z(bRmiO^+C*0#tA,P8FmPO@:_sdd!=nE-Ci?p=hl*I.5eGo'KRX6dr
%%j,j]rcjUp"#@Q-+1\@hLZ+l>jY6V2P2SP\2hFTBJmtt[Fd)=Ak:?,DPC3E"l#lk7>oDf["^ocr0;u&sZ^=&gff_BajC/3>*U*d\
%P*qF$4N^M/8BWijF98;_A6!8JjlQfj'tKcd\U[qo=Ep^lciOgkS`LG@K8_'+!9XiG9c7^^Cl9'MA64X5C8PT"Rh>+d.p(+O!\_K^
%R*!C7RBVYi-GrBRUX,9IM[ETY@mp6uhl#fs5QFAoM!uQ43nMC'7m7Km!OP>:Ta+N+^@F8U+RRa^4cTDDRb>UtHr+*)$g9GB=6.qG
%'tr*Zpa]3%695N=4F!sD3XpOg)Fo,!j5>]'`E2Zh_rDkDDArEQ!^0ADS-K"N>V0l;UWe?4^l64,B,^[u6[Z0,2\9)cI."B0,8%I+
%.XnIGGRi0%:$h0e7K^-]]Z;=^g6&+Z7=JG<0oOe,?Mb>66u+q:r<Tu?[uL-I^F_7We\:TcmAh@TXF+^X`XB,VE-UO!n>9KRT2tq,
%(VB&.Kb)Fm`JW7Opi>=8a*qCja0FM<r\XEI_Oj;I?ff>U^EPnErdFG5`P7K5^@i)4^G#QGkjM/o)Z>*K:SYZXn`/h?Oe7s=55P0!
%T18k'(ggmC9UTt*_&MWGf`)GLI0`?lmZXN+Qtmj#(*&H+j4)[T@/VdPmRSYsKcY,PHj^c:M3W!6"Kp)kO%L<Th/cks9WHc"lMtG=
%]Hm8CR_1G7+a5^;LDBjWMIQ,[W"]JU19<IHi`MF74:utsicur>YDo-9#iCPJhs_Ak\Wa^OM*'WUZFmMGCY][p8=8$9nspqdGZcSP
%&%p`1)e8[hT^%Q^p;PVo5CE5(mmHsMa-",Fn;=m@3+H(T#3:JS5cGt?$p73iW`-Gcm-^af4U+eE6r;DG3_pO'ZdRsVbQm8u7AG^i
%G__8moo'5]c##k&\ciY?Ej6ms]O/Si#0.u-:sK,?$g]@%aDT?9_T>u>9Sd.;n]34ilIaq\Hq4b"/'fVu5njrAGeUgFCbM<Kr6`W3
%>r[^3$2i0O\Q#ZjeJ;EW@,loD\IG(IK]icahW;X1cKU032B`BfD-%GiR/uQC6u%f,Y/iY%,HQWSmLJ5`@jjuhk;/F29&,Q,@7@\S
%N@9#b#h'8BVM;VW-:U]To1n`(NGRnf<N027!m$Y1ron"c;*I#_k*CQ_8XScPNYEI;+'_S!5SdiB);V"h"<k]D@O[4t!'AD16\5XL
%;JR-8/i($MIabA68s94AW=*m8bH&X!UUK_g[IK62"2YafKbA>iM35o@QYS*rZ+B@ZA4b&Ein=2'#eDqsi,L[EEdm!H!%&No_N0E.
%&mCI\mLH`HZDU%\=(\@ZI(.bp>]*Z5SYF>(jPh_%nRuHrYT!,s:HD.KV.E#cl_]<4BM&>(jVQI#j%0uuNN@BL,QL``mt+i]Ea'M;
%k'.>+Zs5Ln+BJB:rkd!/GN1bkGeg]L/a-9phHiVKE$m/qCdZES^\9Z;:EB"QO!,r^OcXWDU@8%)+k,P,r1a-+N^gZE)D?c7ne@tY
%IPO.jeJG(fTfe<FTc[$MeEOhI1/>P8&C8P]O-1l.ZsE#C04>UHgJM'0TF^oV\NG,&k:BA#nMn04H1fP>0b[a_)gT\$3_sBT"G)F-
%;^7.o\V@o29'_sW7E+;2mNJDD'ksbGHp!7JW$jF;eLht0mYJ`#mai"6*!^`0NrqMPYn%?$-:F&#[L,V!1ql>+*af,a/TruUfGDM8
%J6hqh@g1]'-juJ`Af+FSG*8P6V8\8JGI`GFZ1V?LYnBrnMlNmSm5YROT8_e)=e:I]olq5gpFkkdj2VIJB^_;r+&3p;o(s@JpuKQe
%c\If/_:h-\b]@G(!(bOUJ^,?.$#]EFjs(.NM;KQc\5#Zc\)2W6iN("cEY=$PNqRt)S-0\nE/Pq""u3r4rqdePHi3Dho4%VG1BAtV
%&T7MZ_+_'sQ^Qd.?b=$a6%0_._0%'_omW,5j>l9_&:FNi3Ya[(+&6jHEe#Leobn1T]"<3?rt`H.\m13&9-d8H2t,s<3XV!<k%FE6
%:3)4ST&j08mumu(rGDGN]D(Z2mfGFF3;Y>[iJj')Q3PVNmolhe\<:HND'pKW4I4ns%7?/"!.sS-/.[UVqs.AY&.FEZco2b)*!b09
%k<[tZQj+rA:O&=^X5GVVU[7RC.&0O.i69[9Htgf1F4nHjAb7`h!=e*AAm[g@[=IhU[*3P"19;T$bB>n!Mu*JSIul8\?l,u'qHBc4
%0":D9a0WF7ZMs@)I4Wl,(;jAcL4.6%(g"KB?])Pt96,<HhIj&0!J4^-QG2j)&u-l!m6?0MYQtBo?`VH`[;5d7kmYmM1\qo\1SFO.
%`@19jo_#+B*WXk!o:'lW8.b^Wp9Uc9L>;-1b6Zqc3%/c,_-%(XXL8J=FqW*"WfnDJI!Jt_]=>A+?Z0G2*Pr.aqT>sp1'o&"056Vt
%h!a5[Sf30h>G,ZYlXlj%Af5>NlsK=.QB0@`hR3sAjWJnVdMk1$2Un5D3uDT-7V(kC@f)sdX?l.#5q>64pW!(c,h;3&K`L)7X1NCa
%3F`8S-TP'9L#Fr'DH\`@hkgFB5NT-5O:NDnih"/31%4#t[RnQCjl.nD=jBfg4Nf=tFa2`<qd#0OPA]\n:_t7@c:qBU%>=eE"2n'/
%k<R\.mFF;t@KutGS"J<g:X]JL\6a+=-RWK`V>!<(m2msaq5@jC]P#N4SH%[47),irYeiV]U4Kf)$!oAfs*EH+P:,;mn>6qB*XO!e
%DErfWTdYu-_WYGa64C,$I<5X`;9GsGKOGDfpFaZ]0Gh!$8&GX0)3,?B/3(LC$.@_><T+&lY(s06T@o.AYVHMqfMHu"@1\*,>`__0
%:K9g=.U]6D414'g-<N\_2ZrBE_R^YD_R30dZHsC1:o-=iarT`b))a?A]_+3lUu=\t#TD5c`%BfqK!6F++%o([+lLL98ElS[<J_g@
%dYJ(#F,uA^=M**;>uCD"PI2UG*``?1Z&DApBU*N<#-*jiajPkp%'[Q:"O;=e'-Hm%DQ<5PeEljb_XtbM)1rZ4TaIH]R#0r,niL@*
%_-O13.uMHkF7i1T5%6d)1/-Cnf;\9'/AU_2/"?]4ec)3fD?uqD<tqJ04lpg/jta`#!p)pm67&;=!&a'KeR3&1ZsUo7>)Kj$o^SlT
%?qoHTOqh5&@,V6c:gl`ts7GE4*^8[B!#+1GHCd>9nA6R5/Q=F0#a]0m3DHfTLK_""?1br5rFY&'JA'5J\eQbE,cBQc'?W#o!\r/s
%&ssJn]Z[@ki9ZP6ZJlc]AP>D"==rotC8NTZM1eK&4UeE%gI/+@>sC?$e`'S^U?Fr0k8Za>RbURO"K0IZiqZ*[p^/pNX=kO>_UjP$
%@rO@)1gARE:\8EuHU'Nb_Q<L4Ii)oX2*E)Cg/+gV\ZegW[$a0V(I=K<bSUluH%KgF5jucl4:HOib7qgfE$U,@)(-bA-(fjaGRIMJ
%09WXmV^b5mS[8GYKa^,0E(R:V\hL+meq.:o\et=GGQ[$$Uen"0m"275.<LA+b)'RN3K_lC;2Ve))53`Y$J?n0f=VI16OiYqP4.UT
%e6c0u[i,i0LJ453CdIEB&@1ZY>4@bMa9?7tBd6#R(L"u'e[`?ia;XB.RHqn-/Y>!rp-[gcb75*/XGUXlgZGC8j91n3E%RkUUp0<^
%c%NL7:fVTK%O.#BURS%l)K;R=8Vim.cAk^Vf`E=],'_nbT4KTj+r9Ha^lJWSFCqImKotUb6:Mh@/=SSK,15W#-I!B\#i]gVZ9D5C
%@[:taF-9#q`;ZX(gJBP54ZL&H1i/_6i..V^fYulaA=f1LaE>FF7DgD/G%rpo=kju:Y)#_j*0%&hj90VMMqVK=r&3q*XBR:=.oZ8K
%<>YN:q_[r02a[SJ"P5.$:o85M6euS\2X>C9qrQARRaEbRo0Tt-b.nG/cW@p;m$C@a#RSQS.r$J3rV/uog>jh.D$tPg'+_=TY_jD,
%(TQ$[=!0^252(,l*l%b7,^gf=4;Lr^cds;!S8qXq8sfT%V#.E2*Nqc)Xq]HWr=e+pMEL-bqAP"S8)teq39^DZ<j\4E$3jX^^pFL^
%/)/(q`pAbL7Z]rgRnCaYD[t@\Q,.hcos67]iW`8h$HN`;27uR.A3q="EG]2=+oKfTD"HDgQhnTf9'sJF.$&-OiF=fgg%r;[34&0N
%b&bSMe.pS[c(a@PdFid5ODhAHMd^f#i<0.p/jqGI(@CB3+>TQ79WGgrTGK^^EQUO8PIda1@D&`U7ZE.n&.'K?'kAPu)/1ecXDQOs
%+9rd<)_0sW:i6/)"Tl-:M).CW_g'r<$0D>si80(Q$WnY'jZjJXin+<jd&!]fb*U0%bDFCO`%V>XjB"$fQ,;\AM3V2uXDhEGUWJ,7
%n;SYB&"/H,FY97l!3r.\h9LF,T?I[#1Us&7dK"09fk\S81:gL9&"<Q,A.J1b9,"Fo(;A]q<e.?j?GH)AJU('t^KhP!e$is*%^4-m
%Hn1!s)0&,G\3cmdo7FId*%e6Jjh`L_.g)8<mm6Lc>kruLD[);;`W!ki'84`\,cOU._,%:[7"ou2bLF+RA.?R3XFPFq!J#2dDB?hD
%2O<2(d`$L0JM3L^$JW`>.$L6Z5",Wb*3qX("%l(XQ8g<5j!JPm,jdg'n*T.*g^c&IrH\hb)Uk2R-q4P)lD&4P/ZSa:njOj.&?_b!
%i/L:o8@2dK-Fs[&5>V\cbBY<6+2Du,?r\c-JUjE3Ul5X=g245JJlkKW!;J1^@cY@$`h4s5^O!)8],IpC"Sg@tL].V1[<WJ(&T`W:
%Te0QKO/BHLRF8K/pt00)&&GP6>H)mHTQ,D_W?HM7dMH=]p8[J*dnQd[5fhG8$H4DZ+TVgnd5&[gbSc%@?#I`c&8pV@_,Vr/#&L3j
%7a+]I+1qu7l/r1LnjM#kN;%p:QlX?1,pkYVNXIU#g8l1$!p,o^!caqKhM"Oo9p1(]9f@1f]GNOlLec)/h%pWSJQ)L^OXRh,qJ$@O
%[oj*S'.o]]:c2c;N!%B>Hnh9<Cc)e,#FYgaOrf"*Re.OuZD:mS&j;c.3JZs\Y3Z0S(q9#AG!9E*D=WTM7V.]\-EnKh4Te`T>h":K
%"&5(=jlXE0g$#-+FX<BFQI7Fic6)#F-_e0g?'l(pD-HgN;^KP@ZTKXk=q2QnLi`,(m#n!e=.0GN(SHA<m.bP+o#X8*]?pC.*"aeV
%`[l7G[^guIpVDO6_VX89iVh6&AhV0_@p\R>>r/u!NO&15d^+<0#rpn"RQD%OiiSoG7sY;N%hBnD],hn3U3VuIknoAi_(fctgZL;_
%]/i*fJ(3?AjTrN`(uNC?rIer,i6nW=9\F)<D9`-I!hs8A)e-G&c5/*]J[l%>N4d^1SgNS92L/gE08Rc>'`Kh-ahMq'B-SoT+GEs5
%E:<+;<Ikf@L17l@dbNe4,,o;]Lu/+"^]?b.RmN]JD%[K7'O$l^"bOfA/nX+SMZ)+t-%R4a6g:b9L*gm,$p`lrD7d2@""=6;>h9>]
%cXQ/b77VNp._q-/2[HfAC(gl_'nDmr_W#q:VpJQa:kp19Ns^8]VBD$^PslMs+TTOb#pPUtQD+FW]><MDLf'Cg%5Y*\NI7Kqkp9O)
%$\7jNJ?S/A]K6'7ZYj*8Ab9])7@^5)<nJ`^qL]a.@R\,C&^0@o-]2jmPS7iXj@T1TWDZ=^HLL9l^u/_>ed^#&+W=0cCURE]F>"m[
%Y[*j&/u:6#5\#SFZ_bc"=V_%YOg]F%p8;^X:`]eC%b0C;5(Q+'k5;@3pBeV\Cp'7Bd^9*c-4)4'i`PlVdu?q"7-0$GGirD!'m6SU
%e"T.1af$TO!#_2_@X_RhnT*#XV_,f<i@;Gt+ho]s[TT[Kbsl"kb>".+<ulp_7uWI_BP]s86-HnpecQOs!bDSiWN.RI36_F7`l!K_
%bWA7R(P*,%r/8VAqb!XuICYCOB*o1jb5=G@D(t[H@s[%b"k;et3';*F6?d9MkDbI2Xi)2T)]NH>"IGL"2PT1t6g3+%JVCuu0UQe:
%mh'2")?W!+0q?&KUIJW`2U<s_['6Rp9@ls2\/R,P#smp)pL9$(L>8pTqh8jV?[+MqkEe+SnEFWKTD4?Gn;>;@Ne\$F^2"r6o\knR
%/:\5bq2i]`Nmf/$3+U)B:3)9WOMNaZbl;q/Pgs%9o-"3rE;Er);[+SO(grE&$n0s5YW&10>YP4W3up*\H"aYW`\E,#SJ_%k0nXVR
%<*g8o@g7>MA.>#hRD../V/&,(Y&#5gOK)Z3q_</':9L0E3s>W.[`Z/u@"dW,P_0[7D6Y^Lpe53V$Ou3A`/eo>KCcn]IVg:`pZ%rk
%3*!F-#4W&F\me5ZRt<POX<=3iCp>I]AN5`do8<VH4X-(VQiog>g/_d+^/O$IADJqB*Z!<^O9#\?=HNX[j6<JQ)r=_h%pe-K3hSX@
%TdrUeLq-i@h:!-F5:\6H<.BcFK-psIS:9a%p3`\iJ`&+_8=(Dn@T;Ut"iGT%,@7XVL6eZ_?Vn3>JTlNONIN7+HQd2"OaKE\3-/V$
%)Bo7dT'n:I3s0\,"tAF5@.I<dgY0m?aG3F^OH$nZa@[U$^n!u."R*F]9qakbikZ$A_4lIAjA3YtB"O_(Cl+&R*.9eTHFmXTf1CP[
%*$tH3nC3['KPECT63U%`:+i?/Ff@YFVk$J]m[+:N#Sgn!-V$eZ5.2[G"6Ubg5CbHB2io\1pfi^H*Fql`$CMh\3\?e&%D0t`WC'<N
%\\3(IH%Um=e/+%T"bDUtS.1#</igL>CgEhf&e1i.17C0lp;6KRcRIp_ld,.7r8P)NkhTD$]5%fCVe=GI5'NXS@V<<Y#X5ai-MQ\T
%A;6bu$NSguR.n_&]3bSqe+ifVp$gBX5a\s"'d3+Al@+Ag)n?@Xm1]BNd\0iG&XRTb'fjU8jOGrU(ZO\_iTd`Iif.4Z[tc4_-#F7;
%]ib]POSVHkPMUo[;+O@XEq9&h\Fl@/U0YjiUJPK'"_>o\9i?P74]W\!A;h59Ll]94WMhRZdWbXC4!MF)WZnl7J[YDp&=#0tm0]g\
%KRLndLT_BC54%>Y:?mg(lsE:4l3C])7T%@=/X3![6+N@oB^6&h11>f$"@n=NXY45@dJ8jP7i]VBk6ng;#@Q.jm9#$KQQaWXX)a=4
%G53.';=U%XO,V1.nJaer2V_WmFc8d!YnfS]%=a2k1M;]#P!#gT@7UkpQ&C/1#E1rqC+UIQ,S"Htqf0\G,fgfFcVaIC87>(ZCU24.
%'gXg=?"a_1lGo[C++6AqP*m7T"YJ,koK&Oq5[=_m,\Q##&YO$eEf"^cX_PJa38jGffn,V]3BN;K`>DgIN&f(C;V&?g!S_%j1.g8U
%"9B2Peq?B1Y;P<E+Fa(FHdB,HUB/n)_L^OT>UW_L##A<(UB(;g!Q$[g]%3.f=a9,G8*2Snnp=^mk!#7QM*oJIl\al_O?=CD6W0!!
%m>Espnc=>lG&J:f>nYhfTIO]+;+2(:H<lc0/cC>1N'tj#)+aj'<OSWX"_j0SPXVWPMUB.E)p>iPFs+kq8/umfYYK'\-l*2W-eJTe
%iDKGhYj37(D*UhF.0*sS;,oOiXik3>9$l47Kq--6%P9+K6lRl+;A&Tp2T(%GbT&h&WXM-k9je&#SU\RY(1[(15gJJXrVVd;bgqc1
%k@Y"V*^%#Caf:].<f7rpan"u,ZM`.JEhGi*.daiff5B!7^KH=E@H"7pU9#s["qA,`SYq;pLET#7HDELM7L@d6^iNT2!_t=-7DXdT
%,KNo8o.u'9:>Ml@Zk9N^'0D/u6@"K^-dn8=Z3V\C&@&@Y"YZdgnUuTC\q$\*F`g6`<4$4C0r^#n/Fb#(Re,B^?h+(gmLcE;c7mNu
%*&KBhG?1WOmos2ic0[@hnjh<VOkB^Q(R[c$gbNKqEmnYo;S8qnd!RZCXQM:D"J^/AflTNgE=b!M(W)B&BO)kQ#oX.TJ6^q9S;.O.
%?N%Bpm?,c10>8](^XH+^&k^X?"*d\/;JRhG:*P^8A&<bt0<@mlWn@bi)EB.F+l$qb#W+#)QW+,_flWA693tV-+K@X"acYXja6dKk
%EUUM[\et>F7[$\##Qo(s$$dEel><37bTbM08rr0kjA403gu'Xh9n2&J]`L?<XeUG*^2DKces7UDSMCUPAW24aQ_ba>TK,5D`;sf<
%1RL6?Y(m?:RZ6s.G%[LQX8.#!C'53.o`2"&j25D.7$[0Q!0e</gJE9QNRX8JLg;T+#\3W4@72:^V&2eA',t_=S&:@nS+WZ]-dZk"
%53)ZJfE!WGBnm8s/(CB5$R,nQP8p=P#@RP*;7t)OdA:S?._E@NV.>Y&,-GI+T`\mC2Q"M5k41.np1[lFaJsJIah.OI9m:n(Es;sG
%l$['a]aGqE:YE^'GbZjl7*3g\QjL_;1;.N;HIpg=OP?[D;f?mUo\JPMo*AW^nt2t;\1fZ'(?ig3,3$>(^]5(@LI)ahWlru_<b959
%na`TV,Mo/ZV>l7lLgMpnnaJK`)t6WV,UOc2bsDB=6K1cl,l[>!=;*aOTNT`<`WAcCJ5B1RcmRjo426o`^<Z:%A<d<]P1c#W%RTrg
%M\cY(O[#H!g!`Eff9PX_Ki?l6pi--F(Yec!;QlX\+GpEHe)m"A_R[]gjGt\arn72'p@5[5A).Oi0*5'Bo$h[OGPQ7NGPO(7,X^GL
%St1RSKR,uP(&?lmDOCogf7epKFbd,fm,@^_-9Ve9o_2kBjql:Z\[PZ$O(\:`jS`ZefNaI*_hCV@<=78G!eAo+Df0/UU8d4Jqh#02
%8FYctTDn\Qgme'T!(Z`<`<#MjmEO.8kOipF$noJlg6"lr2YO<jL$X(\YHRj:+(bSph\tR*Y)oJ5r7:%ld4Yu4MUFLak:Q>,iZC;V
%=LLK;4BE>LQW2ag$Na<td0!dHajcuY%iHVqS/cQPP#foBMfFH(cVd,^6t0/'bsrqP\nQ4QdcF#4,.#bY8P[i5HFUuLE."[CGOLpB
%*ff.:@U1OihfrA\jq_okOPFu-dj4R'NI+LmnJRB8q>SY9gSWB/1;\Mn.h]pm\NCD.Ge+<`;C\8Z)+<R1ha4VrnTF>a*e0Un=Z-u8
%jejgms+Ql'0,_IuMSJt/1D4#aAUXGKinqsNb;"74%@PHa)`#9PW%QSr:nmNRG57n?()9uU],YJX6>D4)R%649G8\kC*G&bP&`O-'
%BKdKVUd/NEhYnk_>[%r0\s;P+HoQSpOIL#?3!7L`#WU,]&6=9d.7^(U9e?mdJ&pYI4FQi#[V9]`N:<J*;Wu_6]C#@)Gpra=,MrQc
%4!>@a<k#J@k/<02"nm2Oq<k_F/'^jdZi>_3KpU#-I)XujqP=27Yaa"+s)oc;lCD>)3Nk7UdU:a2'^l!?PTs\-lLXsW*cup!fT_R9
%1'94PW<#U@o0>.cSSjtJC=QQ?0+=@ulhpC%EiuL^*hH[q$a!cNGK@gKgn3\"kf!)I.\XoR]=DE(]@3&*TAef0^V">bNT1A?H\;>a
%)f6!A4oOfFUF6Zb`/k,-1P7G2JrsjpOc[?(4nYuG*[FmpM"(,:VlFWWX8:]<3`Y/D?*R%YXu'-/r]SGiD]>^hY0_(iT8P(ER7.F*
%f?l_Q$H5#"/AH*_n$Q1LfV,MU%m_oZ=hn>SIu^<'A4)pH3\!D7W(YY=&Rc9E[%_Q%?g/[A@:DU8(d5-W)!#-H<#\5WiFDP3CINhS
%FDpBBVC.b(+:E.8_o9>FQb)g@VK7CVneS,-*&e+AhQjL%:N%p(7W3qb2L*bF"FKQh+KIE5+*c)]IZ@2tC6.)qrii<co3du<QSXO7
%hePE>H?3[A%6#l[g)LgU7'bd_Pl2TrFh>6CTqs\H*T<d$Sm];-?n(@OFYgqUQ3f8^F1g(u;qT852`r!8JU$NpWoY'ONZKVFE/\?@
%\ZeZ?7_8hGpdo3%-oS>(a)qh-)5m:?gp>OqJV71"+d!XRLfgYb0`47UNXV54'%AL1e^Cp>EcYR*$@0KOUUmV)*tI>7_Jccnh92R>
%H#$e)mRVuY;B-4W#Mca-32g:8L1VXF;-i97Nh^uY.XY_GVaA6p%c`<*-uQ8E>8QOD3Ts7)4;]"ip19ZA'c5L]3L?:gp^5<E34,SO
%-bpFk:^Su+m0qAnJ16@;StgPG/Zo;#*eAr\.?(IgHi;;ZXeE(_%8S=sl5Yak4Q%ZI8)+k$e@CK<r;!uZhG0@.'M&hPi=s34Cr*NM
%O@7ra0abDJ;"\\@Gc*G/_A#^QS/A!<e3s[;8Zh7t`rh^g\DoRj)'4B_CCB+>/^#lj(Qr9k000COmj)aks%4R:[L]6rgoMKlK3&QA
%YJaYU;pOnkj"!Wu`R3uNFG*g^o(bh^,E,5D3m)RIC8?2uI;616&L2/W4g)#b+m!L%U<"L02M0Z3*YlEE`A)s-Z_JfW\\Rr\Hr;;C
%/#-'M7=i>C;Xe_8%)jN"3!co>#XK(8Vj="!TkNiqh.P6g)q:6bQC_A4UhJJr-SdWlCiu0kkfYbe&T;Lg;OW^hZ"Y,d3ZkKh47-8(
%Jb;<.dT-Q^-Z!9gRf=FgJ\`_Ge5KAr&KRV1AaCD-"c;u?_-W&WZNO+7CSHdkFTHTr>_9,p%^_r?IEB"Z=thLZ$SOV,[<oXF?[ob=
%@:D0+a$edXgfR0ifsUDs=3AeA<E`:k1:0dOVpG#\G(!'Bd</a$HJRPeY[-haHM?aCp?j*(/j$n,)D\Mp+=D!KrTT^9F84HR*])aP
%p<T]:)^gMooMmg$:M-$-Z^+SPJa:L+X<qO#da`s[W1Yb1[5*1XDAU]ONAK#3fje>MrRXj^4CYnp@#QP8$7QhW,"^Q2q'6ThN_)]C
%6J3W9<PoG?)f]-0H#hmT6c#opR6>O%!hSZ9B_G!2=@N^0Z!`f?c-cggQlj>9_%-=iJqW3?T[%uJFp7%]m_me041(>Ujc?a_%lJPD
%\l$F5CJgV(*2uXKc"iG#&(of\A];\?d6*]Md3q[Dl#n)`p&h[4$0WToe`K%oLW8^#if+,Zd,2.$Rb?s0["k:jFlD>;LRBEmSK!l2
%khJ'T3.S_"QSA#`WJaM-_kMJopL8R^($Fu0]AK1)_06RWgl?K9'c2_^fNFXLM;WFb>i?;\l-5YB%%)EH:#Rp'HW"$f`Qp]GT/c:O
%&A?P+[S3!;b!+qm#B^&h_d%er66qr0Yu(^A0J%e`5<RAfms-W!L]38j"tB;UZBP504o$TPGu74bJ6<iu^TT@&8\Kdf!Za,?G!4n\
%d-QsB#6\uI'sh*M5i!ds7#K\"k[p4_?%H*cb*nbD<AH(V$QjbggPoHjH?d'L%S,>m1s-tf_L;UO8)b]*]);gT^8Wo:>rGCS8De)%
%Ki1QW&ZI?f!]Z.o.m6HPB?s=g_K")'IQ02g123EfaKYgZfco'i5HVJH;:D_O/:_V=&>3eM$)Xik#c[JtZHL'!0-!-P:!0E:E&Q:e
%'eMnunC2M"[?Elo'G2XA6`IFM%Q3#q'84P`gSuAj_?ncrb".\LKTW0i-$961_b>Zai_m*<X:D&RIMt$IZ=+>MqVfMemTSS);k#*0
%!9GIuSi'!JU5D/J)E:JQl7,=AnH'^&*SK#n\<0rP9f6iAb8HMt.qN\X??$>RPE8P61<"iFrd.qfV1-r.Aa$$G:qpkV.Uic-*7`5f
%=KiT+PeV_G\bfXKfu<[Bh;.u&"ZZIf^"WF.\%ODtR^[4<m^I]7::@X@OM(HorcE1'\%@.bEjn-@s6Iim5k$#q_<L4[00d-uo,h(fh[K~>
%AI9_PrivateDataEnd
